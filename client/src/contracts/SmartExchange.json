{
  "contractName": "SmartExchange",
  "abi": [
    {
      "inputs": [],
<<<<<<< HEAD
      "name": "BUSD",
||||||| merged common ancestors
      "name": "pFACTORY",
=======
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "BalanceEvent",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BUSD",
>>>>>>> origin/ajibigad/token-swap
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pROUTER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wBNB",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "swap",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
<<<<<<< HEAD
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BUSD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pROUTER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wBNB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/USER/Desktop/BLOCKCHAIN/SmartBet/contracts/SmartExchange.sol\":\"SmartExchange\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/USER/Desktop/BLOCKCHAIN/SmartBet/contracts/Bep20.sol\":{\"keccak256\":\"0x193b23d6594f93f686dd9dd66269f1c3bb8cc2bc333c30e6551cd28e98750409\",\"urls\":[\"bzz-raw://27cea4a0a15831002f1e82417bc9396b2d2fae967f2839c0e31af948fdc1b15f\",\"dweb:/ipfs/QmQk9xS1WG3YsgBtrf8PapKeyD5EvKZFwyPErLRqyCsJYw\"]},\"/C/Users/USER/Desktop/BLOCKCHAIN/SmartBet/contracts/SmartExchange.sol\":{\"keccak256\":\"0x3cbc553577fc832006d26700f9f0556c044626cf47db9c6c23de0f5262a62b88\",\"urls\":[\"bzz-raw://df7cf8b8ca9442b6ba49b8a0ad24f596d391bc87bd1b10eb6754a3074a4e47a7\",\"dweb:/ipfs/QmPYWpuhJJyuhW8zKbFGZhwAaXQKp3EgirmLxbNM29WGbH\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506109e2806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063484f4ea914610051578063d02eb3f41461006f578063d3986f081461008d578063e71efd95146100bd575b600080fd5b6100596100db565b6040516100669190610753565b60405180910390f35b6100776100f3565b6040516100849190610753565b60405180910390f35b6100a760048036038101906100a291906105e0565b61010b565b6040516100b491906107c0565b60405180910390f35b6100c5610474565b6040516100d29190610753565b60405180910390f35b738301f2213c0eed49a7e28ae4c3e91722919b8b4781565b73ae13d989dac2f0debff460ac112a837c89baa7cd81565b6060600073d99d1c33f9fc3444f8101754abc46c52416550d190506000738301f2213c0eed49a7e28ae4c3e91722919b8b479050600073ae13d989dac2f0debff460ac112a837c89baa7cd90508073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0876040518263ffffffff1660e01b81526004016000604051808303818588803b1580156101a057600080fd5b505af11580156101b4573d6000803e3d6000fd5b50505050508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b38460006040518363ffffffff1660e01b81526004016101f592919061076e565b602060405180830381600087803b15801561020f57600080fd5b505af1158015610223573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024791906105b7565b508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b384886040518363ffffffff1660e01b8152600401610283929190610797565b602060405180830381600087803b15801561029d57600080fd5b505af11580156102b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d591906105b7565b506000869050600080600267ffffffffffffffff811180156102f657600080fd5b506040519080825280602002602001820160405280156103255781602001602082028036833780820191505090505b509050838160008151811061033657fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050848160018151811061037e57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600088905060006102584201905060008873ffffffffffffffffffffffffffffffffffffffff166338ed173987878787876040518663ffffffff1660e01b81526004016104099594939291906107e2565b600060405180830381600087803b15801561042357600080fd5b505af1158015610437573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104609190610576565b905080995050505050505050505092915050565b73d99d1c33f9fc3444f8101754abc46c52416550d181565b600061049f61049a8461086d565b61083c565b905080838252602082019050828560208602820111156104be57600080fd5b60005b858110156104ee57816104d48882610561565b8452602084019350602083019250506001810190506104c1565b5050509392505050565b60008135905061050781610967565b92915050565b600082601f83011261051e57600080fd5b815161052e84826020860161048c565b91505092915050565b6000815190506105468161097e565b92915050565b60008135905061055b81610995565b92915050565b60008151905061057081610995565b92915050565b60006020828403121561058857600080fd5b600082015167ffffffffffffffff8111156105a257600080fd5b6105ae8482850161050d565b91505092915050565b6000602082840312156105c957600080fd5b60006105d784828501610537565b91505092915050565b600080604083850312156105f357600080fd5b60006106018582860161054c565b9250506020610612858286016104f8565b9150509250929050565b6000610628838361064c565b60208301905092915050565b60006106408383610735565b60208301905092915050565b6106558161090b565b82525050565b6106648161090b565b82525050565b6000610675826108b9565b61067f81856108e9565b935061068a83610899565b8060005b838110156106bb5781516106a2888261061c565b97506106ad836108cf565b92505060018101905061068e565b5085935050505092915050565b60006106d3826108c4565b6106dd81856108fa565b93506106e8836108a9565b8060005b838110156107195781516107008882610634565b975061070b836108dc565b9250506001810190506106ec565b5085935050505092915050565b61072f81610953565b82525050565b61073e81610949565b82525050565b61074d81610949565b82525050565b6000602082019050610768600083018461065b565b92915050565b6000604082019050610783600083018561065b565b6107906020830184610726565b9392505050565b60006040820190506107ac600083018561065b565b6107b96020830184610744565b9392505050565b600060208201905081810360008301526107da81846106c8565b905092915050565b600060a0820190506107f76000830188610744565b6108046020830187610744565b8181036040830152610816818661066a565b9050610825606083018561065b565b6108326080830184610744565b9695505050505050565b6000604051905081810181811067ffffffffffffffff8211171561086357610862610965565b5b8060405250919050565b600067ffffffffffffffff82111561088857610887610965565b5b602082029050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061091682610929565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061095e82610949565b9050919050565bfe5b6109708161090b565b811461097b57600080fd5b50565b6109878161091d565b811461099257600080fd5b50565b61099e81610949565b81146109a957600080fd5b5056fea26469706673582212209cf7d53d457e2c39cca0def75485bd1215d22f049f2b6301c53b80478a078e4b64736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063484f4ea914610051578063d02eb3f41461006f578063d3986f081461008d578063e71efd95146100bd575b600080fd5b6100596100db565b6040516100669190610753565b60405180910390f35b6100776100f3565b6040516100849190610753565b60405180910390f35b6100a760048036038101906100a291906105e0565b61010b565b6040516100b491906107c0565b60405180910390f35b6100c5610474565b6040516100d29190610753565b60405180910390f35b738301f2213c0eed49a7e28ae4c3e91722919b8b4781565b73ae13d989dac2f0debff460ac112a837c89baa7cd81565b6060600073d99d1c33f9fc3444f8101754abc46c52416550d190506000738301f2213c0eed49a7e28ae4c3e91722919b8b479050600073ae13d989dac2f0debff460ac112a837c89baa7cd90508073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0876040518263ffffffff1660e01b81526004016000604051808303818588803b1580156101a057600080fd5b505af11580156101b4573d6000803e3d6000fd5b50505050508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b38460006040518363ffffffff1660e01b81526004016101f592919061076e565b602060405180830381600087803b15801561020f57600080fd5b505af1158015610223573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024791906105b7565b508073ffffffffffffffffffffffffffffffffffffffff1663095ea7b384886040518363ffffffff1660e01b8152600401610283929190610797565b602060405180830381600087803b15801561029d57600080fd5b505af11580156102b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d591906105b7565b506000869050600080600267ffffffffffffffff811180156102f657600080fd5b506040519080825280602002602001820160405280156103255781602001602082028036833780820191505090505b509050838160008151811061033657fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050848160018151811061037e57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600088905060006102584201905060008873ffffffffffffffffffffffffffffffffffffffff166338ed173987878787876040518663ffffffff1660e01b81526004016104099594939291906107e2565b600060405180830381600087803b15801561042357600080fd5b505af1158015610437573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104609190610576565b905080995050505050505050505092915050565b73d99d1c33f9fc3444f8101754abc46c52416550d181565b600061049f61049a8461086d565b61083c565b905080838252602082019050828560208602820111156104be57600080fd5b60005b858110156104ee57816104d48882610561565b8452602084019350602083019250506001810190506104c1565b5050509392505050565b60008135905061050781610967565b92915050565b600082601f83011261051e57600080fd5b815161052e84826020860161048c565b91505092915050565b6000815190506105468161097e565b92915050565b60008135905061055b81610995565b92915050565b60008151905061057081610995565b92915050565b60006020828403121561058857600080fd5b600082015167ffffffffffffffff8111156105a257600080fd5b6105ae8482850161050d565b91505092915050565b6000602082840312156105c957600080fd5b60006105d784828501610537565b91505092915050565b600080604083850312156105f357600080fd5b60006106018582860161054c565b9250506020610612858286016104f8565b9150509250929050565b6000610628838361064c565b60208301905092915050565b60006106408383610735565b60208301905092915050565b6106558161090b565b82525050565b6106648161090b565b82525050565b6000610675826108b9565b61067f81856108e9565b935061068a83610899565b8060005b838110156106bb5781516106a2888261061c565b97506106ad836108cf565b92505060018101905061068e565b5085935050505092915050565b60006106d3826108c4565b6106dd81856108fa565b93506106e8836108a9565b8060005b838110156107195781516107008882610634565b975061070b836108dc565b9250506001810190506106ec565b5085935050505092915050565b61072f81610953565b82525050565b61073e81610949565b82525050565b61074d81610949565b82525050565b6000602082019050610768600083018461065b565b92915050565b6000604082019050610783600083018561065b565b6107906020830184610726565b9392505050565b60006040820190506107ac600083018561065b565b6107b96020830184610744565b9392505050565b600060208201905081810360008301526107da81846106c8565b905092915050565b600060a0820190506107f76000830188610744565b6108046020830187610744565b8181036040830152610816818661066a565b9050610825606083018561065b565b6108326080830184610744565b9695505050505050565b6000604051905081810181811067ffffffffffffffff8211171561086357610862610965565b5b8060405250919050565b600067ffffffffffffffff82111561088857610887610965565b5b602082029050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061091682610929565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061095e82610949565b9050919050565bfe5b6109708161090b565b811461097b57600080fd5b50565b6109878161091d565b811461099257600080fd5b50565b61099e81610949565b81146109a957600080fd5b5056fea26469706673582212209cf7d53d457e2c39cca0def75485bd1215d22f049f2b6301c53b80478a078e4b64736f6c63430007060033",
||||||| merged common ancestors
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"invest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pFACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pROUTER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTreasury\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/ajibigad/crytoproject/SmartBet/contracts/SmartExchange.sol\":\"SmartExchange\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/ajibigad/crytoproject/SmartBet/contracts/SmartExchange.sol\":{\"keccak256\":\"0xeae9f6246d0e7c40dff818337b8d60a910a72f153c11480fedfe60e194069556\",\"urls\":[\"bzz-raw://f8409525e4b46bd6ede2cbd69dcf51f5125c9a4e9c5708ed93b2f6218308ee4c\",\"dweb:/ipfs/QmcHNmZ2pXWekMV9moJD3kXe4TRkEa65ARJhHNJ2KyAMQd\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610235806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632afcf48014610051578063897534a91461006d578063990cc0581461008b578063e71efd95146100a9575b600080fd5b61006b6004803603810190610066919061012f565b6100c7565b005b6100756100e4565b6040516100829190610191565b60405180910390f35b6100936100ea565b6040516100a09190610176565b60405180910390f35b6100b1610102565b6040516100be9190610176565b60405180910390f35b6000736725f303b657a9451d8ba641348b6761a6cc7a1790505050565b60005481565b736725f303b657a9451d8ba641348b6761a6cc7a1781565b73d99d1c33f9fc3444f8101754abc46c52416550d181565b600081359050610129816101e8565b92915050565b60006020828403121561014157600080fd5b600061014f8482850161011a565b91505092915050565b610161816101ac565b82525050565b610170816101de565b82525050565b600060208201905061018b6000830184610158565b92915050565b60006020820190506101a66000830184610167565b92915050565b60006101b7826101be565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6101f1816101de565b81146101fc57600080fd5b5056fea264697066735822122026aaad132a0a3d5dfec7fb65102f4db8a25c44b5b83fb70f69d5d8b9321f297964736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80632afcf48014610051578063897534a91461006d578063990cc0581461008b578063e71efd95146100a9575b600080fd5b61006b6004803603810190610066919061012f565b6100c7565b005b6100756100e4565b6040516100829190610191565b60405180910390f35b6100936100ea565b6040516100a09190610176565b60405180910390f35b6100b1610102565b6040516100be9190610176565b60405180910390f35b6000736725f303b657a9451d8ba641348b6761a6cc7a1790505050565b60005481565b736725f303b657a9451d8ba641348b6761a6cc7a1781565b73d99d1c33f9fc3444f8101754abc46c52416550d181565b600081359050610129816101e8565b92915050565b60006020828403121561014157600080fd5b600061014f8482850161011a565b91505092915050565b610161816101ac565b82525050565b610170816101de565b82525050565b600060208201905061018b6000830184610158565b92915050565b60006020820190506101a66000830184610167565b92915050565b60006101b7826101be565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6101f1816101de565b81146101fc57600080fd5b5056fea264697066735822122026aaad132a0a3d5dfec7fb65102f4db8a25c44b5b83fb70f69d5d8b9321f297964736f6c63430007060033",
=======
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"BalanceEvent\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BUSD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pROUTER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wBNB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/ajibigad/crytoproject/SmartBet/contracts/SmartExchange.sol\":\"SmartExchange\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/ajibigad/crytoproject/SmartBet/contracts/BEP20.sol\":{\"keccak256\":\"0x30e126be87a8e17047281d5fcfef18aa4a8e6f0c9b5cd50a8fb9c91a323cfe99\",\"urls\":[\"bzz-raw://4a545c3e5af6376fe310b86205cff67cc994d07100166c801cd5575450d74a49\",\"dweb:/ipfs/QmPt52YwN1F2QWTQf6VWWbi69wFKWF44UivDTRgnQ51Uih\"]},\"/Users/ajibigad/crytoproject/SmartBet/contracts/HelperPancakeSwapROUTER.sol\":{\"keccak256\":\"0x18d363b131f4eddf976384c887bc9b97c5c6d4cac052173ba1af07d12dce4230\",\"urls\":[\"bzz-raw://464c506de06a123b45694b5d874b08d149a90d278efed9990ce54361a189d82a\",\"dweb:/ipfs/QmP8FvU9DXbte95NHF8d9CezXhQPHpw6Y8fxcbbnq4C2oP\"]},\"/Users/ajibigad/crytoproject/SmartBet/contracts/SmartExchange.sol\":{\"keccak256\":\"0x4ccb64a6554829a50ea946452c2feb2b84f9d800f414406b35e0a404add9ed1e\",\"urls\":[\"bzz-raw://8e332c63332c00d56349a07691f6d56dd7a9781248c5ac28cb77161dcd7365d4\",\"dweb:/ipfs/QmPV7KDZ8DmLk6e3T5UoMW8SKQWjcVs9RT8HUDExKTfLL9\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5073ae13d989dac2f0debff460ac112a837c89baa7cd6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550738301f2213c0eed49a7e28ae4c3e91722919b8b47600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073d99d1c33f9fc3444f8101754abc46c52416550d1600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610c2d8061011e6000396000f3fe6080604052600436106100435760003560e01c8063484f4ea91461004f578063d02eb3f41461007a578063d3986f08146100a5578063e71efd95146100e25761004a565b3661004a57005b600080fd5b34801561005b57600080fd5b5061006461010d565b604051610071919061094d565b60405180910390f35b34801561008657600080fd5b5061008f610125565b60405161009c919061094d565b60405180910390f35b3480156100b157600080fd5b506100cc60048036038101906100c791906107cb565b61013d565b6040516100d991906109d5565b60405180910390f35b3480156100ee57600080fd5b506100f7610636565b604051610104919061094d565b60405180910390f35b738301f2213c0eed49a7e28ae4c3e91722919b8b4781565b73ae13d989dac2f0debff460ac112a837c89baa7cd81565b606060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b1580156101a757600080fd5b505af11580156101bb573d6000803e3d6000fd5b505050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518363ffffffff1660e01b815260040161023d9291906109ac565b602060405180830381600087803b15801561025757600080fd5b505af115801561026b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028f9190610779565b506000600267ffffffffffffffff811180156102aa57600080fd5b506040519080825280602002602001820160405280156102d95781602001602082028036833780820191505090505b50905073ae13d989dac2f0debff460ac112a837c89baa7cd816000815181106102fe57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050738301f2213c0eed49a7e28ae4c3e91722919b8b478160018151811061035a57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506000610258420190506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338ed17398760008689876040518663ffffffff1660e01b81526004016104039594939291906109f7565b600060405180830381600087803b15801561041d57600080fd5b505af1158015610431573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061045a9190610738565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104b89190610968565b60206040518083038186803b1580156104d057600080fd5b505afa1580156104e4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050891906107a2565b90507fe664862cc73c0e03c0f3ee110e89fea8ae7af45a3bd6ada129e3028d4c03bc8b308260405161053b929190610983565b60405180910390a1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161059e9190610968565b60206040518083038186803b1580156105b657600080fd5b505afa1580156105ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ee91906107a2565b90507fe664862cc73c0e03c0f3ee110e89fea8ae7af45a3bd6ada129e3028d4c03bc8b3082604051610621929190610983565b60405180910390a18194505050505092915050565b73d99d1c33f9fc3444f8101754abc46c52416550d181565b600061066161065c84610a82565b610a51565b9050808382526020820190508285602086028201111561068057600080fd5b60005b858110156106b057816106968882610723565b845260208401935060208301925050600181019050610683565b5050509392505050565b6000813590506106c981610bb2565b92915050565b600082601f8301126106e057600080fd5b81516106f084826020860161064e565b91505092915050565b60008151905061070881610bc9565b92915050565b60008135905061071d81610be0565b92915050565b60008151905061073281610be0565b92915050565b60006020828403121561074a57600080fd5b600082015167ffffffffffffffff81111561076457600080fd5b610770848285016106cf565b91505092915050565b60006020828403121561078b57600080fd5b6000610799848285016106f9565b91505092915050565b6000602082840312156107b457600080fd5b60006107c284828501610723565b91505092915050565b600080604083850312156107de57600080fd5b60006107ec8582860161070e565b92505060206107fd858286016106ba565b9150509250929050565b60006108138383610846565b60208301905092915050565b600061082b838361092f565b60208301905092915050565b61084081610b68565b82525050565b61084f81610b20565b82525050565b61085e81610b20565b82525050565b600061086f82610ace565b6108798185610afe565b935061088483610aae565b8060005b838110156108b557815161089c8882610807565b97506108a783610ae4565b925050600181019050610888565b5085935050505092915050565b60006108cd82610ad9565b6108d78185610b0f565b93506108e283610abe565b8060005b838110156109135781516108fa888261081f565b975061090583610af1565b9250506001810190506108e6565b5085935050505092915050565b61092981610b7a565b82525050565b61093881610b5e565b82525050565b61094781610b5e565b82525050565b60006020820190506109626000830184610855565b92915050565b600060208201905061097d6000830184610837565b92915050565b60006040820190506109986000830185610837565b6109a5602083018461093e565b9392505050565b60006040820190506109c16000830185610855565b6109ce602083018461093e565b9392505050565b600060208201905081810360008301526109ef81846108c2565b905092915050565b600060a082019050610a0c600083018861093e565b610a196020830187610920565b8181036040830152610a2b8186610864565b9050610a3a6060830185610855565b610a47608083018461093e565b9695505050505050565b6000604051905081810181811067ffffffffffffffff82111715610a7857610a77610bb0565b5b8060405250919050565b600067ffffffffffffffff821115610a9d57610a9c610bb0565b5b602082029050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610b2b82610b3e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610b7382610b8c565b9050919050565b6000610b8582610b5e565b9050919050565b6000610b9782610b9e565b9050919050565b6000610ba982610b3e565b9050919050565bfe5b610bbb81610b20565b8114610bc657600080fd5b50565b610bd281610b32565b8114610bdd57600080fd5b50565b610be981610b5e565b8114610bf457600080fd5b5056fea264697066735822122066acccaf017ba0cb3c015540c3e21b31538a0b50416ea4222b59b01cd7de95de64736f6c63430007060033",
  "deployedBytecode": "0x6080604052600436106100435760003560e01c8063484f4ea91461004f578063d02eb3f41461007a578063d3986f08146100a5578063e71efd95146100e25761004a565b3661004a57005b600080fd5b34801561005b57600080fd5b5061006461010d565b604051610071919061094d565b60405180910390f35b34801561008657600080fd5b5061008f610125565b60405161009c919061094d565b60405180910390f35b3480156100b157600080fd5b506100cc60048036038101906100c791906107cb565b61013d565b6040516100d991906109d5565b60405180910390f35b3480156100ee57600080fd5b506100f7610636565b604051610104919061094d565b60405180910390f35b738301f2213c0eed49a7e28ae4c3e91722919b8b4781565b73ae13d989dac2f0debff460ac112a837c89baa7cd81565b606060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0846040518263ffffffff1660e01b81526004016000604051808303818588803b1580156101a757600080fd5b505af11580156101bb573d6000803e3d6000fd5b505050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518363ffffffff1660e01b815260040161023d9291906109ac565b602060405180830381600087803b15801561025757600080fd5b505af115801561026b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028f9190610779565b506000600267ffffffffffffffff811180156102aa57600080fd5b506040519080825280602002602001820160405280156102d95781602001602082028036833780820191505090505b50905073ae13d989dac2f0debff460ac112a837c89baa7cd816000815181106102fe57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050738301f2213c0eed49a7e28ae4c3e91722919b8b478160018151811061035a57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506000610258420190506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338ed17398760008689876040518663ffffffff1660e01b81526004016104039594939291906109f7565b600060405180830381600087803b15801561041d57600080fd5b505af1158015610431573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061045a9190610738565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104b89190610968565b60206040518083038186803b1580156104d057600080fd5b505afa1580156104e4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050891906107a2565b90507fe664862cc73c0e03c0f3ee110e89fea8ae7af45a3bd6ada129e3028d4c03bc8b308260405161053b929190610983565b60405180910390a1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161059e9190610968565b60206040518083038186803b1580156105b657600080fd5b505afa1580156105ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ee91906107a2565b90507fe664862cc73c0e03c0f3ee110e89fea8ae7af45a3bd6ada129e3028d4c03bc8b3082604051610621929190610983565b60405180910390a18194505050505092915050565b73d99d1c33f9fc3444f8101754abc46c52416550d181565b600061066161065c84610a82565b610a51565b9050808382526020820190508285602086028201111561068057600080fd5b60005b858110156106b057816106968882610723565b845260208401935060208301925050600181019050610683565b5050509392505050565b6000813590506106c981610bb2565b92915050565b600082601f8301126106e057600080fd5b81516106f084826020860161064e565b91505092915050565b60008151905061070881610bc9565b92915050565b60008135905061071d81610be0565b92915050565b60008151905061073281610be0565b92915050565b60006020828403121561074a57600080fd5b600082015167ffffffffffffffff81111561076457600080fd5b610770848285016106cf565b91505092915050565b60006020828403121561078b57600080fd5b6000610799848285016106f9565b91505092915050565b6000602082840312156107b457600080fd5b60006107c284828501610723565b91505092915050565b600080604083850312156107de57600080fd5b60006107ec8582860161070e565b92505060206107fd858286016106ba565b9150509250929050565b60006108138383610846565b60208301905092915050565b600061082b838361092f565b60208301905092915050565b61084081610b68565b82525050565b61084f81610b20565b82525050565b61085e81610b20565b82525050565b600061086f82610ace565b6108798185610afe565b935061088483610aae565b8060005b838110156108b557815161089c8882610807565b97506108a783610ae4565b925050600181019050610888565b5085935050505092915050565b60006108cd82610ad9565b6108d78185610b0f565b93506108e283610abe565b8060005b838110156109135781516108fa888261081f565b975061090583610af1565b9250506001810190506108e6565b5085935050505092915050565b61092981610b7a565b82525050565b61093881610b5e565b82525050565b61094781610b5e565b82525050565b60006020820190506109626000830184610855565b92915050565b600060208201905061097d6000830184610837565b92915050565b60006040820190506109986000830185610837565b6109a5602083018461093e565b9392505050565b60006040820190506109c16000830185610855565b6109ce602083018461093e565b9392505050565b600060208201905081810360008301526109ef81846108c2565b905092915050565b600060a082019050610a0c600083018861093e565b610a196020830187610920565b8181036040830152610a2b8186610864565b9050610a3a6060830185610855565b610a47608083018461093e565b9695505050505050565b6000604051905081810181811067ffffffffffffffff82111715610a7857610a77610bb0565b5b8060405250919050565b600067ffffffffffffffff821115610a9d57610a9c610bb0565b5b602082029050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610b2b82610b3e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610b7382610b8c565b9050919050565b6000610b8582610b5e565b9050919050565b6000610b9782610b9e565b9050919050565b6000610ba982610b3e565b9050919050565bfe5b610bbb81610b20565b8114610bc657600080fd5b50565b610bd281610b32565b8114610bdd57600080fd5b50565b610be981610b5e565b8114610bf457600080fd5b5056fea264697066735822122066acccaf017ba0cb3c015540c3e21b31538a0b50416ea4222b59b01cd7de95de64736f6c63430007060033",
>>>>>>> origin/ajibigad/token-swap
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
        "src": "0:10074:31",
||||||| merged common ancestors
        "src": "0:1566:29",
=======
        "src": "0:11168:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
        "src": "0:11168:32",
=======
        "src": "0:11168:33",
>>>>>>> origin/ajibigad/token-swap
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "137:531:31",
||||||| merged common ancestors
              "src": "59:87:29",
=======
              "src": "137:531:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "137:531:32",
=======
              "src": "137:531:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
<<<<<<< HEAD
                  "src": "147:89:31",
||||||| merged common ancestors
                  "src": "69:29:29",
=======
                  "src": "147:89:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "src": "147:89:32",
=======
                  "src": "147:89:33",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "228:6:31"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "171:56:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "171:64:31"
||||||| merged common ancestors
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:29"
=======
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "228:6:33"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "171:56:33"
                        },
                        "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                        "src": "171:64:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "171:64:32"
=======
                        "src": "171:64:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "allocateMemory",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "156:14:31"
||||||| merged common ancestors
                      "src": "78:12:29"
=======
                      "src": "156:14:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "156:14:32"
=======
                      "src": "156:14:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "156:80:31"
||||||| merged common ancestors
                    "src": "78:20:29"
=======
                    "src": "156:80:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "156:80:32"
=======
                    "src": "156:80:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "147:5:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "245:16:31",
                  "value": {
                    "name": "array",
                    "nodeType": "YulIdentifier",
                    "src": "256:5:31"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "249:3:31",
                      "type": ""
||||||| merged common ancestors
                      "src": "69:5:29"
=======
                      "src": "147:5:32"
||||||| merged common ancestors
                      "src": "147:5:32"
=======
                      "src": "147:5:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "245:16:33",
                  "value": {
                    "name": "array",
                    "nodeType": "YulIdentifier",
                    "src": "256:5:33"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "249:3:33",
                      "type": ""
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "277:5:31"
                      },
                      {
                        "name": "length",
||||||| merged common ancestors
                        "name": "value",
=======
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "277:5:33"
                      },
                      {
                        "name": "length",
>>>>>>> origin/ajibigad/token-swap
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "284:6:31"
||||||| merged common ancestors
                        "src": "134:5:29"
=======
                        "src": "284:6:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "284:6:32"
=======
                        "src": "284:6:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "270:6:31"
||||||| merged common ancestors
                      "src": "107:26:29"
=======
                      "src": "270:6:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "270:6:32"
=======
                      "src": "270:6:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "270:21:31"
||||||| merged common ancestors
                    "src": "107:33:29"
=======
                    "src": "270:21:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "270:21:32"
=======
                    "src": "270:21:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "nodeType": "YulExpressionStatement",
<<<<<<< HEAD
<<<<<<< HEAD
                  "src": "270:21:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "292:23:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "303:5:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "310:4:31",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "299:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "299:16:31"
                  },
                  "variableNames": [
                    {
                      "name": "dst",
                      "nodeType": "YulIdentifier",
                      "src": "292:3:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "324:17:31",
                  "value": {
                    "name": "offset",
                    "nodeType": "YulIdentifier",
                    "src": "335:6:31"
                  },
                  "variables": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "328:3:31",
                      "type": ""
                    }
                  ]
                },
||||||| merged common ancestors
                  "src": "107:33:29"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:29",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:29",
                "type": ""
              }
            ],
            "src": "7:139:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "218:196:29",
              "statements": [
=======
                  "src": "270:21:32"
||||||| merged common ancestors
                  "src": "270:21:32"
=======
                  "src": "270:21:33"
>>>>>>> origin/ajibigad/token-swap
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "292:23:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "303:5:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "310:4:33",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "299:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "299:16:33"
                  },
                  "variableNames": [
                    {
                      "name": "dst",
                      "nodeType": "YulIdentifier",
                      "src": "292:3:33"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "324:17:33",
                  "value": {
                    "name": "offset",
                    "nodeType": "YulIdentifier",
                    "src": "335:6:33"
                  },
                  "variables": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "328:3:33",
                      "type": ""
                    }
                  ]
                },
>>>>>>> origin/ajibigad/token-swap
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "390:16:31",
||||||| merged common ancestors
                    "src": "264:16:29",
=======
                    "src": "390:16:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "390:16:32",
=======
                    "src": "390:16:33",
>>>>>>> origin/ajibigad/token-swap
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
<<<<<<< HEAD
                              "src": "399:1:31",
||||||| merged common ancestors
                              "src": "273:1:29",
=======
                              "src": "399:1:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                              "src": "399:1:32",
=======
                              "src": "399:1:33",
>>>>>>> origin/ajibigad/token-swap
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
<<<<<<< HEAD
                              "src": "402:1:31",
||||||| merged common ancestors
                              "src": "276:1:29",
=======
                              "src": "402:1:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                              "src": "402:1:32",
=======
                              "src": "402:1:33",
>>>>>>> origin/ajibigad/token-swap
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "392:6:31"
||||||| merged common ancestors
                            "src": "266:6:29"
=======
                            "src": "392:6:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "392:6:32"
=======
                            "src": "392:6:33"
>>>>>>> origin/ajibigad/token-swap
                          },
                          "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "392:12:31"
||||||| merged common ancestors
                          "src": "266:12:29"
=======
                          "src": "392:12:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                          "src": "392:12:32"
=======
                          "src": "392:12:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulExpressionStatement",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "392:12:31"
||||||| merged common ancestors
                        "src": "266:12:29"
=======
                        "src": "392:12:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "392:12:32"
=======
                        "src": "392:12:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "360:3:31"
||||||| merged common ancestors
                            "src": "239:7:29"
=======
                            "src": "360:3:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "360:3:32"
=======
                            "src": "360:3:33"
>>>>>>> origin/ajibigad/token-swap
                          },
                          {
<<<<<<< HEAD
                            "arguments": [
                              {
                                "name": "length",
||||||| merged common ancestors
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "248:9:29"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:23:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "260:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "231:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:32:29"
                  },
                  "nodeType": "YulIf",
                  "src": "228:2:29"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "290:117:29",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "305:15:29",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "319:1:29",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "309:6:29",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "334:63:29",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
=======
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "369:6:33"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "377:4:33",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "365:3:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "365:17:33"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "356:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "356:27:33"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "385:3:33"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "353:2:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "353:36:33"
                  },
                  "nodeType": "YulIf",
                  "src": "350:2:33"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "475:187:33",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "489:21:33",
                        "value": {
                          "name": "src",
                          "nodeType": "YulIdentifier",
                          "src": "507:3:33"
                        },
                        "variables": [
                          {
                            "name": "elementPos",
                            "nodeType": "YulTypedName",
                            "src": "493:10:33",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "530:3:33"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "elementPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "567:10:33"
                                },
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "579:3:33"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_uint256_fromMemory",
>>>>>>> origin/ajibigad/token-swap
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                                "src": "369:6:31"
||||||| merged common ancestors
                                "src": "369:9:29"
=======
                                "src": "535:31:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                                "src": "535:31:32"
=======
                                "src": "535:31:33"
>>>>>>> origin/ajibigad/token-swap
                              },
<<<<<<< HEAD
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "377:4:31",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
||||||| merged common ancestors
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "380:6:29"
                              }
                            ],
                            "functionName": {
                              "name": "add",
=======
                              "nodeType": "YulFunctionCall",
                              "src": "535:48:33"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "523:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "523:61:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "523:61:33"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "597:21:33",
                        "value": {
                          "arguments": [
                            {
                              "name": "dst",
>>>>>>> origin/ajibigad/token-swap
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                              "src": "365:3:31"
||||||| merged common ancestors
                              "src": "365:3:29"
=======
                              "src": "608:3:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                              "src": "608:3:32"
=======
                              "src": "608:3:33"
>>>>>>> origin/ajibigad/token-swap
                            },
<<<<<<< HEAD
                            "nodeType": "YulFunctionCall",
                            "src": "365:17:31"
||||||| merged common ancestors
                            "nodeType": "YulFunctionCall",
                            "src": "365:22:29"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "389:7:29"
=======
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "613:4:33",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "604:3:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "604:14:33"
                        },
                        "variableNames": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "597:3:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "597:3:32"
=======
                            "src": "597:3:33"
>>>>>>> origin/ajibigad/token-swap
                          }
<<<<<<< HEAD
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "356:3:31"
||||||| merged common ancestors
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "344:20:29"
=======
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "631:21:33",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "642:3:33"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "647:4:33",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "638:3:33"
                          },
                          "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                          "src": "638:14:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                          "src": "638:14:32"
=======
                          "src": "638:14:33"
>>>>>>> origin/ajibigad/token-swap
                        },
<<<<<<< HEAD
                        "nodeType": "YulFunctionCall",
                        "src": "356:27:31"
||||||| merged common ancestors
                        "nodeType": "YulFunctionCall",
                        "src": "344:53:29"
=======
                        "variableNames": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "631:3:33"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "437:1:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "437:1:32"
=======
                        "src": "437:1:33"
>>>>>>> origin/ajibigad/token-swap
                      },
<<<<<<< HEAD
||||||| merged common ancestors
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "334:6:29"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "188:9:29",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "199:7:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "211:6:29",
                "type": ""
              }
            ],
            "src": "152:262:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "485:53:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
=======
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "440:6:33"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "434:2:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "434:13:33"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "448:18:33",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "450:14:33",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "459:1:33"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "462:1:33",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "455:3:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "455:9:33"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "450:1:33"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "419:14:33",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "421:10:33",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "430:1:33",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "425:1:33",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "415:247:33"
                }
              ]
            },
            "name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "107:6:33",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "115:6:33",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "123:3:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "131:5:33",
                "type": ""
              }
            ],
            "src": "24:644:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "726:87:33",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "736:29:33",
                  "value": {
                    "arguments": [
>>>>>>> origin/ajibigad/token-swap
                      {
<<<<<<< HEAD
                        "name": "end",
||||||| merged common ancestors
                        "name": "pos",
=======
                        "name": "offset",
>>>>>>> origin/ajibigad/token-swap
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "385:3:31"
||||||| merged common ancestors
                        "src": "502:3:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "525:5:29"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "507:17:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "507:24:29"
=======
                        "src": "758:6:32"
||||||| merged common ancestors
                        "src": "758:6:32"
=======
                        "src": "758:6:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "745:12:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "745:20:33"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "736:5:33"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "801:5:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "801:5:32"
=======
                        "src": "801:5:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
<<<<<<< HEAD
                      "name": "gt",
||||||| merged common ancestors
                      "name": "mstore",
=======
                      "name": "validator_revert_t_address",
>>>>>>> origin/ajibigad/token-swap
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "353:2:31"
||||||| merged common ancestors
                      "src": "495:6:29"
=======
                      "src": "774:26:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "774:26:32"
=======
                      "src": "774:26:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "353:36:31"
||||||| merged common ancestors
                    "src": "495:37:29"
=======
                    "src": "774:33:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "774:33:32"
=======
                    "src": "774:33:33"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "nodeType": "YulIf",
                  "src": "350:2:31"
                },
||||||| merged common ancestors
                  "nodeType": "YulExpressionStatement",
<<<<<<< HEAD
                  "src": "495:37:29"
||||||| merged common ancestors
                  "src": "774:33:32"
=======
                  "src": "774:33:33"
>>>>>>> origin/ajibigad/token-swap
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "473:5:29",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "480:3:29",
                "type": ""
              }
            ],
            "src": "420:118:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "609:53:29",
              "statements": [
=======
                  "nodeType": "YulExpressionStatement",
                  "src": "774:33:32"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "704:6:33",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "712:3:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "720:5:33",
                "type": ""
              }
            ],
            "src": "674:139:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "924:230:33",
              "statements": [
>>>>>>> origin/ajibigad/token-swap
                {
<<<<<<< HEAD
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "475:187:31",
                    "statements": [
||||||| merged common ancestors
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "626:3:29"
                      },
=======
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "973:16:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "982:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "985:1:33",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "975:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "975:12:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "975:12:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
>>>>>>> origin/ajibigad/token-swap
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "489:21:31",
                        "value": {
                          "name": "src",
                          "nodeType": "YulIdentifier",
                          "src": "507:3:31"
                        },
                        "variables": [
                          {
<<<<<<< HEAD
                            "name": "elementPos",
                            "nodeType": "YulTypedName",
                            "src": "493:10:31",
                            "type": ""
||||||| merged common ancestors
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "649:5:29"
=======
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "952:6:33"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "960:4:33",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "948:3:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "948:17:33"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "967:3:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "967:3:32"
=======
                            "src": "967:3:33"
>>>>>>> origin/ajibigad/token-swap
                          }
<<<<<<< HEAD
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "530:3:31"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "elementPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "567:10:31"
                                },
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "579:3:31"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_uint256_fromMemory",
                                "nodeType": "YulIdentifier",
                                "src": "535:31:31"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "535:48:31"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "523:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "523:61:31"
||||||| merged common ancestors
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "631:17:29"
=======
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "944:3:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                          "src": "944:3:32"
=======
                          "src": "944:3:33"
>>>>>>> origin/ajibigad/token-swap
                        },
<<<<<<< HEAD
<<<<<<< HEAD
                        "nodeType": "YulExpressionStatement",
                        "src": "523:61:31"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "597:21:31",
                        "value": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "608:3:31"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "613:4:31",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "604:3:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "604:14:31"
                        },
                        "variableNames": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "597:3:31"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "631:21:31",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "642:3:31"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "647:4:31",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "638:3:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "638:14:31"
                        },
                        "variableNames": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "631:3:31"
                          }
                        ]
||||||| merged common ancestors
                        "nodeType": "YulFunctionCall",
                        "src": "944:27:32"
=======
                        "nodeType": "YulFunctionCall",
                        "src": "944:27:33"
>>>>>>> origin/ajibigad/token-swap
                      }
<<<<<<< HEAD
                    ]
||||||| merged common ancestors
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "937:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "937:35:32"
=======
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "937:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "937:35:33"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "condition": {
||||||| merged common ancestors
                  "nodeType": "YulIf",
                  "src": "934:2:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "998:27:32",
                  "value": {
=======
                  "nodeType": "YulIf",
                  "src": "934:2:33"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "998:27:33",
                  "value": {
>>>>>>> origin/ajibigad/token-swap
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "437:1:31"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "440:6:31"
||||||| merged common ancestors
                        "nodeType": "YulFunctionCall",
                        "src": "631:24:29"
=======
                        "nodeType": "YulFunctionCall",
                        "src": "944:27:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "1018:6:32"
=======
                        "src": "1018:6:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
<<<<<<< HEAD
                      "name": "lt",
||||||| merged common ancestors
                      "name": "mstore",
=======
                      "name": "iszero",
>>>>>>> origin/ajibigad/token-swap
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "434:2:31"
||||||| merged common ancestors
                      "src": "619:6:29"
=======
                      "src": "937:6:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "1012:5:32"
=======
                      "src": "1012:5:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "434:13:31"
||||||| merged common ancestors
                    "src": "619:37:29"
=======
                    "src": "937:35:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "1012:13:32"
=======
                    "src": "1012:13:33"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
<<<<<<< HEAD
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "448:18:31",
                    "statements": [
||||||| merged common ancestors
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1002:6:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1034:114:32",
                  "value": {
                    "arguments": [
=======
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1002:6:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1034:114:33",
                  "value": {
                    "arguments": [
>>>>>>> origin/ajibigad/token-swap
                      {
                        "nodeType": "YulAssignment",
                        "src": "450:14:31",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "459:1:31"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "462:1:31",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "455:3:31"
||||||| merged common ancestors
                            "src": "1121:6:32"
=======
                            "src": "1121:6:33"
>>>>>>> origin/ajibigad/token-swap
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "455:9:31"
                        },
                        "variableNames": [
                          {
<<<<<<< HEAD
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "450:1:31"
||||||| merged common ancestors
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1129:4:32",
                            "type": "",
                            "value": "0x20"
=======
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1129:4:33",
                            "type": "",
                            "value": "0x20"
>>>>>>> origin/ajibigad/token-swap
                          }
<<<<<<< HEAD
                        ]
||||||| merged common ancestors
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1117:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1117:17:32"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1136:6:32"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "1144:3:32"
=======
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1117:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1117:17:33"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1136:6:33"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "1144:3:33"
>>>>>>> origin/ajibigad/token-swap
                      }
<<<<<<< HEAD
                    ]
||||||| merged common ancestors
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1043:73:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1043:105:32"
=======
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1043:73:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1043:105:33"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "419:14:31",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "421:10:31",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "430:1:31",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "425:1:31",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "415:247:31"
||||||| merged common ancestors
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "1034:5:32"
                    }
                  ]
=======
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "1034:5:33"
                    }
                  ]
>>>>>>> origin/ajibigad/token-swap
                }
              ]
            },
            "name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "107:6:31",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "115:6:31",
||||||| merged common ancestors
                "src": "902:6:32",
=======
                "src": "902:6:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "123:3:31",
||||||| merged common ancestors
                "src": "910:3:32",
=======
                "src": "910:3:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "131:5:31",
||||||| merged common ancestors
                "src": "918:5:32",
=======
                "src": "918:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
            "src": "24:644:31"
||||||| merged common ancestors
            "src": "836:318:32"
=======
            "src": "836:318:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "726:87:31",
||||||| merged common ancestors
              "src": "1220:77:32",
=======
              "src": "1220:77:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
<<<<<<< HEAD
||||||| merged common ancestors
||||||| merged common ancestors
                {
                  "nodeType": "YulAssignment",
                  "src": "1230:22:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1245:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1239:5:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1239:13:32"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1230:5:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1285:5:32"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "1261:23:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1261:30:32"
                  },
=======
                {
                  "nodeType": "YulAssignment",
                  "src": "1230:22:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1245:6:33"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1239:5:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1239:13:33"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1230:5:33"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1285:5:33"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "1261:23:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1261:30:33"
                  },
>>>>>>> origin/ajibigad/token-swap
                  "nodeType": "YulExpressionStatement",
<<<<<<< HEAD
                  "src": "619:37:29"
||||||| merged common ancestors
                  "src": "1261:30:32"
=======
                  "src": "1261:30:33"
>>>>>>> origin/ajibigad/token-swap
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "597:5:29",
||||||| merged common ancestors
                "src": "1198:6:32",
=======
                "src": "1198:6:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              },
              {
<<<<<<< HEAD
                "name": "pos",
||||||| merged common ancestors
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1206:3:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
=======
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1206:3:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
>>>>>>> origin/ajibigad/token-swap
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "604:3:29",
||||||| merged common ancestors
                "src": "1214:5:32",
=======
                "src": "1214:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
            "src": "544:118:29"
||||||| merged common ancestors
            "src": "1160:137:32"
=======
            "src": "1160:137:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "766:124:29",
||||||| merged common ancestors
              "src": "1355:87:32",
=======
              "src": "1355:87:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
=======
                  "nodeType": "YulIf",
                  "src": "934:2:32"
                },
>>>>>>> origin/ajibigad/token-swap
                {
<<<<<<< HEAD
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
                  "src": "736:29:31",
||||||| merged common ancestors
                  "nodeType": "YulAssignment",
                  "src": "776:26:29",
=======
                  "nodeType": "YulVariableDeclaration",
                  "src": "998:27:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "src": "1365:29:32",
=======
                  "src": "1365:29:33",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "758:6:31"
||||||| merged common ancestors
                        "src": "788:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "799:2:29",
                        "type": "",
                        "value": "32"
=======
                        "src": "1018:6:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "1387:6:32"
=======
                        "src": "1387:6:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
<<<<<<< HEAD
                      "name": "calldataload",
||||||| merged common ancestors
                      "name": "add",
=======
                      "name": "mload",
>>>>>>> origin/ajibigad/token-swap
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "745:12:31"
||||||| merged common ancestors
                      "src": "784:3:29"
=======
                      "src": "1012:5:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "1374:12:32"
=======
                      "src": "1374:12:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "745:20:31"
||||||| merged common ancestors
                    "src": "784:18:29"
=======
                    "src": "1012:13:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "1374:20:32"
=======
                    "src": "1374:20:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variables": [
                    {
<<<<<<< HEAD
                      "name": "value",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "736:5:31"
||||||| merged common ancestors
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "776:4:29"
=======
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1002:6:32",
                      "type": ""
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "1365:5:32"
=======
                      "src": "1365:5:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1034:114:32",
                  "value": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "801:5:31"
||||||| merged common ancestors
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "856:6:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "869:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "880:1:29",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "865:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "865:17:29"
=======
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1121:6:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1129:4:32",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1117:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1117:17:32"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1136:6:32"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "1144:3:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "1430:5:32"
=======
                        "src": "1430:5:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
<<<<<<< HEAD
                      "name": "validator_revert_t_address",
||||||| merged common ancestors
                      "name": "abi_encode_t_address_to_t_address_fromStack",
=======
                      "name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
>>>>>>> origin/ajibigad/token-swap
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "774:26:31"
||||||| merged common ancestors
                      "src": "812:43:29"
=======
                      "src": "1043:73:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "1403:26:32"
=======
                      "src": "1403:26:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "774:33:31"
||||||| merged common ancestors
                    "src": "812:71:29"
=======
                    "src": "1043:105:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "1403:33:32"
=======
                    "src": "1403:33:33"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "nodeType": "YulExpressionStatement",
<<<<<<< HEAD
                  "src": "774:33:31"
||||||| merged common ancestors
                  "nodeType": "YulExpressionStatement",
                  "src": "812:71:29"
=======
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "1034:5:32"
                    }
                  ]
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "src": "1403:33:32"
=======
                  "src": "1403:33:33"
>>>>>>> origin/ajibigad/token-swap
                }
              ]
            },
<<<<<<< HEAD
            "name": "abi_decode_t_address",
||||||| merged common ancestors
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
=======
            "name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
>>>>>>> origin/ajibigad/token-swap
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "704:6:31",
||||||| merged common ancestors
                "src": "738:9:29",
=======
                "src": "902:6:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "1333:6:32",
=======
                "src": "1333:6:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "712:3:31",
||||||| merged common ancestors
                "src": "750:6:29",
=======
                "src": "910:3:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "1341:3:32",
=======
                "src": "1341:3:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
<<<<<<< HEAD
                "name": "value",
||||||| merged common ancestors
                "name": "tail",
=======
                "name": "array",
>>>>>>> origin/ajibigad/token-swap
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "720:5:31",
||||||| merged common ancestors
                "src": "761:4:29",
=======
                "src": "918:5:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "1349:5:32",
=======
                "src": "1349:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
<<<<<<< HEAD
            "src": "674:139:31"
||||||| merged common ancestors
            "src": "668:222:29"
=======
            "src": "836:318:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "src": "1303:139:32"
=======
            "src": "1303:139:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "924:230:31",
||||||| merged common ancestors
              "src": "994:124:29",
=======
              "src": "1220:77:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "1511:80:32",
=======
              "src": "1511:80:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
<<<<<<< HEAD
<<<<<<< HEAD
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "973:16:31",
                    "statements": [
||||||| merged common ancestors
                  "nodeType": "YulAssignment",
                  "src": "1521:22:32",
                  "value": {
                    "arguments": [
=======
                  "nodeType": "YulAssignment",
                  "src": "1521:22:33",
                  "value": {
                    "arguments": [
>>>>>>> origin/ajibigad/token-swap
                      {
<<<<<<< HEAD
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "982:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "985:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "975:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "975:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "975:12:31"
||||||| merged common ancestors
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1536:6:32"
=======
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1536:6:33"
>>>>>>> origin/ajibigad/token-swap
                      }
<<<<<<< HEAD
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "952:6:31"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "960:4:31",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "948:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "948:17:31"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "967:3:31"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "944:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "944:27:31"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "937:6:31"
                    },
||||||| merged common ancestors
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1530:5:32"
                    },
=======
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1530:5:33"
                    },
>>>>>>> origin/ajibigad/token-swap
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "937:35:31"
||||||| merged common ancestors
                    "src": "1530:13:32"
=======
                    "src": "1530:13:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "nodeType": "YulIf",
                  "src": "934:2:31"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "998:27:31",
||||||| merged common ancestors
                  "nodeType": "YulAssignment",
                  "src": "1004:26:29",
=======
                  "nodeType": "YulAssignment",
                  "src": "1230:22:32",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "1018:6:31"
||||||| merged common ancestors
                        "src": "1016:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1027:2:29",
                        "type": "",
                        "value": "32"
=======
                        "src": "1245:6:32"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "1012:5:31"
||||||| merged common ancestors
                      "src": "1012:3:29"
=======
                      "src": "1239:5:32"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "1012:13:31"
||||||| merged common ancestors
                    "src": "1012:18:29"
=======
                    "src": "1239:13:32"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variables": [
                    {
<<<<<<< HEAD
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1002:6:31",
                      "type": ""
||||||| merged common ancestors
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1004:4:29"
=======
                      "name": "value",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "1230:5:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "1521:5:32"
=======
                      "src": "1521:5:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1034:114:31",
                  "value": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1121:6:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1129:4:31",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1117:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1117:17:31"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1136:6:31"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "1144:3:31"
||||||| merged common ancestors
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1084:6:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1097:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1108:1:29",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1093:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1093:17:29"
=======
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "1285:5:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "1579:5:32"
=======
                        "src": "1579:5:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
<<<<<<< HEAD
                      "name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
||||||| merged common ancestors
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
=======
                      "name": "validator_revert_t_bool",
>>>>>>> origin/ajibigad/token-swap
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "1043:73:31"
||||||| merged common ancestors
                      "src": "1040:43:29"
=======
                      "src": "1261:23:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "1552:26:32"
=======
                      "src": "1552:26:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "1043:105:31"
||||||| merged common ancestors
                    "src": "1040:71:29"
=======
                    "src": "1261:30:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "1552:33:32"
=======
                    "src": "1552:33:33"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "1034:5:31"
                    }
                  ]
||||||| merged common ancestors
                  "nodeType": "YulExpressionStatement",
<<<<<<< HEAD
                  "src": "1040:71:29"
=======
                  "nodeType": "YulExpressionStatement",
                  "src": "1261:30:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "src": "1552:33:32"
=======
                  "src": "1552:33:33"
>>>>>>> origin/ajibigad/token-swap
                }
              ]
            },
<<<<<<< HEAD
            "name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
||||||| merged common ancestors
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
=======
            "name": "abi_decode_t_bool_fromMemory",
>>>>>>> origin/ajibigad/token-swap
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "902:6:31",
||||||| merged common ancestors
                "src": "966:9:29",
=======
                "src": "1198:6:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "1489:6:32",
=======
                "src": "1489:6:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "910:3:31",
||||||| merged common ancestors
                "src": "978:6:29",
=======
                "src": "1206:3:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "1497:3:32",
=======
                "src": "1497:3:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
<<<<<<< HEAD
                "name": "array",
||||||| merged common ancestors
                "name": "tail",
=======
                "name": "value",
>>>>>>> origin/ajibigad/token-swap
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "918:5:31",
||||||| merged common ancestors
                "src": "989:4:29",
=======
                "src": "1214:5:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "1505:5:32",
=======
                "src": "1505:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
<<<<<<< HEAD
            "src": "836:318:31"
||||||| merged common ancestors
            "src": "896:222:29"
=======
            "src": "1160:137:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "src": "1448:143:32"
=======
            "src": "1448:143:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "1220:77:31",
||||||| merged common ancestors
              "src": "1169:51:29",
=======
              "src": "1355:87:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "1699:318:32",
=======
              "src": "1699:318:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
<<<<<<< HEAD
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
                  "src": "1230:22:31",
||||||| merged common ancestors
                  "src": "1179:35:29",
=======
                  "src": "1365:29:32",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
                    "arguments": [
||||||| merged common ancestors
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1745:16:32",
                    "statements": [
=======
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1745:16:33",
                    "statements": [
>>>>>>> origin/ajibigad/token-swap
                      {
<<<<<<< HEAD
                        "name": "offset",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "1245:6:31"
||||||| merged common ancestors
                        "src": "1208:5:29"
=======
                        "src": "1387:6:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1754:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1757:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1747:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1747:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1747:12:32"
=======
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1754:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1757:1:33",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1747:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1747:12:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1747:12:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
<<<<<<< HEAD
                      "name": "mload",
||||||| merged common ancestors
                      "name": "cleanup_t_uint160",
=======
                      "name": "calldataload",
>>>>>>> origin/ajibigad/token-swap
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "1239:5:31"
||||||| merged common ancestors
                      "src": "1190:17:29"
=======
                      "src": "1374:12:32"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "1239:13:31"
||||||| merged common ancestors
                    "src": "1190:24:29"
=======
                    "src": "1374:20:32"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "1230:5:31"
||||||| merged common ancestors
                      "src": "1179:7:29"
=======
                      "src": "1365:5:32"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
<<<<<<< HEAD
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1285:5:31"
||||||| merged common ancestors
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1720:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1729:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1716:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1716:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1741:2:32",
                        "type": "",
                        "value": "32"
=======
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1720:7:33"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1729:9:33"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1716:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1716:23:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1741:2:33",
                        "type": "",
                        "value": "32"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "1261:23:31"
||||||| merged common ancestors
                      "src": "1712:3:32"
=======
                      "src": "1712:3:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "1261:30:31"
||||||| merged common ancestors
                    "src": "1712:32:32"
=======
                    "src": "1712:32:33"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "nodeType": "YulExpressionStatement",
                  "src": "1261:30:31"
||||||| merged common ancestors
                  "nodeType": "YulIf",
                  "src": "1709:2:32"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1771:239:32",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1786:38:32",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1810:9:32"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1821:1:32",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1806:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1806:17:32"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1800:5:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1800:24:32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1790:6:32",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1871:16:32",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1880:1:32",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1883:1:32",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1873:6:32"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1873:12:32"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1873:12:32"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1843:6:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1851:18:32",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1840:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1840:30:32"
                      },
                      "nodeType": "YulIf",
                      "src": "1837:2:32"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1901:99:32",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1972:9:32"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1983:6:32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1968:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1968:22:32"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1992:7:32"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1911:56:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1911:89:32"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1901:6:32"
                        }
                      ]
                    }
                  ]
=======
                  "nodeType": "YulIf",
                  "src": "1709:2:33"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1771:239:33",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1786:38:33",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1810:9:33"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1821:1:33",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1806:3:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1806:17:33"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1800:5:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1800:24:33"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1790:6:33",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1871:16:33",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1880:1:33",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1883:1:33",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1873:6:33"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1873:12:33"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1873:12:33"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1843:6:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1851:18:33",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1840:2:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1840:30:33"
                      },
                      "nodeType": "YulIf",
                      "src": "1837:2:33"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1901:99:33",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1972:9:33"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1983:6:33"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1968:3:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1968:22:33"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1992:7:33"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1911:56:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1911:89:33"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1901:6:33"
                        }
                      ]
                    }
                  ]
>>>>>>> origin/ajibigad/token-swap
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1198:6:31",
||||||| merged common ancestors
                "src": "1669:9:32",
=======
                "src": "1669:9:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1206:3:31",
||||||| merged common ancestors
                "src": "1680:7:32",
=======
                "src": "1680:7:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1214:5:31",
||||||| merged common ancestors
                "src": "1692:6:32",
=======
                "src": "1692:6:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
            "src": "1160:137:31"
||||||| merged common ancestors
            "src": "1597:420:32"
=======
            "src": "1597:420:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "1355:87:31",
              "statements": [
||||||| merged common ancestors
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1151:5:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1161:7:29",
                "type": ""
              }
            ],
            "src": "1124:96:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1271:81:29",
||||||| merged common ancestors
              "src": "2097:204:32",
=======
              "src": "2097:204:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
=======
                },
>>>>>>> origin/ajibigad/token-swap
                {
<<<<<<< HEAD
<<<<<<< HEAD
                  "nodeType": "YulAssignment",
                  "src": "1365:29:31",
                  "value": {
||||||| merged common ancestors
                  "nodeType": "YulAssignment",
                  "src": "1281:65:29",
                  "value": {
=======
                  "expression": {
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2143:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2152:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2155:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2145:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2145:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2145:12:32"
                      }
                    ]
                  },
                  "condition": {
=======
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2143:16:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2152:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2155:1:33",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2145:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2145:12:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2145:12:33"
                      }
                    ]
                  },
                  "condition": {
>>>>>>> origin/ajibigad/token-swap
                    "arguments": [
                      {
<<<<<<< HEAD
                        "name": "offset",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "1387:6:31"
||||||| merged common ancestors
                        "src": "1296:5:29"
||||||| merged common ancestors
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2118:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2127:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2114:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2114:23:32"
=======
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2118:7:33"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2127:9:33"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2114:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2114:23:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "1303:42:29",
||||||| merged common ancestors
                        "src": "2139:2:32",
=======
                        "src": "2139:2:33",
>>>>>>> origin/ajibigad/token-swap
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
=======
                        "src": "1430:5:32"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
<<<<<<< HEAD
                      "name": "calldataload",
||||||| merged common ancestors
                      "name": "and",
=======
                      "name": "validator_revert_t_uint256",
>>>>>>> origin/ajibigad/token-swap
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "1374:12:31"
||||||| merged common ancestors
                      "src": "1292:3:29"
=======
                      "src": "1403:26:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "2110:3:32"
=======
                      "src": "2110:3:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "1374:20:31"
||||||| merged common ancestors
                    "src": "1292:54:29"
=======
                    "src": "1403:33:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "2110:32:32"
=======
                    "src": "2110:32:33"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
<<<<<<< HEAD
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1365:5:31"
                    }
                  ]
||||||| merged common ancestors
                  "nodeType": "YulIf",
                  "src": "2107:2:32"
=======
                  "nodeType": "YulIf",
                  "src": "2107:2:33"
>>>>>>> origin/ajibigad/token-swap
                },
                {
<<<<<<< HEAD
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1430:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1403:26:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1403:33:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1403:33:31"
||||||| merged common ancestors
                  "variableNames": [
||||||| merged common ancestors
                  "nodeType": "YulBlock",
                  "src": "2169:125:32",
                  "statements": [
=======
                  "nodeType": "YulBlock",
                  "src": "2169:125:33",
                  "statements": [
>>>>>>> origin/ajibigad/token-swap
                    {
<<<<<<< HEAD
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1281:7:29"
                    }
                  ]
=======
                  "nodeType": "YulExpressionStatement",
                  "src": "1403:33:32"
>>>>>>> origin/ajibigad/token-swap
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
<<<<<<< HEAD
                "name": "offset",
||||||| merged common ancestors
                "name": "value",
=======
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1333:6:32",
                "type": ""
              },
              {
                "name": "end",
>>>>>>> origin/ajibigad/token-swap
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1333:6:31",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1341:3:31",
||||||| merged common ancestors
                "src": "1253:5:29",
=======
                "src": "1341:3:32",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1349:5:31",
||||||| merged common ancestors
                "src": "1263:7:29",
=======
                "src": "1349:5:32",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
            "src": "1303:139:31"
||||||| merged common ancestors
            "src": "1226:126:29"
=======
            "src": "1303:139:32"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "1511:80:31",
||||||| merged common ancestors
              "src": "1403:32:29",
=======
              "src": "1511:80:32",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
                  "src": "1521:22:31",
||||||| merged common ancestors
                  "src": "1413:16:29",
=======
                  "src": "1521:22:32",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
<<<<<<< HEAD
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1536:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1530:5:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1530:13:31"
||||||| merged common ancestors
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1424:5:29"
=======
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1536:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1530:5:32"
||||||| merged common ancestors
                      "nodeType": "YulVariableDeclaration",
                      "src": "2184:15:32",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2198:1:32",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2188:6:32",
                          "type": ""
                        }
                      ]
=======
                      "nodeType": "YulVariableDeclaration",
                      "src": "2184:15:33",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2198:1:33",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2188:6:33",
                          "type": ""
                        }
                      ]
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1530:13:32"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variableNames": [
                    {
<<<<<<< HEAD
                      "name": "value",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "1521:5:31"
||||||| merged common ancestors
                      "src": "1413:7:29"
=======
                      "src": "1521:5:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "nodeType": "YulAssignment",
                      "src": "2213:71:32",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2256:9:32"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2267:6:32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2252:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2252:22:32"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2276:7:32"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2223:28:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2223:61:32"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2213:6:32"
                        }
                      ]
=======
                      "nodeType": "YulAssignment",
                      "src": "2213:71:33",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2256:9:33"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2267:6:33"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2252:3:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2252:22:33"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2276:7:33"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2223:28:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2223:61:33"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2213:6:33"
                        }
                      ]
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
<<<<<<< HEAD
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1579:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1552:26:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1552:33:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1552:33:31"
||||||| merged common ancestors
=======
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1579:5:32"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1552:26:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1552:33:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1552:33:32"
>>>>>>> origin/ajibigad/token-swap
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
<<<<<<< HEAD
                "name": "offset",
||||||| merged common ancestors
                "name": "value",
=======
                "name": "offset",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1489:6:32",
||||||| merged common ancestors
                "src": "2067:9:32",
=======
                "src": "2067:9:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              },
              {
                "name": "end",
>>>>>>> origin/ajibigad/token-swap
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "1489:6:31",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1497:3:31",
||||||| merged common ancestors
                "src": "1385:5:29",
=======
                "src": "1497:3:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "2078:7:32",
=======
                "src": "2078:7:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "1505:5:31",
||||||| merged common ancestors
                "src": "1395:7:29",
=======
                "src": "1505:5:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "2090:6:32",
=======
                "src": "2090:6:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
<<<<<<< HEAD
            "src": "1448:143:31"
||||||| merged common ancestors
            "src": "1358:77:29"
=======
            "src": "1448:143:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "src": "2023:278:32"
=======
            "src": "2023:278:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "1699:318:31",
||||||| merged common ancestors
              "src": "1484:79:29",
=======
              "src": "1699:318:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "2384:207:32",
=======
              "src": "2384:207:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "1745:16:31",
||||||| merged common ancestors
                    "src": "1541:16:29",
=======
                    "src": "1745:16:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "2430:16:32",
=======
                    "src": "2430:16:33",
>>>>>>> origin/ajibigad/token-swap
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
<<<<<<< HEAD
                              "src": "1754:1:31",
||||||| merged common ancestors
                              "src": "1550:1:29",
=======
                              "src": "1754:1:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                              "src": "2439:1:32",
=======
                              "src": "2439:1:33",
>>>>>>> origin/ajibigad/token-swap
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
<<<<<<< HEAD
                              "src": "1757:1:31",
||||||| merged common ancestors
                              "src": "1553:1:29",
=======
                              "src": "1757:1:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                              "src": "2442:1:32",
=======
                              "src": "2442:1:33",
>>>>>>> origin/ajibigad/token-swap
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "1747:6:31"
||||||| merged common ancestors
                            "src": "1543:6:29"
=======
                            "src": "1747:6:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "2432:6:32"
=======
                            "src": "2432:6:33"
>>>>>>> origin/ajibigad/token-swap
                          },
                          "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "1747:12:31"
||||||| merged common ancestors
                          "src": "1543:12:29"
=======
                          "src": "1747:12:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                          "src": "2432:12:32"
=======
                          "src": "2432:12:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulExpressionStatement",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "1747:12:31"
||||||| merged common ancestors
                        "src": "1543:12:29"
=======
                        "src": "1747:12:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "2432:12:32"
=======
                        "src": "2432:12:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "1720:7:31"
||||||| merged common ancestors
                            "src": "1507:5:29"
=======
                            "src": "1720:7:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "2405:7:32"
=======
                            "src": "2405:7:33"
>>>>>>> origin/ajibigad/token-swap
                          },
                          {
<<<<<<< HEAD
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1729:9:31"
||||||| merged common ancestors
                            "src": "2414:9:32"
=======
                            "src": "2414:9:33"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "1716:3:31"
||||||| merged common ancestors
                          "src": "2401:3:32"
=======
                          "src": "2401:3:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                        "src": "1716:23:31"
||||||| merged common ancestors
                        "src": "2401:23:32"
=======
                        "src": "2401:23:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "1741:2:31",
||||||| merged common ancestors
                        "src": "2426:2:32",
=======
                        "src": "2426:2:33",
>>>>>>> origin/ajibigad/token-swap
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "1712:3:31"
||||||| merged common ancestors
                      "src": "2397:3:32"
=======
                      "src": "2397:3:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "1712:32:31"
||||||| merged common ancestors
                    "src": "2397:32:32"
=======
                    "src": "2397:32:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "nodeType": "YulIf",
<<<<<<< HEAD
                  "src": "1709:2:31"
||||||| merged common ancestors
                  "src": "2394:2:32"
=======
                  "src": "2394:2:33"
>>>>>>> origin/ajibigad/token-swap
                },
                {
                  "nodeType": "YulBlock",
<<<<<<< HEAD
                  "src": "1771:239:31",
||||||| merged common ancestors
                  "src": "2456:128:32",
=======
                  "src": "2456:128:33",
>>>>>>> origin/ajibigad/token-swap
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
<<<<<<< HEAD
                      "src": "1786:38:31",
||||||| merged common ancestors
                      "src": "2471:15:32",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2485:1:32",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2475:6:32",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2500:74:32",
=======
                      "src": "2471:15:33",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2485:1:33",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2475:6:33",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2500:74:33",
>>>>>>> origin/ajibigad/token-swap
                      "value": {
                        "arguments": [
                          {
<<<<<<< HEAD
||||||| merged common ancestors
=======
||||||| merged common ancestors
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2546:9:32"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2557:6:32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2542:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2542:22:32"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2566:7:32"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2510:31:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2510:64:32"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2500:6:32"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2354:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2365:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2377:6:32",
                "type": ""
              }
            ],
            "src": "2307:284:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2680:324:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2726:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2735:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2738:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2728:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2728:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2728:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2701:7:32"
                          },
                          {
=======
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2546:9:33"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2557:6:33"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2542:3:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2542:22:33"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2566:7:33"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2510:31:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2510:64:33"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2500:6:33"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2354:9:33",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2365:7:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2377:6:33",
                "type": ""
              }
            ],
            "src": "2307:284:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2680:324:33",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2726:16:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2735:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2738:1:33",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2728:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2728:12:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2728:12:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2701:7:33"
                          },
                          {
>>>>>>> origin/ajibigad/token-swap
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1729:9:32"
||||||| merged common ancestors
                            "src": "2710:9:32"
=======
                            "src": "2710:9:33"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "1716:3:32"
||||||| merged common ancestors
                          "src": "2697:3:32"
=======
                          "src": "2697:3:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                        "src": "1716:23:32"
||||||| merged common ancestors
                        "src": "2697:23:32"
=======
                        "src": "2697:23:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "1741:2:32",
||||||| merged common ancestors
                        "src": "2722:2:32",
=======
                        "src": "2722:2:33",
>>>>>>> origin/ajibigad/token-swap
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "1712:3:32"
||||||| merged common ancestors
                      "src": "2693:3:32"
=======
                      "src": "2693:3:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "1712:32:32"
||||||| merged common ancestors
                    "src": "2693:32:32"
=======
                    "src": "2693:32:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "nodeType": "YulIf",
<<<<<<< HEAD
                  "src": "1709:2:32"
||||||| merged common ancestors
                  "src": "2690:2:32"
=======
                  "src": "2690:2:33"
>>>>>>> origin/ajibigad/token-swap
                },
                {
                  "nodeType": "YulBlock",
<<<<<<< HEAD
                  "src": "1771:239:32",
||||||| merged common ancestors
                  "src": "2752:117:32",
=======
                  "src": "2752:117:33",
>>>>>>> origin/ajibigad/token-swap
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
<<<<<<< HEAD
                      "src": "1786:38:32",
||||||| merged common ancestors
                      "src": "2767:15:32",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2781:1:32",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2771:6:32",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2796:63:32",
=======
                      "src": "2767:15:33",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2781:1:33",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2771:6:33",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2796:63:33",
>>>>>>> origin/ajibigad/token-swap
                      "value": {
                        "arguments": [
                          {
>>>>>>> origin/ajibigad/token-swap
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                                "src": "1810:9:31"
||||||| merged common ancestors
                                "src": "2831:9:32"
=======
                                "src": "2831:9:33"
>>>>>>> origin/ajibigad/token-swap
                              },
                              {
<<<<<<< HEAD
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1821:1:31",
                                "type": "",
                                "value": "0"
||||||| merged common ancestors
                                "src": "1532:5:29"
=======
                                "src": "1810:9:32"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1821:1:32",
                                "type": "",
                                "value": "0"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2842:6:32"
=======
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2842:6:33"
>>>>>>> origin/ajibigad/token-swap
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                              "src": "1806:3:31"
||||||| merged common ancestors
                              "src": "1514:17:29"
=======
                              "src": "1806:3:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                              "src": "2827:3:32"
=======
                              "src": "2827:3:33"
>>>>>>> origin/ajibigad/token-swap
                            },
                            "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "1806:17:31"
||||||| merged common ancestors
                            "src": "1514:24:29"
=======
                            "src": "1806:17:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "2827:22:32"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2851:7:32"
=======
                            "src": "2827:22:33"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2851:7:33"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "1800:5:31"
||||||| merged common ancestors
                          "src": "1504:2:29"
=======
                          "src": "1800:5:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                          "src": "2806:20:32"
=======
                          "src": "2806:20:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "1800:24:31"
||||||| merged common ancestors
                        "src": "2806:53:32"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2796:6:32"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2879:118:32",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2894:16:32",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2908:2:32",
                        "type": "",
                        "value": "32"
=======
                        "src": "2806:53:33"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2796:6:33"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2879:118:33",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2894:16:33",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2908:2:33",
                        "type": "",
                        "value": "32"
>>>>>>> origin/ajibigad/token-swap
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
<<<<<<< HEAD
                          "src": "1790:6:31",
||||||| merged common ancestors
                          "src": "2898:6:32",
=======
                          "src": "2898:6:33",
>>>>>>> origin/ajibigad/token-swap
                          "type": ""
                        }
                      ]
||||||| merged common ancestors
                        "src": "1504:35:29"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1497:6:29"
=======
                        "src": "1800:24:32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1790:6:32",
                          "type": ""
                        }
                      ]
>>>>>>> origin/ajibigad/token-swap
                    },
<<<<<<< HEAD
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1871:16:31",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1880:1:31",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1883:1:31",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1873:6:31"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1873:12:31"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1873:12:31"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1843:6:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1851:18:31",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1840:2:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1840:30:31"
                      },
                      "nodeType": "YulIf",
                      "src": "1837:2:31"
                    },
                    {
                      "nodeType": "YulAssignment",
<<<<<<< HEAD
                      "src": "1901:99:31",
||||||| merged common ancestors
                      "src": "2924:63:32",
=======
                      "src": "2924:63:33",
>>>>>>> origin/ajibigad/token-swap
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "1972:9:31"
||||||| merged common ancestors
                                "src": "2959:9:32"
=======
                                "src": "2959:9:33"
>>>>>>> origin/ajibigad/token-swap
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
                                "src": "1983:6:31"
||||||| merged common ancestors
                                "src": "2970:6:32"
=======
                                "src": "2970:6:33"
>>>>>>> origin/ajibigad/token-swap
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
                              "src": "1968:3:31"
||||||| merged common ancestors
                              "src": "2955:3:32"
=======
                              "src": "2955:3:33"
>>>>>>> origin/ajibigad/token-swap
                            },
                            "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                            "src": "1968:22:31"
||||||| merged common ancestors
                            "src": "2955:22:32"
=======
                            "src": "2955:22:33"
>>>>>>> origin/ajibigad/token-swap
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "1992:7:31"
||||||| merged common ancestors
                            "src": "2979:7:32"
=======
                            "src": "2979:7:33"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "1911:56:31"
||||||| merged common ancestors
                          "src": "2934:20:32"
=======
                          "src": "2934:20:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                        "src": "1911:89:31"
||||||| merged common ancestors
                        "src": "2934:53:32"
=======
                        "src": "2934:53:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "1901:6:31"
                        }
                      ]
                    }
                  ]
||||||| merged common ancestors
                    "nodeType": "YulFunctionCall",
                    "src": "1497:43:29"
                  },
                  "nodeType": "YulIf",
                  "src": "1494:2:29"
=======
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1871:16:32",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1880:1:32",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1883:1:32",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1873:6:32"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1873:12:32"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1873:12:32"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1843:6:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1851:18:32",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1840:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1840:30:32"
                      },
                      "nodeType": "YulIf",
                      "src": "1837:2:32"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1901:99:32",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1972:9:32"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1983:6:32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1968:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1968:22:32"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1992:7:32"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1911:56:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1911:89:32"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1901:6:32"
||||||| merged common ancestors
                          "src": "2924:6:32"
=======
                          "src": "2924:6:33"
>>>>>>> origin/ajibigad/token-swap
                        }
                      ]
                    }
                  ]
>>>>>>> origin/ajibigad/token-swap
                }
              ]
            },
            "name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "1669:9:31",
||||||| merged common ancestors
                "src": "1477:5:29",
=======
                "src": "1669:9:32",
||||||| merged common ancestors
                "src": "2642:9:32",
=======
                "src": "2642:9:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1680:7:32",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
<<<<<<< HEAD
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1680:7:31",
||||||| merged common ancestors
                "src": "2653:7:32",
=======
                "src": "2653:7:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1692:6:31",
||||||| merged common ancestors
                "src": "2665:6:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2673:6:32",
=======
                "src": "2665:6:33",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2673:6:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
            "src": "1597:420:31"
||||||| merged common ancestors
            "src": "2597:407:32"
=======
            "src": "2597:407:33"
>>>>>>> origin/ajibigad/token-swap
          },
<<<<<<< HEAD
||||||| merged common ancestors
              }
            ],
            "src": "1441:122:29"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 29,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "2243:780:3:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "2243:780:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2554:462;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2277:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2429:77;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2311:76;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2554:462;2612:35;2464:42;2612:72;;2554:462;;:::o;2277:28::-;;;;:::o;2429:77::-;2464:42;2429:77;:::o;2311:76::-;2345:42;2311:76;:::o;7:139:29:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:262::-;;260:2;248:9;239:7;235:23;231:32;228:2;;;276:1;273;266:12;228:2;319:1;344:53;389:7;380:6;369:9;365:22;344:53;:::i;:::-;334:63;;290:117;218:196;;;;:::o;420:118::-;507:24;525:5;507:24;:::i;:::-;502:3;495:37;485:53;;:::o;544:118::-;631:24;649:5;631:24;:::i;:::-;626:3;619:37;609:53;;:::o;668:222::-;;799:2;788:9;784:18;776:26;;812:71;880:1;869:9;865:17;856:6;812:71;:::i;:::-;766:124;;;;:::o;896:222::-;;1027:2;1016:9;1012:18;1004:26;;1040:71;1108:1;1097:9;1093:17;1084:6;1040:71;:::i;:::-;994:124;;;;:::o;1124:96::-;;1190:24;1208:5;1190:24;:::i;:::-;1179:35;;1169:51;;;:::o;1226:126::-;;1303:42;1296:5;1292:54;1281:65;;1271:81;;;:::o;1358:77::-;;1424:5;1413:16;;1403:32;;;:::o;1441:122::-;1514:24;1532:5;1514:24;:::i;:::-;1507:5;1504:35;1494:2;;1553:1;1550;1543:12;1494:2;1484:79;:::o",
  "source": "pragma solidity ^0.7.0;\npragma experimental ABIEncoderV2;\n\n\n//TODO: move to HelperPancakeSwap_ROUTER.sol\ncontract HelperPancakeSwap_ROUTER {\n    // No implementation, just the function signature. This is just so Solidity can work out how to call it.\n    \n    /*\n    * @notice   Swaps an exact amount of input tokens for as many output tokens as possible, \n    *           along the route determined by the path. The first element of path is the input token, \n    *           the last is the output token, and any intermediate elements represent intermediate pairs \n    *           to trade through (if, for example, a direct pair does not exist). \n    *           ``msg.sender`` should have already given the router an allowance of at least amountIn on the input token.\n    * @param    amountIn    The amount of input tokens to send.\n    * @param    amountOutMin    The minimum amount of output tokens that must be received for the transaction not to revert.\n    * @param    path    An array of token addresses. ``path.length`` must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.\n    * @param    to      Recipient of the output tokens.\n    * @param    deadline    \tUnix timestamp after which the transaction will revert.\n    * @return    amounts    \tThe input token amount and all subsequent output token amounts.\n    */\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts) {}\n    \n\n    /*\n    * @notice   Same as \n    *           Succeeds for tokens that take a fee on transfer.* and the market's available liquidity.\n    *           ``msg.sender`` should have already given the router an allowance of at least amountIn on the input token.\n    * @param    redeemAmount The amount of underlying to be redeemed.\n    * @return   status 0 on success, otherwise an Error code\n    */\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external {}\n    \n}\n\n\n/*\n* @notice Integrates with Pancakeswap DEX\n*/\ncontract SmartExchange {\n    \n    uint256 public totalTreasury;\n    address public constant pROUTER = 0xD99D1c33F9fC3444f8101754aBC46c52416550D1; // Pancakeswap Router (BSC Testnet)\n    address public constant pFACTORY = 0x6725F303b657a9451d8BA641348b6761A6CC7a17; // Pancakeswap factory (BSC Testnet)\n    \n    function invest(uint256 amount) public {\n        \n        HelperPancakeSwap_ROUTER underlying = HelperPancakeSwap_ROUTER(pFACTORY);     // get a handle for the exchange router\n        // VToken vToken = VToken(pROUTER);   // get a handle for the corresponding dex factory\n        // underlying.approve(address(vToken), amount); // approve the transfer\n        // assert(vToken.mint(amount) == 0);            // mint the vTokens and assert there is no error\n    }\n    \n}",
  "sourcePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/SmartExchange.sol",
  "ast": {
    "absolutePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/SmartExchange.sol",
    "exportedSymbols": {
      "HelperPancakeSwap_ROUTER": [
        1038
      ],
      "SmartExchange": [
        1059
      ]
    },
    "id": 1060,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1003,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "id": 1004,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:3"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1038,
        "linearizedBaseContracts": [
          1038
        ],
        "name": "HelperPancakeSwap_ROUTER",
        "nodeType": "ContractDefinition",
        "nodes": [
=======
||||||| merged common ancestors
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3090:99:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3134:6:32"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3142:3:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "3100:33:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3100:46:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3100:46:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3155:28:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3173:3:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3178:4:32",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3169:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3169:14:32"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "3155:10:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3063:6:32",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3071:3:32",
                "type": ""
=======
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3090:99:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3134:6:33"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3142:3:33"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "3100:33:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3100:46:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3100:46:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3155:28:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3173:3:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3178:4:33",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3169:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3169:14:33"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "3155:10:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3063:6:33",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3071:3:33",
                "type": ""
>>>>>>> origin/ajibigad/token-swap
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1692:6:32",
||||||| merged common ancestors
                "src": "3079:10:32",
=======
                "src": "3079:10:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
            "src": "1597:420:32"
||||||| merged common ancestors
            "src": "3010:179:32"
=======
            "src": "3010:179:33"
>>>>>>> origin/ajibigad/token-swap
          },
>>>>>>> origin/ajibigad/token-swap
          {
            "body": {
<<<<<<< HEAD
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "2097:204:31",
||||||| merged common ancestors
              "src": "3275:99:32",
=======
              "src": "3275:99:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
||||||| merged common ancestors
              "id": 1021,
              "nodeType": "Block",
              "src": "1570:2:3",
              "statements": []
            },
            "functionSelector": "38ed1739",
            "id": 1022,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactTokensForTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1016,
              "nodeType": "ParameterList",
              "parameters": [
                {
<<<<<<< HEAD
                  "constant": false,
                  "id": 1006,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nodeType": "VariableDeclaration",
                  "scope": 1022,
                  "src": "1406:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
||||||| merged common ancestors
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3319:6:32"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3327:3:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3285:33:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3285:46:32"
=======
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3319:6:33"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3327:3:33"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3285:33:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3285:46:33"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "typeName": {
                    "id": 1005,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1406:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
||||||| merged common ancestors
                  "nodeType": "YulExpressionStatement",
                  "src": "3285:46:32"
=======
                  "nodeType": "YulExpressionStatement",
                  "src": "3285:46:33"
>>>>>>> origin/ajibigad/token-swap
                },
                {
<<<<<<< HEAD
                  "constant": false,
                  "id": 1008,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nodeType": "VariableDeclaration",
                  "scope": 1022,
                  "src": "1429:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1007,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1429:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
=======
              "nodeType": "YulBlock",
              "src": "2097:204:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2143:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2152:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2155:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2145:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2145:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2145:12:32"
                      }
                    ]
                  },
                  "condition": {
||||||| merged common ancestors
                  "nodeType": "YulAssignment",
                  "src": "3340:28:32",
                  "value": {
=======
                  "nodeType": "YulAssignment",
                  "src": "3340:28:33",
                  "value": {
>>>>>>> origin/ajibigad/token-swap
                    "arguments": [
                      {
<<<<<<< HEAD
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2118:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2127:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2114:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2114:23:32"
||||||| merged common ancestors
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3358:3:32"
=======
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3358:3:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "2139:2:32",
||||||| merged common ancestors
                        "src": "3363:4:32",
=======
                        "src": "3363:4:33",
>>>>>>> origin/ajibigad/token-swap
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2110:3:32"
||||||| merged common ancestors
                      "src": "3354:3:32"
=======
                      "src": "3354:3:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "2110:32:32"
||||||| merged common ancestors
                    "src": "3354:14:32"
=======
                    "src": "3354:14:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "nodeType": "YulIf",
                  "src": "2107:2:32"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2169:125:32",
                  "statements": [
                    {
<<<<<<< HEAD
                      "nodeType": "YulVariableDeclaration",
                      "src": "2184:15:32",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2198:1:32",
                        "type": "",
                        "value": "0"
||||||| merged common ancestors
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "3340:10:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3248:6:32",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3256:3:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "3264:10:32",
                "type": ""
              }
            ],
            "src": "3195:179:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3453:74:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3470:3:32"
=======
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "3340:10:33"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3248:6:33",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3256:3:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "3264:10:33",
                "type": ""
              }
            ],
            "src": "3195:179:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3453:74:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3470:3:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2188:6:32",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2213:71:32",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2256:9:32"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2267:6:32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2252:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2252:22:32"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "2276:7:32"
||||||| merged common ancestors
                            "src": "3514:5:32"
=======
                            "src": "3514:5:33"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "2223:28:32"
||||||| merged common ancestors
                          "src": "3475:38:32"
=======
                          "src": "3475:38:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                        "src": "2223:61:32"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2213:6:32"
                        }
                      ]
                    }
                  ]
||||||| merged common ancestors
                        "src": "3475:45:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3463:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3463:58:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3463:58:32"
=======
                        "src": "3475:45:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3463:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3463:58:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3463:58:33"
>>>>>>> origin/ajibigad/token-swap
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2067:9:32",
||||||| merged common ancestors
                "src": "3441:5:32",
=======
                "src": "3441:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2078:7:32",
||||||| merged common ancestors
                "src": "3448:3:32",
=======
                "src": "3448:3:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
            "returnVariables": [
||||||| merged common ancestors
            "src": "3380:147:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3588:53:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3605:3:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3628:5:32"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3610:17:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3610:24:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3598:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3598:37:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3598:37:32"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3576:5:32",
                "type": ""
              },
=======
            "src": "3380:147:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3588:53:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3605:3:33"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3628:5:33"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3610:17:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3610:24:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3598:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3598:37:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3598:37:33"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3576:5:33",
                "type": ""
              },
>>>>>>> origin/ajibigad/token-swap
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2090:6:32",
||||||| merged common ancestors
                "src": "3583:3:32",
=======
                "src": "3583:3:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
            "src": "2023:278:32"
||||||| merged common ancestors
            "src": "3533:108:32"
=======
            "src": "3533:108:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "2384:207:32",
||||||| merged common ancestors
              "src": "3712:53:32",
=======
              "src": "3712:53:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2430:16:32",
                    "statements": [
                      {
<<<<<<< HEAD
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2439:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2442:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2432:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2432:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2432:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
||||||| merged common ancestors
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3729:3:32"
                      },
=======
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3729:3:33"
                      },
>>>>>>> origin/ajibigad/token-swap
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "2405:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2414:9:32"
||||||| merged common ancestors
                            "src": "3752:5:32"
=======
                            "src": "3752:5:33"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "2401:3:32"
||||||| merged common ancestors
                          "src": "3734:17:32"
=======
                          "src": "3734:17:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                        "src": "2401:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2426:2:32",
                        "type": "",
                        "value": "32"
||||||| merged common ancestors
                        "src": "3734:24:32"
=======
                        "src": "3734:24:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2397:3:32"
||||||| merged common ancestors
                      "src": "3722:6:32"
=======
                      "src": "3722:6:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "2397:32:32"
||||||| merged common ancestors
                    "src": "3722:37:32"
=======
                    "src": "3722:37:33"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "nodeType": "YulIf",
                  "src": "2394:2:32"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2456:128:32",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2471:15:32",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2485:1:32",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2475:6:32",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2500:74:32",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2546:9:32"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2557:6:32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2542:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2542:22:32"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2566:7:32"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2510:31:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2510:64:32"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2500:6:32"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
||||||| merged common ancestors
                  "nodeType": "YulExpressionStatement",
                  "src": "3722:37:32"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
=======
                  "nodeType": "YulExpressionStatement",
                  "src": "3722:37:33"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
>>>>>>> origin/ajibigad/token-swap
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2354:9:32",
||||||| merged common ancestors
                "src": "3700:5:32",
=======
                "src": "3700:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "2365:7:32",
||||||| merged common ancestors
                "src": "3707:3:32",
=======
                "src": "3707:3:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2377:6:32",
                "type": ""
              }
            ],
            "src": "2307:284:32"
||||||| merged common ancestors
            "src": "3647:118:32"
=======
            "src": "3647:118:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "2680:324:32",
||||||| merged common ancestors
              "src": "3925:608:32",
=======
              "src": "3925:608:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
<<<<<<< HEAD
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2726:16:32",
                    "statements": [
||||||| merged common ancestors
                  "nodeType": "YulVariableDeclaration",
                  "src": "3935:68:32",
                  "value": {
                    "arguments": [
=======
                  "nodeType": "YulVariableDeclaration",
                  "src": "3935:68:33",
                  "value": {
                    "arguments": [
>>>>>>> origin/ajibigad/token-swap
                      {
<<<<<<< HEAD
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2735:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2738:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2728:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2728:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2728:12:32"
||||||| merged common ancestors
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3997:5:32"
=======
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3997:5:33"
>>>>>>> origin/ajibigad/token-swap
                      }
<<<<<<< HEAD
                    ]
||||||| merged common ancestors
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3949:47:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3949:54:32"
=======
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3949:47:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3949:54:33"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "condition": {
||||||| merged common ancestors
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3939:6:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4012:93:32",
                  "value": {
=======
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3939:6:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4012:93:33",
                  "value": {
>>>>>>> origin/ajibigad/token-swap
                    "arguments": [
                      {
<<<<<<< HEAD
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2701:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2710:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2697:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2697:23:32"
||||||| merged common ancestors
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4093:3:32"
=======
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4093:3:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
<<<<<<< HEAD
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2722:2:32",
                        "type": "",
                        "value": "64"
||||||| merged common ancestors
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4098:6:32"
=======
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4098:6:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "2693:3:32"
||||||| merged common ancestors
                      "src": "4019:73:32"
=======
                      "src": "4019:73:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "2693:32:32"
||||||| merged common ancestors
                    "src": "4019:86:32"
=======
                    "src": "4019:86:33"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "nodeType": "YulIf",
                  "src": "2690:2:32"
||||||| merged common ancestors
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4012:3:32"
                    }
                  ]
=======
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4012:3:33"
                    }
                  ]
>>>>>>> origin/ajibigad/token-swap
                },
                {
<<<<<<< HEAD
                  "nodeType": "YulBlock",
                  "src": "2752:117:32",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2767:15:32",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2781:1:32",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2771:6:32",
                          "type": ""
                        }
                      ]
||||||| merged common ancestors
                  "nodeType": "YulVariableDeclaration",
                  "src": "4114:71:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4179:5:32"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "4129:49:32"
=======
                  "nodeType": "YulVariableDeclaration",
                  "src": "4114:71:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4179:5:33"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "4129:49:33"
>>>>>>> origin/ajibigad/token-swap
                    },
<<<<<<< HEAD
||||||| merged common ancestors
                    "nodeType": "YulFunctionCall",
                    "src": "4129:56:32"
                  },
                  "variables": [
=======
                    "nodeType": "YulFunctionCall",
                    "src": "4129:56:33"
                  },
                  "variables": [
>>>>>>> origin/ajibigad/token-swap
                    {
<<<<<<< HEAD
                      "nodeType": "YulAssignment",
                      "src": "2796:63:32",
                      "value": {
                        "arguments": [
||||||| merged common ancestors
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "4118:7:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4194:21:32",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "4208:7:32"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "4198:6:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4284:224:32",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4298:34:32",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "4325:6:32"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "4319:5:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4319:13:32"
                        },
                        "variables": [
=======
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "4118:7:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4194:21:33",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "4208:7:33"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "4198:6:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4284:224:33",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4298:34:33",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "4325:6:33"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "4319:5:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4319:13:33"
                        },
                        "variables": [
>>>>>>> origin/ajibigad/token-swap
                          {
<<<<<<< HEAD
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2831:9:32"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2842:6:32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
||||||| merged common ancestors
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "4302:13:32",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4345:70:32",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
=======
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "4302:13:33",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4345:70:33",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
>>>>>>> origin/ajibigad/token-swap
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
                              "src": "2827:3:32"
||||||| merged common ancestors
                              "src": "4396:13:32"
=======
                              "src": "4396:13:33"
>>>>>>> origin/ajibigad/token-swap
                            },
<<<<<<< HEAD
                            "nodeType": "YulFunctionCall",
                            "src": "2827:22:32"
||||||| merged common ancestors
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4411:3:32"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_address_to_t_address",
                            "nodeType": "YulIdentifier",
                            "src": "4352:43:32"
=======
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4411:3:33"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_address_to_t_address",
                            "nodeType": "YulIdentifier",
                            "src": "4352:43:33"
>>>>>>> origin/ajibigad/token-swap
                          },
<<<<<<< HEAD
||||||| merged common ancestors
                          "nodeType": "YulFunctionCall",
                          "src": "4352:63:32"
                        },
                        "variableNames": [
=======
                          "nodeType": "YulFunctionCall",
                          "src": "4352:63:33"
                        },
                        "variableNames": [
>>>>>>> origin/ajibigad/token-swap
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "2851:7:32"
||||||| merged common ancestors
                            "src": "4345:3:32"
=======
                            "src": "4345:3:33"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2806:20:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2806:53:32"
                      },
<<<<<<< HEAD
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2796:6:32"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2879:118:32",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2894:16:32",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2908:2:32",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2898:6:32",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2924:63:32",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2959:9:32"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2970:6:32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
||||||| merged common ancestors
                      {
                        "nodeType": "YulAssignment",
                        "src": "4428:70:32",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
=======
                      {
                        "nodeType": "YulAssignment",
                        "src": "4428:70:33",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
>>>>>>> origin/ajibigad/token-swap
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
                              "src": "2955:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2955:22:32"
||||||| merged common ancestors
                              "src": "4491:6:32"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "4438:52:32"
=======
                              "src": "4491:6:33"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "4438:52:33"
>>>>>>> origin/ajibigad/token-swap
                          },
<<<<<<< HEAD
||||||| merged common ancestors
                          "nodeType": "YulFunctionCall",
                          "src": "4438:60:32"
                        },
                        "variableNames": [
=======
                          "nodeType": "YulFunctionCall",
                          "src": "4438:60:33"
                        },
                        "variableNames": [
>>>>>>> origin/ajibigad/token-swap
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "2979:7:32"
||||||| merged common ancestors
                            "src": "4428:6:32"
=======
                            "src": "4428:6:33"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2934:20:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2934:53:32"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2924:6:32"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2642:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2653:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2665:6:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2673:6:32",
                "type": ""
              }
            ],
            "src": "2597:407:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3090:99:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "3134:6:32"
||||||| merged common ancestors
                        "src": "4246:1:32"
=======
                        "src": "4246:1:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "3142:3:32"
||||||| merged common ancestors
                        "src": "4249:6:32"
=======
                        "src": "4249:6:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3100:33:32"
||||||| merged common ancestors
                      "src": "4243:2:32"
=======
                      "src": "4243:2:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "3100:46:32"
||||||| merged common ancestors
                    "src": "4243:13:32"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "4257:18:32",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4259:14:32",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "4268:1:32"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4271:1:32",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4264:3:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4264:9:32"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "4259:1:32"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "4228:14:32",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4230:10:32",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "4239:1:32",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "4234:1:32",
                            "type": ""
                          }
                        ]
                      }
                    ]
=======
                    "src": "4243:13:33"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "4257:18:33",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4259:14:33",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "4268:1:33"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4271:1:33",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4264:3:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4264:9:33"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "4259:1:33"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "4228:14:33",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4230:10:33",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "4239:1:33",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "4234:1:33",
                            "type": ""
                          }
                        ]
                      }
                    ]
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "nodeType": "YulExpressionStatement",
                  "src": "3100:46:32"
||||||| merged common ancestors
                  "src": "4224:284:32"
=======
                  "src": "4224:284:33"
>>>>>>> origin/ajibigad/token-swap
                },
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
                  "src": "3155:28:32",
||||||| merged common ancestors
                  "src": "4517:10:32",
=======
                  "src": "4517:10:33",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
<<<<<<< HEAD
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3173:3:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3178:4:32",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3169:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3169:14:32"
||||||| merged common ancestors
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "4524:3:32"
=======
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "4524:3:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3155:10:32"
||||||| merged common ancestors
                      "src": "4517:3:32"
=======
                      "src": "4517:3:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3063:6:32",
||||||| merged common ancestors
                "src": "3904:5:32",
=======
                "src": "3904:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3071:3:32",
||||||| merged common ancestors
                "src": "3911:3:32",
=======
                "src": "3911:3:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3079:10:32",
||||||| merged common ancestors
                "src": "3920:3:32",
=======
                "src": "3920:3:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
            "src": "3010:179:32"
||||||| merged common ancestors
            "src": "3801:732:32"
=======
            "src": "3801:732:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "3275:99:32",
||||||| merged common ancestors
              "src": "4693:608:32",
=======
              "src": "4693:608:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
<<<<<<< HEAD
                  "expression": {
||||||| merged common ancestors
                  "nodeType": "YulVariableDeclaration",
                  "src": "4703:68:32",
                  "value": {
=======
                  "nodeType": "YulVariableDeclaration",
                  "src": "4703:68:33",
                  "value": {
>>>>>>> origin/ajibigad/token-swap
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "3319:6:32"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3327:3:32"
||||||| merged common ancestors
                        "src": "4765:5:32"
=======
                        "src": "4765:5:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3285:33:32"
||||||| merged common ancestors
                      "src": "4717:47:32"
=======
                      "src": "4717:47:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "3285:46:32"
||||||| merged common ancestors
                    "src": "4717:54:32"
=======
                    "src": "4717:54:33"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "nodeType": "YulExpressionStatement",
                  "src": "3285:46:32"
||||||| merged common ancestors
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4707:6:32",
                      "type": ""
                    }
                  ]
=======
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4707:6:33",
                      "type": ""
                    }
                  ]
>>>>>>> origin/ajibigad/token-swap
                },
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
                  "src": "3340:28:32",
||||||| merged common ancestors
                  "src": "4780:93:32",
=======
                  "src": "4780:93:33",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "3358:3:32"
||||||| merged common ancestors
                        "src": "4861:3:32"
=======
                        "src": "4861:3:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
<<<<<<< HEAD
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3363:4:32",
                        "type": "",
                        "value": "0x20"
||||||| merged common ancestors
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4866:6:32"
=======
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4866:6:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3354:3:32"
||||||| merged common ancestors
                      "src": "4787:73:32"
=======
                      "src": "4787:73:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "3354:14:32"
||||||| merged common ancestors
                    "src": "4787:86:32"
=======
                    "src": "4787:86:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3340:10:32"
||||||| merged common ancestors
                      "src": "4780:3:32"
=======
                      "src": "4780:3:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3248:6:32",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3256:3:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "3264:10:32",
                "type": ""
              }
            ],
            "src": "3195:179:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3453:74:32",
              "statements": [
                {
<<<<<<< HEAD
                  "expression": {
||||||| merged common ancestors
                  "nodeType": "YulVariableDeclaration",
                  "src": "4882:71:32",
                  "value": {
=======
                  "nodeType": "YulVariableDeclaration",
                  "src": "4882:71:33",
                  "value": {
>>>>>>> origin/ajibigad/token-swap
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "3470:3:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3514:5:32"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_address_payable_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3475:38:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3475:45:32"
||||||| merged common ancestors
                        "src": "4947:5:32"
=======
                        "src": "4947:5:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3463:6:32"
||||||| merged common ancestors
                      "src": "4897:49:32"
=======
                      "src": "4897:49:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "3463:58:32"
||||||| merged common ancestors
                    "src": "4897:56:32"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "4886:7:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4962:21:32",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "4976:7:32"
=======
                    "src": "4897:56:33"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "4886:7:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4962:21:33",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "4976:7:33"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "nodeType": "YulExpressionStatement",
                  "src": "3463:58:32"
||||||| merged common ancestors
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "4966:6:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5052:224:32",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5066:34:32",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "5093:6:32"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "5087:5:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5087:13:32"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "5070:13:32",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5113:70:32",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "5164:13:32"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "5179:3:32"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
                            "nodeType": "YulIdentifier",
                            "src": "5120:43:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5120:63:32"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5113:3:32"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5196:70:32",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "5259:6:32"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "5206:52:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5206:60:32"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5196:6:32"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5014:1:32"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5017:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5011:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5011:13:32"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5025:18:32",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5027:14:32",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5036:1:32"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5039:1:32",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5032:3:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5032:9:32"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5027:1:32"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "4996:14:32",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4998:10:32",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "5007:1:32",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "5002:1:32",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "4992:284:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5285:10:32",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "5292:3:32"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5285:3:32"
                    }
                  ]
=======
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "4966:6:33",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5052:224:33",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5066:34:33",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "5093:6:33"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "5087:5:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5087:13:33"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "5070:13:33",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5113:70:33",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "5164:13:33"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "5179:3:33"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
                            "nodeType": "YulIdentifier",
                            "src": "5120:43:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5120:63:33"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5113:3:33"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5196:70:33",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "5259:6:33"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "5206:52:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5206:60:33"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5196:6:33"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5014:1:33"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5017:6:33"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5011:2:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5011:13:33"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5025:18:33",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5027:14:33",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5036:1:33"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5039:1:33",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5032:3:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5032:9:33"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5027:1:33"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "4996:14:33",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4998:10:33",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "5007:1:33",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "5002:1:33",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "4992:284:33"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5285:10:33",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "5292:3:33"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5285:3:33"
                    }
                  ]
>>>>>>> origin/ajibigad/token-swap
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3441:5:32",
||||||| merged common ancestors
                "src": "4672:5:32",
=======
                "src": "4672:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3448:3:32",
||||||| merged common ancestors
                "src": "4679:3:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4688:3:32",
=======
                "src": "4679:3:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4688:3:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
            "src": "3380:147:32"
||||||| merged common ancestors
            "src": "4569:732:32"
=======
            "src": "4569:732:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "3588:53:32",
||||||| merged common ancestors
              "src": "5380:74:32",
=======
              "src": "5380:74:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "3605:3:32"
||||||| merged common ancestors
                        "src": "5397:3:32"
=======
                        "src": "5397:3:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "3628:5:32"
||||||| merged common ancestors
                            "src": "5441:5:32"
=======
                            "src": "5441:5:33"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "3610:17:32"
||||||| merged common ancestors
                          "src": "5402:38:32"
=======
                          "src": "5402:38:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                        "src": "3610:24:32"
||||||| merged common ancestors
                        "src": "5402:45:32"
=======
                        "src": "5402:45:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3598:6:32"
||||||| merged common ancestors
                      "src": "5390:6:32"
=======
                      "src": "5390:6:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "3598:37:32"
||||||| merged common ancestors
                    "src": "5390:58:32"
=======
                    "src": "5390:58:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "nodeType": "YulExpressionStatement",
<<<<<<< HEAD
                  "src": "3598:37:32"
||||||| merged common ancestors
                  "src": "5390:58:32"
=======
                  "src": "5390:58:33"
>>>>>>> origin/ajibigad/token-swap
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3576:5:32",
||||||| merged common ancestors
                "src": "5368:5:32",
=======
                "src": "5368:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3583:3:32",
||||||| merged common ancestors
                "src": "5375:3:32",
=======
                "src": "5375:3:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
            "src": "3533:108:32"
||||||| merged common ancestors
            "src": "5307:147:32"
=======
            "src": "5307:147:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "3712:53:32",
||||||| merged common ancestors
              "src": "5515:53:32",
=======
              "src": "5515:53:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "3729:3:32"
||||||| merged common ancestors
                        "src": "5532:3:32"
=======
                        "src": "5532:3:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "3752:5:32"
||||||| merged common ancestors
                            "src": "5555:5:32"
=======
                            "src": "5555:5:33"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "3734:17:32"
||||||| merged common ancestors
                          "src": "5537:17:32"
=======
                          "src": "5537:17:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                        "src": "3734:24:32"
||||||| merged common ancestors
                        "src": "5537:24:32"
=======
                        "src": "5537:24:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3722:6:32"
||||||| merged common ancestors
                      "src": "5525:6:32"
=======
                      "src": "5525:6:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "3722:37:32"
||||||| merged common ancestors
                    "src": "5525:37:32"
=======
                    "src": "5525:37:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "nodeType": "YulExpressionStatement",
<<<<<<< HEAD
                  "src": "3722:37:32"
||||||| merged common ancestors
                  "src": "5525:37:32"
=======
                  "src": "5525:37:33"
>>>>>>> origin/ajibigad/token-swap
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3700:5:32",
||||||| merged common ancestors
                "src": "5503:5:32",
=======
                "src": "5503:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3707:3:32",
||||||| merged common ancestors
                "src": "5510:3:32",
=======
                "src": "5510:3:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
            "src": "3647:118:32"
||||||| merged common ancestors
            "src": "5460:108:32"
=======
            "src": "5460:108:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "3925:608:32",
||||||| merged common ancestors
              "src": "5639:53:32",
=======
              "src": "5639:53:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3935:68:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "3997:5:32"
||||||| merged common ancestors
                        "src": "5656:3:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5679:5:32"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5661:17:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5661:24:32"
=======
                        "src": "5656:3:33"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5679:5:33"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5661:17:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5661:24:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "3949:47:32"
||||||| merged common ancestors
                      "src": "5649:6:32"
=======
                      "src": "5649:6:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "3949:54:32"
||||||| merged common ancestors
                    "src": "5649:37:32"
=======
                    "src": "5649:37:33"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3939:6:32",
                      "type": ""
                    }
                  ]
                },
||||||| merged common ancestors
                  "nodeType": "YulExpressionStatement",
                  "src": "5649:37:32"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5627:5:32",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5634:3:32",
                "type": ""
              }
            ],
            "src": "5574:118:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5796:124:32",
              "statements": [
=======
                  "nodeType": "YulExpressionStatement",
                  "src": "5649:37:33"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5627:5:33",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5634:3:33",
                "type": ""
              }
            ],
            "src": "5574:118:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5796:124:33",
              "statements": [
>>>>>>> origin/ajibigad/token-swap
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
                  "src": "4012:93:32",
||||||| merged common ancestors
                  "src": "5806:26:32",
=======
                  "src": "5806:26:33",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "4093:3:32"
||||||| merged common ancestors
                        "src": "5818:9:32"
=======
                        "src": "5818:9:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
<<<<<<< HEAD
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4098:6:32"
||||||| merged common ancestors
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5829:2:32",
                        "type": "",
                        "value": "32"
=======
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5829:2:33",
                        "type": "",
                        "value": "32"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4019:73:32"
||||||| merged common ancestors
                      "src": "5814:3:32"
=======
                      "src": "5814:3:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "4019:86:32"
||||||| merged common ancestors
                    "src": "5814:18:32"
=======
                    "src": "5814:18:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4012:3:32"
||||||| merged common ancestors
                      "src": "5806:4:32"
=======
                      "src": "5806:4:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4114:71:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "4179:5:32"
||||||| merged common ancestors
                        "src": "5886:6:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5899:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5910:1:32",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5895:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5895:17:32"
=======
                        "src": "5886:6:33"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5899:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5910:1:33",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5895:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5895:17:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4129:49:32"
||||||| merged common ancestors
                      "src": "5842:43:32"
=======
                      "src": "5842:43:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "4129:56:32"
||||||| merged common ancestors
                    "src": "5842:71:32"
=======
                    "src": "5842:71:33"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "4118:7:32",
                      "type": ""
                    }
                  ]
                },
||||||| merged common ancestors
                  "nodeType": "YulExpressionStatement",
                  "src": "5842:71:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5768:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5780:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5791:4:32",
                "type": ""
              }
            ],
            "src": "5698:222:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6032:132:32",
              "statements": [
=======
                  "nodeType": "YulExpressionStatement",
                  "src": "5842:71:33"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5768:9:33",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5780:6:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5791:4:33",
                "type": ""
              }
            ],
            "src": "5698:222:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6032:132:33",
              "statements": [
>>>>>>> origin/ajibigad/token-swap
                {
<<<<<<< HEAD
                  "nodeType": "YulVariableDeclaration",
                  "src": "4194:21:32",
||||||| merged common ancestors
                  "nodeType": "YulAssignment",
                  "src": "6042:26:32",
=======
                  "nodeType": "YulAssignment",
                  "src": "6042:26:33",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
<<<<<<< HEAD
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "4208:7:32"
||||||| merged common ancestors
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6054:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6065:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6050:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6050:18:32"
=======
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6054:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6065:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6050:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6050:18:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variables": [
                    {
<<<<<<< HEAD
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "4198:6:32",
                      "type": ""
||||||| merged common ancestors
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6042:4:32"
=======
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6042:4:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                },
                {
<<<<<<< HEAD
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4284:224:32",
                    "statements": [
||||||| merged common ancestors
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6130:6:32"
                      },
=======
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6130:6:33"
                      },
>>>>>>> origin/ajibigad/token-swap
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4298:34:32",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "4325:6:32"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "4319:5:32"
||||||| merged common ancestors
                            "src": "6143:9:32"
=======
                            "src": "6143:9:33"
>>>>>>> origin/ajibigad/token-swap
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4319:13:32"
                        },
                        "variables": [
                          {
<<<<<<< HEAD
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "4302:13:32",
                            "type": ""
||||||| merged common ancestors
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6154:1:32",
                            "type": "",
                            "value": "0"
=======
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6154:1:33",
                            "type": "",
                            "value": "0"
>>>>>>> origin/ajibigad/token-swap
                          }
<<<<<<< HEAD
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4345:70:32",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "4396:13:32"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4411:3:32"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_address_to_t_address",
                            "nodeType": "YulIdentifier",
                            "src": "4352:43:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4352:63:32"
||||||| merged common ancestors
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6139:3:32"
=======
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6139:3:33"
>>>>>>> origin/ajibigad/token-swap
                        },
<<<<<<< HEAD
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4345:3:32"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4428:70:32",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "4491:6:32"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "4438:52:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4438:60:32"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4428:6:32"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "4246:1:32"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4249:6:32"
||||||| merged common ancestors
                        "nodeType": "YulFunctionCall",
                        "src": "6139:17:32"
=======
                        "nodeType": "YulFunctionCall",
                        "src": "6139:17:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4243:2:32"
||||||| merged common ancestors
                      "src": "6078:51:32"
=======
                      "src": "6078:51:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "4243:13:32"
||||||| merged common ancestors
                    "src": "6078:79:32"
=======
                    "src": "6078:79:33"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "4257:18:32",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4259:14:32",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "4268:1:32"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4271:1:32",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4264:3:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4264:9:32"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "4259:1:32"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "4228:14:32",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4230:10:32",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "4239:1:32",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "4234:1:32",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "4224:284:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4517:10:32",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "4524:3:32"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4517:3:32"
                    }
                  ]
||||||| merged common ancestors
                  "nodeType": "YulExpressionStatement",
                  "src": "6078:79:32"
=======
                  "nodeType": "YulExpressionStatement",
                  "src": "6078:79:33"
>>>>>>> origin/ajibigad/token-swap
                }
              ]
            },
            "name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3904:5:32",
||||||| merged common ancestors
                "src": "6004:9:32",
=======
                "src": "6004:9:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3911:3:32",
||||||| merged common ancestors
                "src": "6016:6:32",
=======
                "src": "6016:6:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "3920:3:32",
||||||| merged common ancestors
                "src": "6027:4:32",
=======
                "src": "6027:4:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
            "src": "3801:732:32"
||||||| merged common ancestors
            "src": "5926:238:32"
=======
            "src": "5926:238:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "4693:608:32",
||||||| merged common ancestors
              "src": "6304:214:32",
=======
              "src": "6304:214:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
<<<<<<< HEAD
                  "nodeType": "YulVariableDeclaration",
                  "src": "4703:68:32",
||||||| merged common ancestors
                  "nodeType": "YulAssignment",
                  "src": "6314:26:32",
=======
                  "nodeType": "YulAssignment",
                  "src": "6314:26:33",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "4765:5:32"
||||||| merged common ancestors
                        "src": "6326:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6337:2:32",
                        "type": "",
                        "value": "64"
=======
                        "src": "6326:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6337:2:33",
                        "type": "",
                        "value": "64"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4717:47:32"
||||||| merged common ancestors
                      "src": "6322:3:32"
=======
                      "src": "6322:3:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "4717:54:32"
||||||| merged common ancestors
                    "src": "6322:18:32"
=======
                    "src": "6322:18:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variables": [
                    {
<<<<<<< HEAD
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4707:6:32",
                      "type": ""
||||||| merged common ancestors
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6314:4:32"
=======
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6314:4:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4780:93:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "4861:3:32"
||||||| merged common ancestors
                        "src": "6402:6:32"
=======
                        "src": "6402:6:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
<<<<<<< HEAD
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4866:6:32"
||||||| merged common ancestors
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6415:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6426:1:32",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6411:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6411:17:32"
=======
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6415:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6426:1:33",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6411:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6411:17:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4787:73:32"
||||||| merged common ancestors
                      "src": "6350:51:32"
=======
                      "src": "6350:51:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "4787:86:32"
||||||| merged common ancestors
                    "src": "6350:79:32"
=======
                    "src": "6350:79:33"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4780:3:32"
                    }
                  ]
||||||| merged common ancestors
                  "nodeType": "YulExpressionStatement",
                  "src": "6350:79:32"
=======
                  "nodeType": "YulExpressionStatement",
                  "src": "6350:79:33"
>>>>>>> origin/ajibigad/token-swap
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4882:71:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "4947:5:32"
||||||| merged common ancestors
                        "src": "6483:6:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6496:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6507:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6492:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6492:18:32"
=======
                        "src": "6483:6:33"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6496:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6507:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6492:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6492:18:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "4897:49:32"
||||||| merged common ancestors
                      "src": "6439:43:32"
=======
                      "src": "6439:43:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "4897:56:32"
||||||| merged common ancestors
                    "src": "6439:72:32"
=======
                    "src": "6439:72:33"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "4886:7:32",
                      "type": ""
                    }
                  ]
                },
||||||| merged common ancestors
                  "nodeType": "YulExpressionStatement",
                  "src": "6439:72:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6268:9:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6280:6:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6288:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6299:4:32",
                "type": ""
              }
            ],
            "src": "6170:348:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6650:206:32",
              "statements": [
=======
                  "nodeType": "YulExpressionStatement",
                  "src": "6439:72:33"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6268:9:33",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6280:6:33",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6288:6:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6299:4:33",
                "type": ""
              }
            ],
            "src": "6170:348:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6650:206:33",
              "statements": [
>>>>>>> origin/ajibigad/token-swap
                {
<<<<<<< HEAD
                  "nodeType": "YulVariableDeclaration",
                  "src": "4962:21:32",
||||||| merged common ancestors
                  "nodeType": "YulAssignment",
                  "src": "6660:26:32",
=======
                  "nodeType": "YulAssignment",
                  "src": "6660:26:33",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
<<<<<<< HEAD
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "4976:7:32"
||||||| merged common ancestors
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6672:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6683:2:32",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6668:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6668:18:32"
=======
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6672:9:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6683:2:33",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6668:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6668:18:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variables": [
                    {
<<<<<<< HEAD
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "4966:6:32",
                      "type": ""
||||||| merged common ancestors
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6660:4:32"
=======
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6660:4:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                },
                {
<<<<<<< HEAD
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5052:224:32",
                    "statements": [
||||||| merged common ancestors
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6740:6:32"
                      },
=======
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6740:6:33"
                      },
>>>>>>> origin/ajibigad/token-swap
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5066:34:32",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "5093:6:32"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "5087:5:32"
||||||| merged common ancestors
                            "src": "6753:9:32"
=======
                            "src": "6753:9:33"
>>>>>>> origin/ajibigad/token-swap
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5087:13:32"
                        },
                        "variables": [
                          {
<<<<<<< HEAD
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "5070:13:32",
                            "type": ""
||||||| merged common ancestors
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6764:1:32",
                            "type": "",
                            "value": "0"
=======
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6764:1:33",
                            "type": "",
                            "value": "0"
>>>>>>> origin/ajibigad/token-swap
                          }
<<<<<<< HEAD
                        ]
||||||| merged common ancestors
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6749:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6749:17:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6696:43:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6696:71:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6696:71:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6821:6:32"
=======
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6749:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6749:17:33"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6696:43:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6696:71:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6696:71:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6821:6:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5113:70:32",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "5164:13:32"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "5179:3:32"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "5120:43:32"
||||||| merged common ancestors
                            "src": "6834:9:32"
=======
                            "src": "6834:9:33"
>>>>>>> origin/ajibigad/token-swap
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5120:63:32"
                        },
                        "variableNames": [
                          {
<<<<<<< HEAD
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5113:3:32"
||||||| merged common ancestors
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6845:2:32",
                            "type": "",
                            "value": "32"
=======
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6845:2:33",
                            "type": "",
                            "value": "32"
>>>>>>> origin/ajibigad/token-swap
                          }
<<<<<<< HEAD
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5196:70:32",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "5259:6:32"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "5206:52:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5206:60:32"
||||||| merged common ancestors
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6830:3:32"
=======
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6830:3:33"
>>>>>>> origin/ajibigad/token-swap
                        },
<<<<<<< HEAD
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5196:6:32"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5014:1:32"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5017:6:32"
||||||| merged common ancestors
                        "nodeType": "YulFunctionCall",
                        "src": "6830:18:32"
=======
                        "nodeType": "YulFunctionCall",
                        "src": "6830:18:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5011:2:32"
||||||| merged common ancestors
                      "src": "6777:43:32"
=======
                      "src": "6777:43:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "5011:13:32"
||||||| merged common ancestors
                    "src": "6777:72:32"
=======
                    "src": "6777:72:33"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5025:18:32",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5027:14:32",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5036:1:32"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5039:1:32",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5032:3:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5032:9:32"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5027:1:32"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "4996:14:32",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4998:10:32",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "5007:1:32",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "5002:1:32",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "4992:284:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5285:10:32",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "5292:3:32"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5285:3:32"
                    }
                  ]
||||||| merged common ancestors
                  "nodeType": "YulExpressionStatement",
                  "src": "6777:72:32"
=======
                  "nodeType": "YulExpressionStatement",
                  "src": "6777:72:33"
>>>>>>> origin/ajibigad/token-swap
                }
              ]
            },
            "name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
<<<<<<< HEAD
                "name": "value",
||||||| merged common ancestors
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6614:9:32",
                "type": ""
              },
              {
                "name": "value1",
=======
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6614:9:33",
                "type": ""
              },
              {
                "name": "value1",
>>>>>>> origin/ajibigad/token-swap
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "4672:5:32",
||||||| merged common ancestors
                "src": "6626:6:32",
=======
                "src": "6626:6:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "4679:3:32",
||||||| merged common ancestors
                "src": "6634:6:32",
=======
                "src": "6634:6:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "4688:3:32",
||||||| merged common ancestors
                "src": "6645:4:32",
=======
                "src": "6645:4:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
            "src": "4569:732:32"
||||||| merged common ancestors
            "src": "6524:332:32"
=======
            "src": "6524:332:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "5380:74:32",
||||||| merged common ancestors
              "src": "7010:225:32",
=======
              "src": "7010:225:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
<<<<<<< HEAD
                  "expression": {
||||||| merged common ancestors
                  "nodeType": "YulAssignment",
                  "src": "7020:26:32",
                  "value": {
=======
                  "nodeType": "YulAssignment",
                  "src": "7020:26:33",
                  "value": {
>>>>>>> origin/ajibigad/token-swap
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "5397:3:32"
||||||| merged common ancestors
                        "src": "7032:9:32"
=======
                        "src": "7032:9:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
<<<<<<< HEAD
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5441:5:32"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_rational_0_by_1_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5402:38:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5402:45:32"
||||||| merged common ancestors
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7043:2:32",
                        "type": "",
                        "value": "32"
=======
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7043:2:33",
                        "type": "",
                        "value": "32"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5390:6:32"
||||||| merged common ancestors
                      "src": "7028:3:32"
=======
                      "src": "7028:3:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "5390:58:32"
||||||| merged common ancestors
                    "src": "7028:18:32"
=======
                    "src": "7028:18:33"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "nodeType": "YulExpressionStatement",
                  "src": "5390:58:32"
                }
              ]
            },
            "name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5368:5:32",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5375:3:32",
                "type": ""
              }
            ],
            "src": "5307:147:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5515:53:32",
              "statements": [
||||||| merged common ancestors
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7020:4:32"
                    }
                  ]
                },
=======
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7020:4:33"
                    }
                  ]
                },
>>>>>>> origin/ajibigad/token-swap
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5532:3:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "5555:5:32"
||||||| merged common ancestors
                            "src": "7067:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7078:1:32",
                            "type": "",
                            "value": "0"
=======
                            "src": "7067:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7078:1:33",
                            "type": "",
                            "value": "0"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "5537:17:32"
||||||| merged common ancestors
                          "src": "7063:3:32"
=======
                          "src": "7063:3:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                        "src": "5537:24:32"
||||||| merged common ancestors
                        "src": "7063:17:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7086:4:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7092:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7082:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7082:20:32"
=======
                        "src": "7063:17:33"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7086:4:33"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7092:9:33"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7082:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7082:20:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5525:6:32"
||||||| merged common ancestors
                      "src": "7056:6:32"
=======
                      "src": "7056:6:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "5525:37:32"
||||||| merged common ancestors
                    "src": "7056:47:32"
=======
                    "src": "7056:47:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "nodeType": "YulExpressionStatement",
<<<<<<< HEAD
                  "src": "5525:37:32"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5503:5:32",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5510:3:32",
                "type": ""
              }
            ],
            "src": "5460:108:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5639:53:32",
              "statements": [
||||||| merged common ancestors
                  "src": "7056:47:32"
                },
=======
                  "src": "7056:47:33"
                },
>>>>>>> origin/ajibigad/token-swap
                {
<<<<<<< HEAD
                  "expression": {
||||||| merged common ancestors
                  "nodeType": "YulAssignment",
                  "src": "7112:116:32",
                  "value": {
=======
                  "nodeType": "YulAssignment",
                  "src": "7112:116:33",
                  "value": {
>>>>>>> origin/ajibigad/token-swap
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "5656:3:32"
||||||| merged common ancestors
                        "src": "7214:6:32"
=======
                        "src": "7214:6:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
<<<<<<< HEAD
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5679:5:32"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5661:17:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5661:24:32"
||||||| merged common ancestors
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7223:4:32"
=======
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7223:4:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5649:6:32"
||||||| merged common ancestors
                      "src": "7120:93:32"
=======
                      "src": "7120:93:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "5649:37:32"
||||||| merged common ancestors
                    "src": "7120:108:32"
=======
                    "src": "7120:108:33"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "nodeType": "YulExpressionStatement",
                  "src": "5649:37:32"
||||||| merged common ancestors
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7112:4:32"
                    }
                  ]
=======
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7112:4:33"
                    }
                  ]
>>>>>>> origin/ajibigad/token-swap
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "5627:5:32",
||||||| merged common ancestors
                "src": "6982:9:32",
=======
                "src": "6982:9:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              },
              {
<<<<<<< HEAD
                "name": "pos",
||||||| merged common ancestors
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6994:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
=======
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6994:6:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
>>>>>>> origin/ajibigad/token-swap
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "5634:3:32",
||||||| merged common ancestors
                "src": "7005:4:32",
=======
                "src": "7005:4:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
            "src": "5574:118:32"
||||||| merged common ancestors
            "src": "6862:373:32"
=======
            "src": "6862:373:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "5796:124:32",
||||||| merged common ancestors
              "src": "7509:563:32",
=======
              "src": "7509:563:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
                  "src": "5806:26:32",
||||||| merged common ancestors
                  "src": "7519:27:32",
=======
                  "src": "7519:27:33",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "5818:9:32"
||||||| merged common ancestors
                        "src": "7531:9:32"
=======
                        "src": "7531:9:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "5829:2:32",
||||||| merged common ancestors
                        "src": "7542:3:32",
=======
                        "src": "7542:3:33",
>>>>>>> origin/ajibigad/token-swap
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5814:3:32"
||||||| merged common ancestors
                      "src": "7527:3:32"
=======
                      "src": "7527:3:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "5814:18:32"
||||||| merged common ancestors
                    "src": "7527:19:32"
=======
                    "src": "7527:19:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5806:4:32"
||||||| merged common ancestors
                      "src": "7519:4:32"
=======
                      "src": "7519:4:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "5886:6:32"
||||||| merged common ancestors
                        "src": "7600:6:32"
=======
                        "src": "7600:6:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "5899:9:32"
||||||| merged common ancestors
                            "src": "7613:9:32"
=======
                            "src": "7613:9:33"
>>>>>>> origin/ajibigad/token-swap
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "5910:1:32",
||||||| merged common ancestors
                            "src": "7624:1:32",
=======
                            "src": "7624:1:33",
>>>>>>> origin/ajibigad/token-swap
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "5895:3:32"
||||||| merged common ancestors
                          "src": "7609:3:32"
=======
                          "src": "7609:3:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                        "src": "5895:17:32"
||||||| merged common ancestors
                        "src": "7609:17:32"
=======
                        "src": "7609:17:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "5842:43:32"
||||||| merged common ancestors
                      "src": "7556:43:32"
=======
                      "src": "7556:43:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "5842:71:32"
||||||| merged common ancestors
                    "src": "7556:71:32"
=======
                    "src": "7556:71:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "nodeType": "YulExpressionStatement",
<<<<<<< HEAD
                  "src": "5842:71:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5768:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5780:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5791:4:32",
                "type": ""
              }
            ],
            "src": "5698:222:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6032:132:32",
              "statements": [
||||||| merged common ancestors
                  "src": "7556:71:32"
                },
=======
                  "src": "7556:71:33"
                },
>>>>>>> origin/ajibigad/token-swap
                {
                  "nodeType": "YulAssignment",
                  "src": "6042:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "6054:9:32"
||||||| merged common ancestors
                        "src": "7689:6:32"
=======
                        "src": "7689:6:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
<<<<<<< HEAD
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6065:2:32",
                        "type": "",
                        "value": "32"
||||||| merged common ancestors
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7702:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7713:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7698:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7698:18:32"
=======
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7702:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7713:2:33",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7698:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7698:18:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6050:3:32"
||||||| merged common ancestors
                      "src": "7637:51:32"
=======
                      "src": "7637:51:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "6050:18:32"
||||||| merged common ancestors
                    "src": "7637:80:32"
=======
                    "src": "7637:80:33"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6042:4:32"
                    }
                  ]
||||||| merged common ancestors
                  "nodeType": "YulExpressionStatement",
                  "src": "7637:80:32"
=======
                  "nodeType": "YulExpressionStatement",
                  "src": "7637:80:33"
>>>>>>> origin/ajibigad/token-swap
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6130:6:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "6143:9:32"
||||||| merged common ancestors
                            "src": "7738:9:32"
=======
                            "src": "7738:9:33"
>>>>>>> origin/ajibigad/token-swap
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "6154:1:32",
||||||| merged common ancestors
                            "src": "7749:2:32",
=======
                            "src": "7749:2:33",
>>>>>>> origin/ajibigad/token-swap
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "6139:3:32"
||||||| merged common ancestors
                          "src": "7734:3:32"
=======
                          "src": "7734:3:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                        "src": "6139:17:32"
||||||| merged common ancestors
                        "src": "7734:18:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7758:4:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7764:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7754:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7754:20:32"
=======
                        "src": "7734:18:33"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7758:4:33"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7764:9:33"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7754:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7754:20:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6078:51:32"
||||||| merged common ancestors
                      "src": "7727:6:32"
=======
                      "src": "7727:6:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "6078:79:32"
||||||| merged common ancestors
                    "src": "7727:48:32"
=======
                    "src": "7727:48:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "nodeType": "YulExpressionStatement",
<<<<<<< HEAD
                  "src": "6078:79:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6004:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6016:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6027:4:32",
                "type": ""
              }
            ],
            "src": "5926:238:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6304:214:32",
              "statements": [
||||||| merged common ancestors
                  "src": "7727:48:32"
                },
=======
                  "src": "7727:48:33"
                },
>>>>>>> origin/ajibigad/token-swap
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
                  "src": "6314:26:32",
||||||| merged common ancestors
                  "src": "7784:116:32",
=======
                  "src": "7784:116:33",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "6326:9:32"
||||||| merged common ancestors
                        "src": "7886:6:32"
=======
                        "src": "7886:6:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
<<<<<<< HEAD
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6337:2:32",
                        "type": "",
                        "value": "64"
||||||| merged common ancestors
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7895:4:32"
=======
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7895:4:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6322:3:32"
||||||| merged common ancestors
                      "src": "7792:93:32"
=======
                      "src": "7792:93:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "6322:18:32"
||||||| merged common ancestors
                    "src": "7792:108:32"
=======
                    "src": "7792:108:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6314:4:32"
||||||| merged common ancestors
                      "src": "7784:4:32"
=======
                      "src": "7784:4:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "6402:6:32"
||||||| merged common ancestors
                        "src": "7954:6:32"
=======
                        "src": "7954:6:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "6415:9:32"
||||||| merged common ancestors
                            "src": "7967:9:32"
=======
                            "src": "7967:9:33"
>>>>>>> origin/ajibigad/token-swap
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "6426:1:32",
||||||| merged common ancestors
                            "src": "7978:2:32",
=======
                            "src": "7978:2:33",
>>>>>>> origin/ajibigad/token-swap
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "6411:3:32"
||||||| merged common ancestors
                          "src": "7963:3:32"
=======
                          "src": "7963:3:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                        "src": "6411:17:32"
||||||| merged common ancestors
                        "src": "7963:18:32"
=======
                        "src": "7963:18:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6350:51:32"
||||||| merged common ancestors
                      "src": "7910:43:32"
=======
                      "src": "7910:43:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "6350:79:32"
||||||| merged common ancestors
                    "src": "7910:72:32"
=======
                    "src": "7910:72:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "nodeType": "YulExpressionStatement",
<<<<<<< HEAD
                  "src": "6350:79:32"
||||||| merged common ancestors
                  "src": "7910:72:32"
=======
                  "src": "7910:72:33"
>>>>>>> origin/ajibigad/token-swap
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "6483:6:32"
||||||| merged common ancestors
                        "src": "8036:6:32"
=======
                        "src": "8036:6:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "6496:9:32"
||||||| merged common ancestors
                            "src": "8049:9:32"
=======
                            "src": "8049:9:33"
>>>>>>> origin/ajibigad/token-swap
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "6507:2:32",
||||||| merged common ancestors
                            "src": "8060:3:32",
=======
                            "src": "8060:3:33",
>>>>>>> origin/ajibigad/token-swap
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "6492:3:32"
||||||| merged common ancestors
                          "src": "8045:3:32"
=======
                          "src": "8045:3:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                        "src": "6492:18:32"
||||||| merged common ancestors
                        "src": "8045:19:32"
=======
                        "src": "8045:19:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6439:43:32"
||||||| merged common ancestors
                      "src": "7992:43:32"
=======
                      "src": "7992:43:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "6439:72:32"
||||||| merged common ancestors
                    "src": "7992:73:32"
=======
                    "src": "7992:73:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "nodeType": "YulExpressionStatement",
<<<<<<< HEAD
                  "src": "6439:72:32"
||||||| merged common ancestors
                  "src": "7992:73:32"
=======
                  "src": "7992:73:33"
>>>>>>> origin/ajibigad/token-swap
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6268:9:32",
||||||| merged common ancestors
                "src": "7449:9:32",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "7461:6:32",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "7469:6:32",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7477:6:32",
=======
                "src": "7449:9:33",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "7461:6:33",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "7469:6:33",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7477:6:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6280:6:32",
||||||| merged common ancestors
                "src": "7485:6:32",
=======
                "src": "7485:6:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6288:6:32",
||||||| merged common ancestors
                "src": "7493:6:32",
=======
                "src": "7493:6:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6299:4:32",
||||||| merged common ancestors
                "src": "7504:4:32",
=======
                "src": "7504:4:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
            "src": "6170:348:32"
||||||| merged common ancestors
            "src": "7241:831:32"
=======
            "src": "7241:831:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "6650:206:32",
||||||| merged common ancestors
              "src": "8118:238:32",
=======
              "src": "8118:238:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
                  "src": "6660:26:32",
||||||| merged common ancestors
                  "src": "8128:19:32",
=======
                  "src": "8128:19:33",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6672:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "6683:2:32",
||||||| merged common ancestors
                        "src": "8144:2:32",
=======
                        "src": "8144:2:33",
>>>>>>> origin/ajibigad/token-swap
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6668:3:32"
||||||| merged common ancestors
                      "src": "8138:5:32"
=======
                      "src": "8138:5:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "6668:18:32"
||||||| merged common ancestors
                    "src": "8138:9:32"
=======
                    "src": "8138:9:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6660:4:32"
||||||| merged common ancestors
                      "src": "8128:6:32"
=======
                      "src": "8128:6:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                },
                {
<<<<<<< HEAD
                  "expression": {
||||||| merged common ancestors
                  "nodeType": "YulVariableDeclaration",
                  "src": "8156:35:32",
                  "value": {
=======
                  "nodeType": "YulVariableDeclaration",
                  "src": "8156:35:33",
                  "value": {
>>>>>>> origin/ajibigad/token-swap
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "6740:6:32"
||||||| merged common ancestors
                        "src": "8178:6:32"
=======
                        "src": "8178:6:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
<<<<<<< HEAD
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6753:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6764:1:32",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6749:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6749:17:32"
||||||| merged common ancestors
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "8186:4:32"
=======
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "8186:4:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6696:43:32"
||||||| merged common ancestors
                      "src": "8174:3:32"
=======
                      "src": "8174:3:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "6696:71:32"
||||||| merged common ancestors
                    "src": "8174:17:32"
=======
                    "src": "8174:17:33"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "nodeType": "YulExpressionStatement",
                  "src": "6696:71:32"
||||||| merged common ancestors
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "8160:10:32",
                      "type": ""
                    }
                  ]
=======
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "8160:10:33",
                      "type": ""
                    }
                  ]
>>>>>>> origin/ajibigad/token-swap
                },
                {
<<<<<<< HEAD
                  "expression": {
||||||| merged common ancestors
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8302:17:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error",
                            "nodeType": "YulIdentifier",
                            "src": "8304:11:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8304:13:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8304:13:32"
                      }
                    ]
                  },
                  "condition": {
=======
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8302:17:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error",
                            "nodeType": "YulIdentifier",
                            "src": "8304:11:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8304:13:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8304:13:33"
                      }
                    ]
                  },
                  "condition": {
>>>>>>> origin/ajibigad/token-swap
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6821:6:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "6834:9:32"
||||||| merged common ancestors
                            "src": "8245:10:32"
=======
                            "src": "8245:10:33"
>>>>>>> origin/ajibigad/token-swap
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
                            "src": "6845:2:32",
||||||| merged common ancestors
                            "src": "8257:18:32",
=======
                            "src": "8257:18:33",
>>>>>>> origin/ajibigad/token-swap
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "6830:3:32"
||||||| merged common ancestors
                          "src": "8242:2:32"
=======
                          "src": "8242:2:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                        "src": "6830:18:32"
||||||| merged common ancestors
                        "src": "8242:34:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "8281:10:32"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8293:6:32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "8278:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8278:22:32"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "8239:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8239:62:32"
                  },
                  "nodeType": "YulIf",
                  "src": "8236:2:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8335:2:32",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "8339:10:32"
=======
                        "src": "8242:34:33"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "8281:10:33"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8293:6:33"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "8278:2:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8278:22:33"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "8239:2:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8239:62:33"
                  },
                  "nodeType": "YulIf",
                  "src": "8236:2:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8335:2:33",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "8339:10:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "6777:43:32"
||||||| merged common ancestors
                      "src": "8328:6:32"
=======
                      "src": "8328:6:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "6777:72:32"
||||||| merged common ancestors
                    "src": "8328:22:32"
=======
                    "src": "8328:22:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "nodeType": "YulExpressionStatement",
<<<<<<< HEAD
                  "src": "6777:72:32"
||||||| merged common ancestors
                  "src": "8328:22:32"
=======
                  "src": "8328:22:33"
>>>>>>> origin/ajibigad/token-swap
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6614:9:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6626:6:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6634:6:32",
||||||| merged common ancestors
                "src": "8102:4:32",
=======
                "src": "8102:4:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6645:4:32",
||||||| merged common ancestors
                "src": "8111:6:32",
=======
                "src": "8111:6:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
            "src": "6524:332:32"
||||||| merged common ancestors
            "src": "8078:278:32"
=======
            "src": "8078:278:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "7010:225:32",
||||||| merged common ancestors
              "src": "8444:224:32",
=======
              "src": "8444:224:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
<<<<<<< HEAD
                  "nodeType": "YulAssignment",
                  "src": "7020:26:32",
                  "value": {
||||||| merged common ancestors
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8549:17:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error",
                            "nodeType": "YulIdentifier",
                            "src": "8551:11:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8551:13:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8551:13:32"
                      }
                    ]
                  },
                  "condition": {
=======
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8549:17:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error",
                            "nodeType": "YulIdentifier",
                            "src": "8551:11:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8551:13:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8551:13:33"
                      }
                    ]
                  },
                  "condition": {
>>>>>>> origin/ajibigad/token-swap
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "7032:9:32"
||||||| merged common ancestors
                        "src": "8521:6:32"
=======
                        "src": "8521:6:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "7043:2:32",
||||||| merged common ancestors
                        "src": "8529:18:32",
=======
                        "src": "8529:18:33",
>>>>>>> origin/ajibigad/token-swap
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7028:3:32"
||||||| merged common ancestors
                      "src": "8518:2:32"
=======
                      "src": "8518:2:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "7028:18:32"
||||||| merged common ancestors
                    "src": "8518:30:32"
=======
                    "src": "8518:30:33"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7020:4:32"
                    }
                  ]
||||||| merged common ancestors
                  "nodeType": "YulIf",
                  "src": "8515:2:32"
=======
                  "nodeType": "YulIf",
                  "src": "8515:2:33"
>>>>>>> origin/ajibigad/token-swap
                },
                {
<<<<<<< HEAD
                  "expression": {
||||||| merged common ancestors
                  "nodeType": "YulAssignment",
                  "src": "8576:25:32",
                  "value": {
=======
                  "nodeType": "YulAssignment",
                  "src": "8576:25:33",
                  "value": {
>>>>>>> origin/ajibigad/token-swap
                    "arguments": [
                      {
<<<<<<< HEAD
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7067:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7078:1:32",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7063:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7063:17:32"
||||||| merged common ancestors
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8588:6:32"
=======
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8588:6:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
<<<<<<< HEAD
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7086:4:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7092:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7082:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7082:20:32"
||||||| merged common ancestors
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8596:4:32",
                        "type": "",
                        "value": "0x20"
=======
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8596:4:33",
                        "type": "",
                        "value": "0x20"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7056:6:32"
||||||| merged common ancestors
                      "src": "8584:3:32"
=======
                      "src": "8584:3:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "7056:47:32"
||||||| merged common ancestors
                    "src": "8584:17:32"
=======
                    "src": "8584:17:33"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "nodeType": "YulExpressionStatement",
                  "src": "7056:47:32"
||||||| merged common ancestors
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "8576:4:32"
                    }
                  ]
=======
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "8576:4:33"
                    }
                  ]
>>>>>>> origin/ajibigad/token-swap
                },
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
                  "src": "7112:116:32",
||||||| merged common ancestors
                  "src": "8638:23:32",
=======
                  "src": "8638:23:33",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "7214:6:32"
||||||| merged common ancestors
                        "src": "8650:4:32"
=======
                        "src": "8650:4:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
<<<<<<< HEAD
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7223:4:32"
||||||| merged common ancestors
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8656:4:32",
                        "type": "",
                        "value": "0x20"
=======
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8656:4:33",
                        "type": "",
                        "value": "0x20"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7120:93:32"
||||||| merged common ancestors
                      "src": "8646:3:32"
=======
                      "src": "8646:3:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "7120:108:32"
||||||| merged common ancestors
                    "src": "8646:15:32"
=======
                    "src": "8646:15:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7112:4:32"
||||||| merged common ancestors
                      "src": "8638:4:32"
=======
                      "src": "8638:4:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "6982:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6994:6:32",
||||||| merged common ancestors
                "src": "8428:6:32",
=======
                "src": "8428:6:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "7005:4:32",
||||||| merged common ancestors
                "src": "8439:4:32",
=======
                "src": "8439:4:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
            "src": "6862:373:32"
||||||| merged common ancestors
            "src": "8362:306:32"
=======
            "src": "8362:306:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "7509:563:32",
||||||| merged common ancestors
              "src": "8746:60:32",
=======
              "src": "8746:60:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
                  "src": "7519:27:32",
||||||| merged common ancestors
                  "src": "8756:11:32",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "8764:3:32"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "8756:4:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8777:22:32",
=======
                  "src": "8756:11:33",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "8764:3:33"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "8756:4:33"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8777:22:33",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "7531:9:32"
||||||| merged common ancestors
                        "src": "8789:3:32"
=======
                        "src": "8789:3:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "7542:3:32",
||||||| merged common ancestors
                        "src": "8794:4:32",
=======
                        "src": "8794:4:33",
>>>>>>> origin/ajibigad/token-swap
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7527:3:32"
||||||| merged common ancestors
                      "src": "8785:3:32"
=======
                      "src": "8785:3:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "7527:19:32"
||||||| merged common ancestors
                    "src": "8785:14:32"
=======
                    "src": "8785:14:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7519:4:32"
||||||| merged common ancestors
                      "src": "8777:4:32"
=======
                      "src": "8777:4:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
<<<<<<< HEAD
                },
||||||| merged common ancestors
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "8733:3:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "8741:4:32",
                "type": ""
              }
            ],
            "src": "8674:132:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8884:60:32",
              "statements": [
=======
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "8733:3:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "8741:4:33",
                "type": ""
              }
            ],
            "src": "8674:132:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8884:60:33",
              "statements": [
>>>>>>> origin/ajibigad/token-swap
                {
<<<<<<< HEAD
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7600:6:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7613:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7624:1:32",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7609:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7609:17:32"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
||||||| merged common ancestors
                  "nodeType": "YulAssignment",
                  "src": "8894:11:32",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "8902:3:32"
                  },
                  "variableNames": [
                    {
                      "name": "data",
=======
                  "nodeType": "YulAssignment",
                  "src": "8894:11:33",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "8902:3:33"
                  },
                  "variableNames": [
                    {
                      "name": "data",
>>>>>>> origin/ajibigad/token-swap
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7556:43:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7556:71:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7556:71:32"
||||||| merged common ancestors
                      "src": "8894:4:32"
                    }
                  ]
=======
                      "src": "8894:4:33"
                    }
                  ]
>>>>>>> origin/ajibigad/token-swap
                },
                {
<<<<<<< HEAD
                  "expression": {
||||||| merged common ancestors
                  "nodeType": "YulAssignment",
                  "src": "8915:22:32",
                  "value": {
=======
                  "nodeType": "YulAssignment",
                  "src": "8915:22:33",
                  "value": {
>>>>>>> origin/ajibigad/token-swap
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "7689:6:32"
||||||| merged common ancestors
                        "src": "8927:3:32"
=======
                        "src": "8927:3:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
<<<<<<< HEAD
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7702:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7713:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7698:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7698:18:32"
||||||| merged common ancestors
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8932:4:32",
                        "type": "",
                        "value": "0x20"
=======
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8932:4:33",
                        "type": "",
                        "value": "0x20"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7637:51:32"
||||||| merged common ancestors
                      "src": "8923:3:32"
=======
                      "src": "8923:3:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "7637:80:32"
||||||| merged common ancestors
                    "src": "8923:14:32"
=======
                    "src": "8923:14:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7637:80:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7738:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7749:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7734:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7734:18:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7758:4:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7764:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7754:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7754:20:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7727:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7727:48:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7727:48:32"
                },
||||||| merged common ancestors
                      "src": "8915:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "8871:3:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "8879:4:32",
                "type": ""
              }
            ],
            "src": "8812:132:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9024:40:32",
              "statements": [
=======
                      "src": "8915:4:33"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "8871:3:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "8879:4:33",
                "type": ""
              }
            ],
            "src": "8812:132:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9024:40:33",
              "statements": [
>>>>>>> origin/ajibigad/token-swap
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
                  "src": "7784:116:32",
||||||| merged common ancestors
                  "src": "9035:22:32",
=======
                  "src": "9035:22:33",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "7886:6:32"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7895:4:32"
||||||| merged common ancestors
                        "src": "9051:5:32"
=======
                        "src": "9051:5:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7792:93:32"
||||||| merged common ancestors
                      "src": "9045:5:32"
=======
                      "src": "9045:5:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "7792:108:32"
||||||| merged common ancestors
                    "src": "9045:12:32"
=======
                    "src": "9045:12:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7784:4:32"
||||||| merged common ancestors
                      "src": "9035:6:32"
=======
                      "src": "9035:6:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
<<<<<<< HEAD
                },
||||||| merged common ancestors
                }
              ]
            },
            "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9007:5:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9017:6:32",
                "type": ""
              }
            ],
            "src": "8950:114:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9144:40:32",
              "statements": [
=======
                }
              ]
            },
            "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9007:5:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9017:6:33",
                "type": ""
              }
            ],
            "src": "8950:114:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9144:40:33",
              "statements": [
>>>>>>> origin/ajibigad/token-swap
                {
<<<<<<< HEAD
                  "expression": {
||||||| merged common ancestors
                  "nodeType": "YulAssignment",
                  "src": "9155:22:32",
                  "value": {
=======
                  "nodeType": "YulAssignment",
                  "src": "9155:22:33",
                  "value": {
>>>>>>> origin/ajibigad/token-swap
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "7954:6:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7967:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7978:2:32",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7963:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7963:18:32"
||||||| merged common ancestors
                        "src": "9171:5:32"
=======
                        "src": "9171:5:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7910:43:32"
||||||| merged common ancestors
                      "src": "9165:5:32"
=======
                      "src": "9165:5:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "7910:72:32"
||||||| merged common ancestors
                    "src": "9165:12:32"
=======
                    "src": "9165:12:33"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "nodeType": "YulExpressionStatement",
                  "src": "7910:72:32"
                },
||||||| merged common ancestors
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "9155:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9127:5:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9137:6:32",
                "type": ""
              }
            ],
            "src": "9070:114:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9265:38:32",
              "statements": [
=======
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "9155:6:33"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9127:5:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9137:6:33",
                "type": ""
              }
            ],
            "src": "9070:114:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9265:38:33",
              "statements": [
>>>>>>> origin/ajibigad/token-swap
                {
<<<<<<< HEAD
                  "expression": {
||||||| merged common ancestors
                  "nodeType": "YulAssignment",
                  "src": "9275:22:32",
                  "value": {
=======
                  "nodeType": "YulAssignment",
                  "src": "9275:22:33",
                  "value": {
>>>>>>> origin/ajibigad/token-swap
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "8036:6:32"
||||||| merged common ancestors
                        "src": "9287:3:32"
=======
                        "src": "9287:3:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
<<<<<<< HEAD
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8049:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8060:3:32",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8045:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8045:19:32"
||||||| merged common ancestors
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9292:4:32",
                        "type": "",
                        "value": "0x20"
=======
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9292:4:33",
                        "type": "",
                        "value": "0x20"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "7992:43:32"
||||||| merged common ancestors
                      "src": "9283:3:32"
=======
                      "src": "9283:3:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "7992:73:32"
||||||| merged common ancestors
                    "src": "9283:14:32"
=======
                    "src": "9283:14:33"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "nodeType": "YulExpressionStatement",
                  "src": "7992:73:32"
||||||| merged common ancestors
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "9275:4:32"
                    }
                  ]
=======
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "9275:4:33"
                    }
                  ]
>>>>>>> origin/ajibigad/token-swap
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "7449:9:32",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "7461:6:32",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "7469:6:32",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7477:6:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7485:6:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7493:6:32",
||||||| merged common ancestors
                "src": "9252:3:32",
=======
                "src": "9252:3:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "7504:4:32",
||||||| merged common ancestors
                "src": "9260:4:32",
=======
                "src": "9260:4:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
            "src": "7241:831:32"
||||||| merged common ancestors
            "src": "9190:113:32"
=======
            "src": "9190:113:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "8118:238:32",
||||||| merged common ancestors
              "src": "9384:38:32",
=======
              "src": "9384:38:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
                  "src": "8128:19:32",
||||||| merged common ancestors
                  "src": "9394:22:32",
=======
                  "src": "9394:22:33",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
                    "arguments": [
                      {
<<<<<<< HEAD
||||||| merged common ancestors
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "9406:3:32"
                      },
                      {
=======
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "9406:3:33"
                      },
                      {
>>>>>>> origin/ajibigad/token-swap
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "8144:2:32",
||||||| merged common ancestors
                        "src": "9411:4:32",
=======
                        "src": "9411:4:33",
>>>>>>> origin/ajibigad/token-swap
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8138:5:32"
||||||| merged common ancestors
                      "src": "9402:3:32"
=======
                      "src": "9402:3:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "8138:9:32"
||||||| merged common ancestors
                    "src": "9402:14:32"
=======
                    "src": "9402:14:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8128:6:32"
||||||| merged common ancestors
                      "src": "9394:4:32"
=======
                      "src": "9394:4:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
<<<<<<< HEAD
                },
||||||| merged common ancestors
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "9371:3:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "9379:4:32",
                "type": ""
              }
            ],
            "src": "9309:113:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9539:73:32",
              "statements": [
=======
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "9371:3:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "9379:4:33",
                "type": ""
              }
            ],
            "src": "9309:113:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9539:73:33",
              "statements": [
>>>>>>> origin/ajibigad/token-swap
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8156:35:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "8178:6:32"
||||||| merged common ancestors
                        "src": "9556:3:32"
=======
                        "src": "9556:3:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "8186:4:32"
||||||| merged common ancestors
                        "src": "9561:6:32"
=======
                        "src": "9561:6:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8174:3:32"
||||||| merged common ancestors
                      "src": "9549:6:32"
=======
                      "src": "9549:6:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "8174:17:32"
||||||| merged common ancestors
                    "src": "9549:19:32"
=======
                    "src": "9549:19:33"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "8160:10:32",
                      "type": ""
                    }
                  ]
||||||| merged common ancestors
                  "nodeType": "YulExpressionStatement",
                  "src": "9549:19:32"
=======
                  "nodeType": "YulExpressionStatement",
                  "src": "9549:19:33"
>>>>>>> origin/ajibigad/token-swap
                },
                {
<<<<<<< HEAD
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8302:17:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error",
                            "nodeType": "YulIdentifier",
                            "src": "8304:11:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8304:13:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8304:13:32"
                      }
                    ]
                  },
                  "condition": {
||||||| merged common ancestors
                  "nodeType": "YulAssignment",
                  "src": "9577:29:32",
                  "value": {
=======
                  "nodeType": "YulAssignment",
                  "src": "9577:29:33",
                  "value": {
>>>>>>> origin/ajibigad/token-swap
                    "arguments": [
                      {
<<<<<<< HEAD
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "8245:10:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8257:18:32",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "8242:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8242:34:32"
||||||| merged common ancestors
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9596:3:32"
=======
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9596:3:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "8281:10:32"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8293:6:32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "8278:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8278:22:32"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "8239:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8239:62:32"
                  },
                  "nodeType": "YulIf",
                  "src": "8236:2:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "8335:2:32",
||||||| merged common ancestors
                        "src": "9601:4:32",
=======
                        "src": "9601:4:33",
>>>>>>> origin/ajibigad/token-swap
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "8339:10:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8328:6:32"
||||||| merged common ancestors
                      "src": "9592:3:32"
=======
                      "src": "9592:3:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "8328:22:32"
||||||| merged common ancestors
                    "src": "9592:14:32"
=======
                    "src": "9592:14:33"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "nodeType": "YulExpressionStatement",
                  "src": "8328:22:32"
||||||| merged common ancestors
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "9577:11:32"
                    }
                  ]
=======
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "9577:11:33"
                    }
                  ]
>>>>>>> origin/ajibigad/token-swap
                }
              ]
            },
            "name": "allocateMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
<<<<<<< HEAD
                "name": "size",
||||||| merged common ancestors
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9511:3:32",
                "type": ""
              },
              {
                "name": "length",
=======
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9511:3:33",
                "type": ""
              },
              {
                "name": "length",
>>>>>>> origin/ajibigad/token-swap
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "8102:4:32",
||||||| merged common ancestors
                "src": "9516:6:32",
=======
                "src": "9516:6:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "8111:6:32",
||||||| merged common ancestors
                "src": "9527:11:32",
=======
                "src": "9527:11:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
            "src": "8078:278:32"
||||||| merged common ancestors
            "src": "9428:184:32"
=======
            "src": "9428:184:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "8444:224:32",
||||||| merged common ancestors
              "src": "9729:73:32",
=======
              "src": "9729:73:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8549:17:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error",
                            "nodeType": "YulIdentifier",
                            "src": "8551:11:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8551:13:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8551:13:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "8521:6:32"
||||||| merged common ancestors
                        "src": "9746:3:32"
=======
                        "src": "9746:3:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8529:18:32",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8518:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8518:30:32"
                  },
                  "nodeType": "YulIf",
                  "src": "8515:2:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8576:25:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "8588:6:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8596:4:32",
                        "type": "",
                        "value": "0x20"
||||||| merged common ancestors
                        "src": "9751:6:32"
=======
                        "src": "9751:6:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8584:3:32"
||||||| merged common ancestors
                      "src": "9739:6:32"
=======
                      "src": "9739:6:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "8584:17:32"
||||||| merged common ancestors
                    "src": "9739:19:32"
=======
                    "src": "9739:19:33"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "8576:4:32"
                    }
                  ]
||||||| merged common ancestors
                  "nodeType": "YulExpressionStatement",
                  "src": "9739:19:32"
=======
                  "nodeType": "YulExpressionStatement",
                  "src": "9739:19:33"
>>>>>>> origin/ajibigad/token-swap
                },
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
                  "src": "8638:23:32",
||||||| merged common ancestors
                  "src": "9767:29:32",
=======
                  "src": "9767:29:33",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "8650:4:32"
||||||| merged common ancestors
                        "src": "9786:3:32"
=======
                        "src": "9786:3:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
                        "src": "8656:4:32",
||||||| merged common ancestors
                        "src": "9791:4:32",
=======
                        "src": "9791:4:33",
>>>>>>> origin/ajibigad/token-swap
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8646:3:32"
||||||| merged common ancestors
                      "src": "9782:3:32"
=======
                      "src": "9782:3:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "8646:15:32"
||||||| merged common ancestors
                    "src": "9782:14:32"
=======
                    "src": "9782:14:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8638:4:32"
||||||| merged common ancestors
                      "src": "9767:11:32"
=======
                      "src": "9767:11:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
<<<<<<< HEAD
||||||| merged common ancestors
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9701:3:32",
                "type": ""
              },
              {
=======
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9701:3:33",
                "type": ""
              },
              {
>>>>>>> origin/ajibigad/token-swap
                "name": "length",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "8428:6:32",
||||||| merged common ancestors
                "src": "9706:6:32",
=======
                "src": "9706:6:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "8439:4:32",
||||||| merged common ancestors
                "src": "9717:11:32",
=======
                "src": "9717:11:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
            "src": "8362:306:32"
||||||| merged common ancestors
            "src": "9618:184:32"
=======
            "src": "9618:184:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "8746:60:32",
||||||| merged common ancestors
              "src": "9853:51:32",
=======
              "src": "9853:51:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
                  "src": "8756:11:32",
||||||| merged common ancestors
                  "src": "9863:35:32",
=======
                  "src": "9863:35:33",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "8764:3:32"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "8756:4:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8777:22:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "8789:3:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8794:4:32",
                        "type": "",
                        "value": "0x20"
||||||| merged common ancestors
                        "src": "9892:5:32"
=======
                        "src": "9892:5:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8785:3:32"
||||||| merged common ancestors
                      "src": "9874:17:32"
=======
                      "src": "9874:17:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "8785:14:32"
||||||| merged common ancestors
                    "src": "9874:24:32"
=======
                    "src": "9874:24:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8777:4:32"
||||||| merged common ancestors
                      "src": "9863:7:32"
=======
                      "src": "9863:7:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "8733:3:32",
||||||| merged common ancestors
                "src": "9835:5:32",
=======
                "src": "9835:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "8741:4:32",
||||||| merged common ancestors
                "src": "9845:7:32",
=======
                "src": "9845:7:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
            "src": "8674:132:32"
||||||| merged common ancestors
            "src": "9808:96:32"
=======
            "src": "9808:96:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "8884:60:32",
||||||| merged common ancestors
              "src": "9952:48:32",
=======
              "src": "9952:48:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
                  "src": "8894:11:32",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "8902:3:32"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "8894:4:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8915:22:32",
||||||| merged common ancestors
                  "src": "9962:32:32",
=======
                  "src": "9962:32:33",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "8927:3:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8932:4:32",
                        "type": "",
                        "value": "0x20"
||||||| merged common ancestors
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9987:5:32"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "9980:6:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9980:13:32"
=======
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9987:5:33"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "9980:6:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9980:13:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8923:3:32"
||||||| merged common ancestors
                      "src": "9973:6:32"
=======
                      "src": "9973:6:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "8923:14:32"
||||||| merged common ancestors
                    "src": "9973:21:32"
=======
                    "src": "9973:21:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "8915:4:32"
||||||| merged common ancestors
                      "src": "9962:7:32"
=======
                      "src": "9962:7:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "8871:3:32",
||||||| merged common ancestors
                "src": "9934:5:32",
=======
                "src": "9934:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "8879:4:32",
||||||| merged common ancestors
                "src": "9944:7:32",
=======
                "src": "9944:7:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
            "src": "8812:132:32"
||||||| merged common ancestors
            "src": "9910:90:32"
=======
            "src": "9910:90:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "9024:40:32",
||||||| merged common ancestors
              "src": "10051:81:32",
=======
              "src": "10051:81:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
                  "src": "9035:22:32",
||||||| merged common ancestors
                  "src": "10061:65:32",
=======
                  "src": "10061:65:33",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "9051:5:32"
||||||| merged common ancestors
                        "src": "10076:5:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10083:42:32",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
=======
                        "src": "10076:5:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10083:42:33",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "9045:5:32"
||||||| merged common ancestors
                      "src": "10072:3:32"
=======
                      "src": "10072:3:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "9045:12:32"
||||||| merged common ancestors
                    "src": "10072:54:32"
=======
                    "src": "10072:54:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "9035:6:32"
||||||| merged common ancestors
                      "src": "10061:7:32"
=======
                      "src": "10061:7:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "9007:5:32",
||||||| merged common ancestors
                "src": "10033:5:32",
=======
                "src": "10033:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "9017:6:32",
||||||| merged common ancestors
                "src": "10043:7:32",
=======
                "src": "10043:7:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
            "src": "8950:114:32"
||||||| merged common ancestors
            "src": "10006:126:32"
=======
            "src": "10006:126:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "9144:40:32",
||||||| merged common ancestors
              "src": "10183:32:32",
=======
              "src": "10183:32:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
                  "src": "9155:22:32",
||||||| merged common ancestors
                  "src": "10193:16:32",
=======
                  "src": "10193:16:33",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
<<<<<<< HEAD
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9171:5:32"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9165:5:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9165:12:32"
||||||| merged common ancestors
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "10204:5:32"
=======
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "10204:5:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "9155:6:32"
||||||| merged common ancestors
                      "src": "10193:7:32"
=======
                      "src": "10193:7:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "9127:5:32",
||||||| merged common ancestors
                "src": "10165:5:32",
=======
                "src": "10165:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "9137:6:32",
||||||| merged common ancestors
                "src": "10175:7:32",
=======
                "src": "10175:7:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
            "src": "9070:114:32"
||||||| merged common ancestors
            "src": "10138:77:32"
=======
            "src": "10138:77:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "9265:38:32",
||||||| merged common ancestors
              "src": "10289:66:32",
=======
              "src": "10289:66:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
                  "src": "9275:22:32",
||||||| merged common ancestors
                  "src": "10299:50:32",
=======
                  "src": "10299:50:33",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "9287:3:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9292:4:32",
                        "type": "",
                        "value": "0x20"
||||||| merged common ancestors
                        "src": "10343:5:32"
=======
                        "src": "10343:5:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "9283:3:32"
||||||| merged common ancestors
                      "src": "10312:30:32"
=======
                      "src": "10312:30:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "9283:14:32"
||||||| merged common ancestors
                    "src": "10312:37:32"
=======
                    "src": "10312:37:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "9275:4:32"
||||||| merged common ancestors
                      "src": "10299:9:32"
=======
                      "src": "10299:9:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "9252:3:32",
||||||| merged common ancestors
                "src": "10269:5:32",
=======
                "src": "10269:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "9260:4:32",
||||||| merged common ancestors
                "src": "10279:9:32",
=======
                "src": "10279:9:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
            "src": "9190:113:32"
||||||| merged common ancestors
            "src": "10221:134:32"
=======
            "src": "10221:134:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "9384:38:32",
||||||| merged common ancestors
              "src": "10429:53:32",
=======
              "src": "10429:53:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
                  "src": "9394:22:32",
||||||| merged common ancestors
                  "src": "10439:37:32",
=======
                  "src": "10439:37:33",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "9406:3:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9411:4:32",
                        "type": "",
                        "value": "0x20"
||||||| merged common ancestors
                        "src": "10470:5:32"
=======
                        "src": "10470:5:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "9402:3:32"
||||||| merged common ancestors
                      "src": "10452:17:32"
=======
                      "src": "10452:17:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "9402:14:32"
||||||| merged common ancestors
                    "src": "10452:24:32"
=======
                    "src": "10452:24:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "9394:4:32"
||||||| merged common ancestors
                      "src": "10439:9:32"
=======
                      "src": "10439:9:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "9371:3:32",
||||||| merged common ancestors
                "src": "10409:5:32",
=======
                "src": "10409:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "9379:4:32",
||||||| merged common ancestors
                "src": "10419:9:32",
=======
                "src": "10419:9:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
            "src": "9309:113:32"
||||||| merged common ancestors
            "src": "10361:121:32"
=======
            "src": "10361:121:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "9539:73:32",
||||||| merged common ancestors
              "src": "10548:66:32",
=======
              "src": "10548:66:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9556:3:32"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9561:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9549:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9549:19:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9549:19:32"
                },
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
                  "src": "9577:29:32",
||||||| merged common ancestors
                  "src": "10558:50:32",
=======
                  "src": "10558:50:33",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "9596:3:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9601:4:32",
                        "type": "",
                        "value": "0x20"
||||||| merged common ancestors
                        "src": "10602:5:32"
=======
                        "src": "10602:5:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "9592:3:32"
||||||| merged common ancestors
                      "src": "10571:30:32"
=======
                      "src": "10571:30:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "9592:14:32"
||||||| merged common ancestors
                    "src": "10571:37:32"
=======
                    "src": "10571:37:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "9577:11:32"
||||||| merged common ancestors
                      "src": "10558:9:32"
=======
                      "src": "10558:9:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "9511:3:32",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9516:6:32",
||||||| merged common ancestors
                "src": "10528:5:32",
=======
                "src": "10528:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "9527:11:32",
||||||| merged common ancestors
                "src": "10538:9:32",
=======
                "src": "10538:9:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
            "src": "9428:184:32"
||||||| merged common ancestors
            "src": "10488:126:32"
=======
            "src": "10488:126:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "9729:73:32",
||||||| merged common ancestors
              "src": "10680:53:32",
=======
              "src": "10680:53:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9746:3:32"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9751:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9739:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9739:19:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9739:19:32"
                },
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
                  "src": "9767:29:32",
||||||| merged common ancestors
                  "src": "10690:37:32",
=======
                  "src": "10690:37:33",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
                        "src": "9786:3:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9791:4:32",
                        "type": "",
                        "value": "0x20"
||||||| merged common ancestors
                        "src": "10721:5:32"
=======
                        "src": "10721:5:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "9782:3:32"
||||||| merged common ancestors
                      "src": "10703:17:32"
=======
                      "src": "10703:17:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "9782:14:32"
||||||| merged common ancestors
                    "src": "10703:24:32"
=======
                    "src": "10703:24:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "9767:11:32"
||||||| merged common ancestors
                      "src": "10690:9:32"
=======
                      "src": "10690:9:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "9701:3:32",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9706:6:32",
||||||| merged common ancestors
                "src": "10660:5:32",
=======
                "src": "10660:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "9717:11:32",
||||||| merged common ancestors
                "src": "10670:9:32",
=======
                "src": "10670:9:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
            "src": "9618:184:32"
||||||| merged common ancestors
            "src": "10620:113:32"
=======
            "src": "10620:113:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "9853:51:32",
||||||| merged common ancestors
              "src": "10762:25:32",
=======
              "src": "10762:25:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9863:35:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9892:5:32"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "9874:17:32"
||||||| merged common ancestors
                      "src": "10772:7:32"
=======
                      "src": "10772:7:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "9874:24:32"
||||||| merged common ancestors
                    "src": "10772:9:32"
=======
                    "src": "10772:9:33"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "9863:7:32"
                    }
                  ]
||||||| merged common ancestors
                  "nodeType": "YulExpressionStatement",
                  "src": "10772:9:32"
=======
                  "nodeType": "YulExpressionStatement",
                  "src": "10772:9:33"
>>>>>>> origin/ajibigad/token-swap
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
<<<<<<< HEAD
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9835:5:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "9845:7:32",
                "type": ""
              }
            ],
            "src": "9808:96:32"
||||||| merged common ancestors
            "src": "10739:48:32"
=======
            "src": "10739:48:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "9952:48:32",
||||||| merged common ancestors
              "src": "10836:79:32",
=======
              "src": "10836:79:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
<<<<<<< HEAD
                  "nodeType": "YulAssignment",
                  "src": "9962:32:32",
                  "value": {
||||||| merged common ancestors
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10893:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10902:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10905:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10895:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10895:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10895:12:32"
                      }
                    ]
                  },
                  "condition": {
=======
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10893:16:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10902:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10905:1:33",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10895:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10895:12:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10895:12:33"
                      }
                    ]
                  },
                  "condition": {
>>>>>>> origin/ajibigad/token-swap
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
                            "src": "9987:5:32"
||||||| merged common ancestors
                            "src": "10859:5:32"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10884:5:32"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "10866:17:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10866:24:32"
=======
                            "src": "10859:5:33"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10884:5:33"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "10866:17:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10866:24:33"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
                          "src": "9980:6:32"
||||||| merged common ancestors
                          "src": "10856:2:32"
=======
                          "src": "10856:2:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                        "src": "9980:13:32"
||||||| merged common ancestors
                        "src": "10856:35:32"
=======
                        "src": "10856:35:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "9973:6:32"
||||||| merged common ancestors
                      "src": "10849:6:32"
=======
                      "src": "10849:6:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "9973:21:32"
||||||| merged common ancestors
                    "src": "10849:43:32"
=======
                    "src": "10849:43:33"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "9962:7:32"
                    }
                  ]
||||||| merged common ancestors
                  "nodeType": "YulIf",
                  "src": "10846:2:32"
=======
                  "nodeType": "YulIf",
                  "src": "10846:2:33"
>>>>>>> origin/ajibigad/token-swap
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "9934:5:32",
||||||| merged common ancestors
                "src": "10829:5:32",
=======
                "src": "10829:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "9944:7:32",
                "type": ""
              }
            ],
            "src": "9910:90:32"
||||||| merged common ancestors
            "src": "10793:122:32"
=======
            "src": "10793:122:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "10051:81:32",
||||||| merged common ancestors
              "src": "10961:76:32",
=======
              "src": "10961:76:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
<<<<<<< HEAD
                  "nodeType": "YulAssignment",
                  "src": "10061:65:32",
                  "value": {
||||||| merged common ancestors
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11015:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11024:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11027:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11017:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11017:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11017:12:32"
                      }
                    ]
                  },
                  "condition": {
=======
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11015:16:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11024:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11027:1:33",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11017:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11017:12:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11017:12:33"
                      }
                    ]
                  },
                  "condition": {
>>>>>>> origin/ajibigad/token-swap
                    "arguments": [
                      {
<<<<<<< HEAD
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10076:5:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10083:42:32",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
||||||| merged common ancestors
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10984:5:32"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11006:5:32"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "10991:14:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10991:21:32"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10981:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10981:32:32"
=======
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10984:5:33"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11006:5:33"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "10991:14:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10991:21:33"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10981:2:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10981:32:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "10072:3:32"
||||||| merged common ancestors
                      "src": "10974:6:32"
=======
                      "src": "10974:6:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
                    "src": "10072:54:32"
||||||| merged common ancestors
                    "src": "10974:40:32"
=======
                    "src": "10974:40:33"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "10061:7:32"
                    }
                  ]
||||||| merged common ancestors
                  "nodeType": "YulIf",
                  "src": "10971:2:32"
=======
                  "nodeType": "YulIf",
                  "src": "10971:2:33"
>>>>>>> origin/ajibigad/token-swap
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "10033:5:32",
||||||| merged common ancestors
                "src": "10954:5:32",
=======
                "src": "10954:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "10043:7:32",
                "type": ""
              }
            ],
            "src": "10006:126:32"
||||||| merged common ancestors
            "src": "10921:116:32"
=======
            "src": "10921:116:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
              "src": "10183:32:32",
||||||| merged common ancestors
              "src": "11086:79:32",
=======
              "src": "11086:79:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
<<<<<<< HEAD
                  "nodeType": "YulAssignment",
                  "src": "10193:16:32",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "10204:5:32"
||||||| merged common ancestors
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11143:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11152:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11155:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11145:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11145:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11145:12:32"
                      }
                    ]
=======
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11143:16:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11152:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11155:1:33",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11145:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11145:12:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11145:12:33"
                      }
                    ]
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "variableNames": [
                    {
                      "name": "cleaned",
||||||| merged common ancestors
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11109:5:32"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11134:5:32"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "11116:17:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11116:24:32"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "11106:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11106:35:32"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
=======
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11109:5:33"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11134:5:33"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "11116:17:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11116:24:33"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "11106:2:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11106:35:33"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
>>>>>>> origin/ajibigad/token-swap
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
                      "src": "10193:7:32"
                    }
                  ]
||||||| merged common ancestors
                      "src": "11099:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11099:43:32"
                  },
                  "nodeType": "YulIf",
                  "src": "11096:2:32"
=======
                      "src": "11099:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11099:43:33"
                  },
                  "nodeType": "YulIf",
                  "src": "11096:2:33"
>>>>>>> origin/ajibigad/token-swap
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "10165:5:32",
||||||| merged common ancestors
                "src": "11079:5:32",
=======
                "src": "11079:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "10175:7:32",
                "type": ""
              }
            ],
            "src": "10138:77:32"
          },
||||||| merged common ancestors
            "src": "11043:122:32"
          }
        ]
      },
      "contents": "{\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n        mstore(array, length) dst := add(array, 0x20)\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) { revert(0, 0) }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementPos := src\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error() {\n        invalid()\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 32,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "170:1745:5:-:0;;;691:260;;;;;;;;;;235:42;715:9;;:23;;;;;;;;;;;;;;;;;;339:42;787:9;;:23;;;;;;;;;;;;;;;;;;446:42;859:6;;:41;;;;;;;;;;;;;;;;;;170:1745;;;;;;",
  "deployedSourceMap": "170:1745:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;308:73;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;204;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1094:778;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;412:76;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;308:73;339:42;308:73;:::o;204:::-;235:42;204:73;:::o;1094:778::-;1152:13;1177:9;;;;;;;;;;:17;;;1202:6;1177:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1243:9;;;;;;;;;;:17;;;1269:6;;;;;;;;;;;1278;1243:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1339:21;1377:1;1363:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1339:40;;235:42;1389:4;1394:1;1389:7;;;;;;;;;;;;;:14;;;;;;;;;;;339:42;1413:4;1418:1;1413:7;;;;;;;;;;;;;:14;;;;;;;;;;;1437:13;1471:10;1453:15;:28;1437:44;;1512:23;1538:6;;;;;;;;;;;:31;;;1570:6;1578:1;1581:4;1587:2;1591:8;1538:62;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1512:88;;1619:15;1637:9;;;;;;;;;;;:19;;;1665:4;1637:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1619:52;;1687:36;1708:4;1715:7;1687:36;;;;;;;:::i;:::-;;;;;;;;1752:9;;;;;;;;;;;:19;;;1780:4;1752:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1742:44;;1802:36;1823:4;1830:7;1802:36;;;;;;;:::i;:::-;;;;;;;;1856:9;1849:16;;;;;;1094:778;;;;:::o;412:76::-;446:42;412:76;:::o;24:644:32:-;;156:80;171:64;228:6;171:64;:::i;:::-;156:80;:::i;:::-;147:89;;256:5;284:6;277:5;270:21;310:4;303:5;299:16;292:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:2;;;402:1;399;392:12;350:2;430:1;415:247;440:6;437:1;434:13;415:247;;;507:3;535:48;579:3;567:10;535:48;:::i;:::-;530:3;523:61;613:4;608:3;604:14;597:21;;647:4;642:3;638:14;631:21;;475:187;462:1;459;455:9;450:14;;415:247;;;419:14;137:531;;;;;;;:::o;674:139::-;;758:6;745:20;736:29;;774:33;801:5;774:33;:::i;:::-;726:87;;;;:::o;836:318::-;;967:3;960:4;952:6;948:17;944:27;934:2;;985:1;982;975:12;934:2;1018:6;1012:13;1043:105;1144:3;1136:6;1129:4;1121:6;1117:17;1043:105;:::i;:::-;1034:114;;924:230;;;;;:::o;1160:137::-;;1245:6;1239:13;1230:22;;1261:30;1285:5;1261:30;:::i;:::-;1220:77;;;;:::o;1303:139::-;;1387:6;1374:20;1365:29;;1403:33;1430:5;1403:33;:::i;:::-;1355:87;;;;:::o;1448:143::-;;1536:6;1530:13;1521:22;;1552:33;1579:5;1552:33;:::i;:::-;1511:80;;;;:::o;1597:420::-;;1741:2;1729:9;1720:7;1716:23;1712:32;1709:2;;;1757:1;1754;1747:12;1709:2;1821:1;1810:9;1806:17;1800:24;1851:18;1843:6;1840:30;1837:2;;;1883:1;1880;1873:12;1837:2;1911:89;1992:7;1983:6;1972:9;1968:22;1911:89;:::i;:::-;1901:99;;1771:239;1699:318;;;;:::o;2023:278::-;;2139:2;2127:9;2118:7;2114:23;2110:32;2107:2;;;2155:1;2152;2145:12;2107:2;2198:1;2223:61;2276:7;2267:6;2256:9;2252:22;2223:61;:::i;:::-;2213:71;;2169:125;2097:204;;;;:::o;2307:284::-;;2426:2;2414:9;2405:7;2401:23;2397:32;2394:2;;;2442:1;2439;2432:12;2394:2;2485:1;2510:64;2566:7;2557:6;2546:9;2542:22;2510:64;:::i;:::-;2500:74;;2456:128;2384:207;;;;:::o;2597:407::-;;;2722:2;2710:9;2701:7;2697:23;2693:32;2690:2;;;2738:1;2735;2728:12;2690:2;2781:1;2806:53;2851:7;2842:6;2831:9;2827:22;2806:53;:::i;:::-;2796:63;;2752:117;2908:2;2934:53;2979:7;2970:6;2959:9;2955:22;2934:53;:::i;:::-;2924:63;;2879:118;2680:324;;;;;:::o;3010:179::-;;3100:46;3142:3;3134:6;3100:46;:::i;:::-;3178:4;3173:3;3169:14;3155:28;;3090:99;;;;:::o;3195:179::-;;3285:46;3327:3;3319:6;3285:46;:::i;:::-;3363:4;3358:3;3354:14;3340:28;;3275:99;;;;:::o;3380:147::-;3475:45;3514:5;3475:45;:::i;:::-;3470:3;3463:58;3453:74;;:::o;3533:108::-;3610:24;3628:5;3610:24;:::i;:::-;3605:3;3598:37;3588:53;;:::o;3647:118::-;3734:24;3752:5;3734:24;:::i;:::-;3729:3;3722:37;3712:53;;:::o;3801:732::-;;3949:54;3997:5;3949:54;:::i;:::-;4019:86;4098:6;4093:3;4019:86;:::i;:::-;4012:93;;4129:56;4179:5;4129:56;:::i;:::-;4208:7;4239:1;4224:284;4249:6;4246:1;4243:13;4224:284;;;4325:6;4319:13;4352:63;4411:3;4396:13;4352:63;:::i;:::-;4345:70;;4438:60;4491:6;4438:60;:::i;:::-;4428:70;;4284:224;4271:1;4268;4264:9;4259:14;;4224:284;;;4228:14;4524:3;4517:10;;3925:608;;;;;;;:::o;4569:732::-;;4717:54;4765:5;4717:54;:::i;:::-;4787:86;4866:6;4861:3;4787:86;:::i;:::-;4780:93;;4897:56;4947:5;4897:56;:::i;:::-;4976:7;5007:1;4992:284;5017:6;5014:1;5011:13;4992:284;;;5093:6;5087:13;5120:63;5179:3;5164:13;5120:63;:::i;:::-;5113:70;;5206:60;5259:6;5206:60;:::i;:::-;5196:70;;5052:224;5039:1;5036;5032:9;5027:14;;4992:284;;;4996:14;5292:3;5285:10;;4693:608;;;;;;;:::o;5307:147::-;5402:45;5441:5;5402:45;:::i;:::-;5397:3;5390:58;5380:74;;:::o;5460:108::-;5537:24;5555:5;5537:24;:::i;:::-;5532:3;5525:37;5515:53;;:::o;5574:118::-;5661:24;5679:5;5661:24;:::i;:::-;5656:3;5649:37;5639:53;;:::o;5698:222::-;;5829:2;5818:9;5814:18;5806:26;;5842:71;5910:1;5899:9;5895:17;5886:6;5842:71;:::i;:::-;5796:124;;;;:::o;5926:238::-;;6065:2;6054:9;6050:18;6042:26;;6078:79;6154:1;6143:9;6139:17;6130:6;6078:79;:::i;:::-;6032:132;;;;:::o;6170:348::-;;6337:2;6326:9;6322:18;6314:26;;6350:79;6426:1;6415:9;6411:17;6402:6;6350:79;:::i;:::-;6439:72;6507:2;6496:9;6492:18;6483:6;6439:72;:::i;:::-;6304:214;;;;;:::o;6524:332::-;;6683:2;6672:9;6668:18;6660:26;;6696:71;6764:1;6753:9;6749:17;6740:6;6696:71;:::i;:::-;6777:72;6845:2;6834:9;6830:18;6821:6;6777:72;:::i;:::-;6650:206;;;;;:::o;6862:373::-;;7043:2;7032:9;7028:18;7020:26;;7092:9;7086:4;7082:20;7078:1;7067:9;7063:17;7056:47;7120:108;7223:4;7214:6;7120:108;:::i;:::-;7112:116;;7010:225;;;;:::o;7241:831::-;;7542:3;7531:9;7527:19;7519:27;;7556:71;7624:1;7613:9;7609:17;7600:6;7556:71;:::i;:::-;7637:80;7713:2;7702:9;7698:18;7689:6;7637:80;:::i;:::-;7764:9;7758:4;7754:20;7749:2;7738:9;7734:18;7727:48;7792:108;7895:4;7886:6;7792:108;:::i;:::-;7784:116;;7910:72;7978:2;7967:9;7963:18;7954:6;7910:72;:::i;:::-;7992:73;8060:3;8049:9;8045:19;8036:6;7992:73;:::i;:::-;7509:563;;;;;;;;:::o;8078:278::-;;8144:2;8138:9;8128:19;;8186:4;8178:6;8174:17;8293:6;8281:10;8278:22;8257:18;8245:10;8242:34;8239:62;8236:2;;;8304:13;;:::i;:::-;8236:2;8339:10;8335:2;8328:22;8118:238;;;;:::o;8362:306::-;;8529:18;8521:6;8518:30;8515:2;;;8551:13;;:::i;:::-;8515:2;8596:4;8588:6;8584:17;8576:25;;8656:4;8650;8646:15;8638:23;;8444:224;;;:::o;8674:132::-;;8764:3;8756:11;;8794:4;8789:3;8785:14;8777:22;;8746:60;;;:::o;8812:132::-;;8902:3;8894:11;;8932:4;8927:3;8923:14;8915:22;;8884:60;;;:::o;8950:114::-;;9051:5;9045:12;9035:22;;9024:40;;;:::o;9070:114::-;;9171:5;9165:12;9155:22;;9144:40;;;:::o;9190:113::-;;9292:4;9287:3;9283:14;9275:22;;9265:38;;;:::o;9309:113::-;;9411:4;9406:3;9402:14;9394:22;;9384:38;;;:::o;9428:184::-;;9561:6;9556:3;9549:19;9601:4;9596:3;9592:14;9577:29;;9539:73;;;;:::o;9618:184::-;;9751:6;9746:3;9739:19;9791:4;9786:3;9782:14;9767:29;;9729:73;;;;:::o;9808:96::-;;9874:24;9892:5;9874:24;:::i;:::-;9863:35;;9853:51;;;:::o;9910:90::-;;9987:5;9980:13;9973:21;9962:32;;9952:48;;;:::o;10006:126::-;;10083:42;10076:5;10072:54;10061:65;;10051:81;;;:::o;10138:77::-;;10204:5;10193:16;;10183:32;;;:::o;10221:134::-;;10312:37;10343:5;10312:37;:::i;:::-;10299:50;;10289:66;;;:::o;10361:121::-;;10452:24;10470:5;10452:24;:::i;:::-;10439:37;;10429:53;;;:::o;10488:126::-;;10571:37;10602:5;10571:37;:::i;:::-;10558:50;;10548:66;;;:::o;10620:113::-;;10703:24;10721:5;10703:24;:::i;:::-;10690:37;;10680:53;;;:::o;10739:48::-;10772:9;10793:122;10866:24;10884:5;10866:24;:::i;:::-;10859:5;10856:35;10846:2;;10905:1;10902;10895:12;10846:2;10836:79;:::o;10921:116::-;10991:21;11006:5;10991:21;:::i;:::-;10984:5;10981:32;10971:2;;11027:1;11024;11017:12;10971:2;10961:76;:::o;11043:122::-;11116:24;11134:5;11116:24;:::i;:::-;11109:5;11106:35;11096:2;;11155:1;11152;11145:12;11096:2;11086:79;:::o",
  "source": "pragma solidity ^0.7.0;\npragma experimental ABIEncoderV2;\n\nimport \"./BEP20.sol\";\nimport \"./HelperPancakeSwapROUTER.sol\";\n\n/*\n* @notice Integrates with Pancakeswap DEX\n*/\ncontract SmartExchange {\n    \n    address public constant wBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd; //underlying asset: wBNB\n    address public constant BUSD = 0x8301F2213c0eeD49a7E28Ae4c3e91722919B8B47; //underlying asset: BUSD\n    address public constant pROUTER = 0xD99D1c33F9fC3444f8101754aBC46c52416550D1; // Pancakeswap Router (BSC Testnet)\n\n    BEP20 private wBNBToken;\n    BEP20 private bUSDToken;\n    HelperPancakeSwapROUTER private router;\n\n    event BalanceEvent(address owner, uint256 balance);\n\n    constructor() {\n        wBNBToken = BEP20(wBNB);     // get a handle for the wBNB asset\n        bUSDToken = BEP20(BUSD);     // get a handle for the wBNB asset\n        router = HelperPancakeSwapROUTER(pROUTER);     // get a handle for the exchange router\n    }\n\n    /*\n    * @notice swaps BNB to BUSD\n    * @param amount amount of BNB to swap to BUSD\n    * @param address to deposit the BUSD\n    */\n    function swap(uint256 amount, address to) public returns (uint[] memory) {\n        wBNBToken.deposit{value: amount}(); // deposit native BNB\n        wBNBToken.approve(address(router), amount); // allow pancakeswap router to access wBNB\n\n        address[] memory path = new address[](2);\n        path[0] = wBNB;\n        path[1] = BUSD;\n        uint deadline = block.timestamp + 10 minutes; // addition 10 mins\n\n        uint[] memory amountOut = router.swapExactTokensForTokens(amount, 0, path, to, deadline);\n        \n        uint256 balance = wBNBToken.balanceOf(address(this)); \n        emit BalanceEvent(address(this), balance);\n        \n        balance = bUSDToken.balanceOf(address(this)); \n        emit BalanceEvent(address(this), balance);\n\n        return amountOut;\n    }  \n\n    receive() external payable {}    \n}",
  "sourcePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/SmartExchange.sol",
  "ast": {
    "absolutePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/SmartExchange.sol",
    "exportedSymbols": {
      "BEP20": [
        32
      ],
      "HelperPancakeSwapROUTER": [
        68
      ],
      "SmartExchange": [
        1362
      ]
    },
    "id": 1363,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1201,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "id": 1202,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:5"
      },
      {
        "absolutePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/BEP20.sol",
        "file": "./BEP20.sol",
        "id": 1203,
        "nodeType": "ImportDirective",
        "scope": 1363,
        "sourceUnit": 33,
        "src": "59:21:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/HelperPancakeSwapROUTER.sol",
        "file": "./HelperPancakeSwapROUTER.sol",
        "id": 1204,
        "nodeType": "ImportDirective",
        "scope": 1363,
        "sourceUnit": 69,
        "src": "81:39:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1362,
        "linearizedBaseContracts": [
          1362
        ],
        "name": "SmartExchange",
        "nodeType": "ContractDefinition",
        "nodes": [
=======
            "src": "11043:122:33"
          }
        ]
      },
      "contents": "{\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n        mstore(array, length) dst := add(array, 0x20)\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) { revert(0, 0) }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementPos := src\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error() {\n        invalid()\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 33,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "170:1745:6:-:0;;;691:260;;;;;;;;;;235:42;715:9;;:23;;;;;;;;;;;;;;;;;;339:42;787:9;;:23;;;;;;;;;;;;;;;;;;446:42;859:6;;:41;;;;;;;;;;;;;;;;;;170:1745;;;;;;",
  "deployedSourceMap": "170:1745:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;308:73;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;204;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1094:778;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;412:76;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;308:73;339:42;308:73;:::o;204:::-;235:42;204:73;:::o;1094:778::-;1152:13;1177:9;;;;;;;;;;:17;;;1202:6;1177:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1243:9;;;;;;;;;;:17;;;1269:6;;;;;;;;;;;1278;1243:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1339:21;1377:1;1363:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1339:40;;235:42;1389:4;1394:1;1389:7;;;;;;;;;;;;;:14;;;;;;;;;;;339:42;1413:4;1418:1;1413:7;;;;;;;;;;;;;:14;;;;;;;;;;;1437:13;1471:10;1453:15;:28;1437:44;;1512:23;1538:6;;;;;;;;;;;:31;;;1570:6;1578:1;1581:4;1587:2;1591:8;1538:62;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1512:88;;1619:15;1637:9;;;;;;;;;;;:19;;;1665:4;1637:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1619:52;;1687:36;1708:4;1715:7;1687:36;;;;;;;:::i;:::-;;;;;;;;1752:9;;;;;;;;;;;:19;;;1780:4;1752:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1742:44;;1802:36;1823:4;1830:7;1802:36;;;;;;;:::i;:::-;;;;;;;;1856:9;1849:16;;;;;;1094:778;;;;:::o;412:76::-;446:42;412:76;:::o;24:644:33:-;;156:80;171:64;228:6;171:64;:::i;:::-;156:80;:::i;:::-;147:89;;256:5;284:6;277:5;270:21;310:4;303:5;299:16;292:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:2;;;402:1;399;392:12;350:2;430:1;415:247;440:6;437:1;434:13;415:247;;;507:3;535:48;579:3;567:10;535:48;:::i;:::-;530:3;523:61;613:4;608:3;604:14;597:21;;647:4;642:3;638:14;631:21;;475:187;462:1;459;455:9;450:14;;415:247;;;419:14;137:531;;;;;;;:::o;674:139::-;;758:6;745:20;736:29;;774:33;801:5;774:33;:::i;:::-;726:87;;;;:::o;836:318::-;;967:3;960:4;952:6;948:17;944:27;934:2;;985:1;982;975:12;934:2;1018:6;1012:13;1043:105;1144:3;1136:6;1129:4;1121:6;1117:17;1043:105;:::i;:::-;1034:114;;924:230;;;;;:::o;1160:137::-;;1245:6;1239:13;1230:22;;1261:30;1285:5;1261:30;:::i;:::-;1220:77;;;;:::o;1303:139::-;;1387:6;1374:20;1365:29;;1403:33;1430:5;1403:33;:::i;:::-;1355:87;;;;:::o;1448:143::-;;1536:6;1530:13;1521:22;;1552:33;1579:5;1552:33;:::i;:::-;1511:80;;;;:::o;1597:420::-;;1741:2;1729:9;1720:7;1716:23;1712:32;1709:2;;;1757:1;1754;1747:12;1709:2;1821:1;1810:9;1806:17;1800:24;1851:18;1843:6;1840:30;1837:2;;;1883:1;1880;1873:12;1837:2;1911:89;1992:7;1983:6;1972:9;1968:22;1911:89;:::i;:::-;1901:99;;1771:239;1699:318;;;;:::o;2023:278::-;;2139:2;2127:9;2118:7;2114:23;2110:32;2107:2;;;2155:1;2152;2145:12;2107:2;2198:1;2223:61;2276:7;2267:6;2256:9;2252:22;2223:61;:::i;:::-;2213:71;;2169:125;2097:204;;;;:::o;2307:284::-;;2426:2;2414:9;2405:7;2401:23;2397:32;2394:2;;;2442:1;2439;2432:12;2394:2;2485:1;2510:64;2566:7;2557:6;2546:9;2542:22;2510:64;:::i;:::-;2500:74;;2456:128;2384:207;;;;:::o;2597:407::-;;;2722:2;2710:9;2701:7;2697:23;2693:32;2690:2;;;2738:1;2735;2728:12;2690:2;2781:1;2806:53;2851:7;2842:6;2831:9;2827:22;2806:53;:::i;:::-;2796:63;;2752:117;2908:2;2934:53;2979:7;2970:6;2959:9;2955:22;2934:53;:::i;:::-;2924:63;;2879:118;2680:324;;;;;:::o;3010:179::-;;3100:46;3142:3;3134:6;3100:46;:::i;:::-;3178:4;3173:3;3169:14;3155:28;;3090:99;;;;:::o;3195:179::-;;3285:46;3327:3;3319:6;3285:46;:::i;:::-;3363:4;3358:3;3354:14;3340:28;;3275:99;;;;:::o;3380:147::-;3475:45;3514:5;3475:45;:::i;:::-;3470:3;3463:58;3453:74;;:::o;3533:108::-;3610:24;3628:5;3610:24;:::i;:::-;3605:3;3598:37;3588:53;;:::o;3647:118::-;3734:24;3752:5;3734:24;:::i;:::-;3729:3;3722:37;3712:53;;:::o;3801:732::-;;3949:54;3997:5;3949:54;:::i;:::-;4019:86;4098:6;4093:3;4019:86;:::i;:::-;4012:93;;4129:56;4179:5;4129:56;:::i;:::-;4208:7;4239:1;4224:284;4249:6;4246:1;4243:13;4224:284;;;4325:6;4319:13;4352:63;4411:3;4396:13;4352:63;:::i;:::-;4345:70;;4438:60;4491:6;4438:60;:::i;:::-;4428:70;;4284:224;4271:1;4268;4264:9;4259:14;;4224:284;;;4228:14;4524:3;4517:10;;3925:608;;;;;;;:::o;4569:732::-;;4717:54;4765:5;4717:54;:::i;:::-;4787:86;4866:6;4861:3;4787:86;:::i;:::-;4780:93;;4897:56;4947:5;4897:56;:::i;:::-;4976:7;5007:1;4992:284;5017:6;5014:1;5011:13;4992:284;;;5093:6;5087:13;5120:63;5179:3;5164:13;5120:63;:::i;:::-;5113:70;;5206:60;5259:6;5206:60;:::i;:::-;5196:70;;5052:224;5039:1;5036;5032:9;5027:14;;4992:284;;;4996:14;5292:3;5285:10;;4693:608;;;;;;;:::o;5307:147::-;5402:45;5441:5;5402:45;:::i;:::-;5397:3;5390:58;5380:74;;:::o;5460:108::-;5537:24;5555:5;5537:24;:::i;:::-;5532:3;5525:37;5515:53;;:::o;5574:118::-;5661:24;5679:5;5661:24;:::i;:::-;5656:3;5649:37;5639:53;;:::o;5698:222::-;;5829:2;5818:9;5814:18;5806:26;;5842:71;5910:1;5899:9;5895:17;5886:6;5842:71;:::i;:::-;5796:124;;;;:::o;5926:238::-;;6065:2;6054:9;6050:18;6042:26;;6078:79;6154:1;6143:9;6139:17;6130:6;6078:79;:::i;:::-;6032:132;;;;:::o;6170:348::-;;6337:2;6326:9;6322:18;6314:26;;6350:79;6426:1;6415:9;6411:17;6402:6;6350:79;:::i;:::-;6439:72;6507:2;6496:9;6492:18;6483:6;6439:72;:::i;:::-;6304:214;;;;;:::o;6524:332::-;;6683:2;6672:9;6668:18;6660:26;;6696:71;6764:1;6753:9;6749:17;6740:6;6696:71;:::i;:::-;6777:72;6845:2;6834:9;6830:18;6821:6;6777:72;:::i;:::-;6650:206;;;;;:::o;6862:373::-;;7043:2;7032:9;7028:18;7020:26;;7092:9;7086:4;7082:20;7078:1;7067:9;7063:17;7056:47;7120:108;7223:4;7214:6;7120:108;:::i;:::-;7112:116;;7010:225;;;;:::o;7241:831::-;;7542:3;7531:9;7527:19;7519:27;;7556:71;7624:1;7613:9;7609:17;7600:6;7556:71;:::i;:::-;7637:80;7713:2;7702:9;7698:18;7689:6;7637:80;:::i;:::-;7764:9;7758:4;7754:20;7749:2;7738:9;7734:18;7727:48;7792:108;7895:4;7886:6;7792:108;:::i;:::-;7784:116;;7910:72;7978:2;7967:9;7963:18;7954:6;7910:72;:::i;:::-;7992:73;8060:3;8049:9;8045:19;8036:6;7992:73;:::i;:::-;7509:563;;;;;;;;:::o;8078:278::-;;8144:2;8138:9;8128:19;;8186:4;8178:6;8174:17;8293:6;8281:10;8278:22;8257:18;8245:10;8242:34;8239:62;8236:2;;;8304:13;;:::i;:::-;8236:2;8339:10;8335:2;8328:22;8118:238;;;;:::o;8362:306::-;;8529:18;8521:6;8518:30;8515:2;;;8551:13;;:::i;:::-;8515:2;8596:4;8588:6;8584:17;8576:25;;8656:4;8650;8646:15;8638:23;;8444:224;;;:::o;8674:132::-;;8764:3;8756:11;;8794:4;8789:3;8785:14;8777:22;;8746:60;;;:::o;8812:132::-;;8902:3;8894:11;;8932:4;8927:3;8923:14;8915:22;;8884:60;;;:::o;8950:114::-;;9051:5;9045:12;9035:22;;9024:40;;;:::o;9070:114::-;;9171:5;9165:12;9155:22;;9144:40;;;:::o;9190:113::-;;9292:4;9287:3;9283:14;9275:22;;9265:38;;;:::o;9309:113::-;;9411:4;9406:3;9402:14;9394:22;;9384:38;;;:::o;9428:184::-;;9561:6;9556:3;9549:19;9601:4;9596:3;9592:14;9577:29;;9539:73;;;;:::o;9618:184::-;;9751:6;9746:3;9739:19;9791:4;9786:3;9782:14;9767:29;;9729:73;;;;:::o;9808:96::-;;9874:24;9892:5;9874:24;:::i;:::-;9863:35;;9853:51;;;:::o;9910:90::-;;9987:5;9980:13;9973:21;9962:32;;9952:48;;;:::o;10006:126::-;;10083:42;10076:5;10072:54;10061:65;;10051:81;;;:::o;10138:77::-;;10204:5;10193:16;;10183:32;;;:::o;10221:134::-;;10312:37;10343:5;10312:37;:::i;:::-;10299:50;;10289:66;;;:::o;10361:121::-;;10452:24;10470:5;10452:24;:::i;:::-;10439:37;;10429:53;;;:::o;10488:126::-;;10571:37;10602:5;10571:37;:::i;:::-;10558:50;;10548:66;;;:::o;10620:113::-;;10703:24;10721:5;10703:24;:::i;:::-;10690:37;;10680:53;;;:::o;10739:48::-;10772:9;10793:122;10866:24;10884:5;10866:24;:::i;:::-;10859:5;10856:35;10846:2;;10905:1;10902;10895:12;10846:2;10836:79;:::o;10921:116::-;10991:21;11006:5;10991:21;:::i;:::-;10984:5;10981:32;10971:2;;11027:1;11024;11017:12;10971:2;10961:76;:::o;11043:122::-;11116:24;11134:5;11116:24;:::i;:::-;11109:5;11106:35;11096:2;;11155:1;11152;11145:12;11096:2;11086:79;:::o",
  "source": "pragma solidity ^0.7.0;\npragma experimental ABIEncoderV2;\n\nimport \"./BEP20.sol\";\nimport \"./HelperPancakeSwapROUTER.sol\";\n\n/*\n* @notice Integrates with Pancakeswap DEX\n*/\ncontract SmartExchange {\n    \n    address public constant wBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd; //underlying asset: wBNB\n    address public constant BUSD = 0x8301F2213c0eeD49a7E28Ae4c3e91722919B8B47; //underlying asset: BUSD\n    address public constant pROUTER = 0xD99D1c33F9fC3444f8101754aBC46c52416550D1; // Pancakeswap Router (BSC Testnet)\n\n    BEP20 private wBNBToken;\n    BEP20 private bUSDToken;\n    HelperPancakeSwapROUTER private router;\n\n    event BalanceEvent(address owner, uint256 balance);\n\n    constructor() {\n        wBNBToken = BEP20(wBNB);     // get a handle for the wBNB asset\n        bUSDToken = BEP20(BUSD);     // get a handle for the wBNB asset\n        router = HelperPancakeSwapROUTER(pROUTER);     // get a handle for the exchange router\n    }\n\n    /*\n    * @notice swaps BNB to BUSD\n    * @param amount amount of BNB to swap to BUSD\n    * @param address to deposit the BUSD\n    */\n    function swap(uint256 amount, address to) public returns (uint[] memory) {\n        wBNBToken.deposit{value: amount}(); // deposit native BNB\n        wBNBToken.approve(address(router), amount); // allow pancakeswap router to access wBNB\n\n        address[] memory path = new address[](2);\n        path[0] = wBNB;\n        path[1] = BUSD;\n        uint deadline = block.timestamp + 10 minutes; // addition 10 mins\n\n        uint[] memory amountOut = router.swapExactTokensForTokens(amount, 0, path, to, deadline);\n        \n        uint256 balance = wBNBToken.balanceOf(address(this)); \n        emit BalanceEvent(address(this), balance);\n        \n        balance = bUSDToken.balanceOf(address(this)); \n        emit BalanceEvent(address(this), balance);\n\n        return amountOut;\n    }  \n\n    receive() external payable {}    \n}",
  "sourcePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/SmartExchange.sol",
  "ast": {
    "absolutePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/SmartExchange.sol",
    "exportedSymbols": {
      "BEP20": [
        32
      ],
      "HelperPancakeSwapROUTER": [
        101
      ],
      "SmartExchange": [
        1498
      ]
    },
    "id": 1499,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1337,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "id": 1338,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:6"
      },
      {
        "absolutePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/BEP20.sol",
        "file": "./BEP20.sol",
        "id": 1339,
        "nodeType": "ImportDirective",
        "scope": 1499,
        "sourceUnit": 33,
        "src": "59:21:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/HelperPancakeSwapROUTER.sol",
        "file": "./HelperPancakeSwapROUTER.sol",
        "id": 1340,
        "nodeType": "ImportDirective",
        "scope": 1499,
        "sourceUnit": 102,
        "src": "81:39:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1498,
        "linearizedBaseContracts": [
          1498
        ],
        "name": "SmartExchange",
        "nodeType": "ContractDefinition",
        "nodes": [
>>>>>>> origin/ajibigad/token-swap
          {
<<<<<<< HEAD
            "body": {
              "nodeType": "YulBlock",
              "src": "10289:66:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10299:50:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10343:5:32"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "10312:30:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10312:37:32"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "10299:9:32"
                    }
                  ]
                }
              ]
||||||| merged common ancestors
            "constant": true,
            "functionSelector": "d02eb3f4",
            "id": 1207,
            "mutability": "constant",
            "name": "wBNB",
            "nodeType": "VariableDeclaration",
            "scope": 1362,
            "src": "204:73:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
=======
            "constant": true,
            "functionSelector": "d02eb3f4",
            "id": 1343,
            "mutability": "constant",
            "name": "wBNB",
            "nodeType": "VariableDeclaration",
            "scope": 1498,
            "src": "204:73:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
>>>>>>> origin/ajibigad/token-swap
            },
<<<<<<< HEAD
            "name": "convert_t_address_payable_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10269:5:32",
                "type": ""
||||||| merged common ancestors
            "typeName": {
              "id": 1205,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "204:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
=======
            "typeName": {
              "id": 1341,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "204:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
>>>>>>> origin/ajibigad/token-swap
              }
<<<<<<< HEAD
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "10279:9:32",
                "type": ""
              }
            ],
            "src": "10221:134:32"
||||||| merged common ancestors
            },
            "value": {
              "hexValue": "307861653133643938396461433266306445624666343630614331313261383337433839424161376364",
              "id": 1206,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "235:42:5",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd"
            },
            "visibility": "public"
=======
            },
            "value": {
              "hexValue": "307861653133643938396461433266306445624666343630614331313261383337433839424161376364",
              "id": 1342,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "235:42:6",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd"
            },
            "visibility": "public"
>>>>>>> origin/ajibigad/token-swap
          },
          {
<<<<<<< HEAD
            "body": {
              "nodeType": "YulBlock",
              "src": "10429:53:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10439:37:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10470:5:32"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10452:17:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10452:24:32"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "10439:9:32"
                    }
                  ]
                }
              ]
||||||| merged common ancestors
            "constant": true,
            "functionSelector": "484f4ea9",
            "id": 1210,
            "mutability": "constant",
            "name": "BUSD",
            "nodeType": "VariableDeclaration",
            "scope": 1362,
            "src": "308:73:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
=======
            "constant": true,
            "functionSelector": "484f4ea9",
            "id": 1346,
            "mutability": "constant",
            "name": "BUSD",
            "nodeType": "VariableDeclaration",
            "scope": 1498,
            "src": "308:73:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
>>>>>>> origin/ajibigad/token-swap
            },
<<<<<<< HEAD
            "name": "convert_t_rational_0_by_1_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10409:5:32",
                "type": ""
||||||| merged common ancestors
            "typeName": {
              "id": 1208,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "308:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
=======
            "typeName": {
              "id": 1344,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "308:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
>>>>>>> origin/ajibigad/token-swap
              }
<<<<<<< HEAD
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "10419:9:32",
                "type": ""
              }
            ],
            "src": "10361:121:32"
||||||| merged common ancestors
            },
            "value": {
              "hexValue": "307838333031463232313363306565443439613745323841653463336539313732323931394238423437",
              "id": 1209,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "339:42:5",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x8301F2213c0eeD49a7E28Ae4c3e91722919B8B47"
            },
            "visibility": "public"
=======
            },
            "value": {
              "hexValue": "307838333031463232313363306565443439613745323841653463336539313732323931394238423437",
              "id": 1345,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "339:42:6",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x8301F2213c0eeD49a7E28Ae4c3e91722919B8B47"
            },
            "visibility": "public"
>>>>>>> origin/ajibigad/token-swap
          },
          {
<<<<<<< HEAD
            "body": {
              "nodeType": "YulBlock",
              "src": "10548:66:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10558:50:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10602:5:32"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "10571:30:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10571:37:32"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "10558:9:32"
                    }
                  ]
                }
              ]
||||||| merged common ancestors
            "constant": true,
            "functionSelector": "e71efd95",
            "id": 1213,
            "mutability": "constant",
            "name": "pROUTER",
            "nodeType": "VariableDeclaration",
            "scope": 1362,
            "src": "412:76:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
=======
            "constant": true,
            "functionSelector": "e71efd95",
            "id": 1349,
            "mutability": "constant",
            "name": "pROUTER",
            "nodeType": "VariableDeclaration",
            "scope": 1498,
            "src": "412:76:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
>>>>>>> origin/ajibigad/token-swap
            },
<<<<<<< HEAD
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10528:5:32",
                "type": ""
||||||| merged common ancestors
            "typeName": {
              "id": 1211,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "412:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
=======
            "typeName": {
              "id": 1347,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "412:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
>>>>>>> origin/ajibigad/token-swap
              }
<<<<<<< HEAD
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "10538:9:32",
                "type": ""
||||||| merged common ancestors
            },
            "value": {
              "hexValue": "307844393944316333334639664333343434663831303137353461424334366335323431363535304431",
              "id": 1212,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "446:42:5",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0xD99D1c33F9fC3444f8101754aBC46c52416550D1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1215,
            "mutability": "mutable",
            "name": "wBNBToken",
            "nodeType": "VariableDeclaration",
            "scope": 1362,
            "src": "531:23:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BEP20_$32",
              "typeString": "contract BEP20"
            },
            "typeName": {
              "id": 1214,
              "name": "BEP20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 32,
              "src": "531:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BEP20_$32",
                "typeString": "contract BEP20"
=======
            },
            "value": {
              "hexValue": "307844393944316333334639664333343434663831303137353461424334366335323431363535304431",
              "id": 1348,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "446:42:6",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0xD99D1c33F9fC3444f8101754aBC46c52416550D1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1351,
            "mutability": "mutable",
            "name": "wBNBToken",
            "nodeType": "VariableDeclaration",
            "scope": 1498,
            "src": "531:23:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BEP20_$32",
              "typeString": "contract BEP20"
            },
            "typeName": {
              "id": 1350,
              "name": "BEP20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 32,
              "src": "531:5:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BEP20_$32",
                "typeString": "contract BEP20"
>>>>>>> origin/ajibigad/token-swap
              }
            ],
            "src": "10488:126:32"
          },
          {
<<<<<<< HEAD
            "body": {
              "nodeType": "YulBlock",
              "src": "10680:53:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10690:37:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10721:5:32"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "10703:17:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10703:24:32"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "10690:9:32"
                    }
                  ]
                }
              ]
||||||| merged common ancestors
            "constant": false,
            "id": 1217,
            "mutability": "mutable",
            "name": "bUSDToken",
            "nodeType": "VariableDeclaration",
            "scope": 1362,
            "src": "560:23:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BEP20_$32",
              "typeString": "contract BEP20"
=======
            "constant": false,
            "id": 1353,
            "mutability": "mutable",
            "name": "bUSDToken",
            "nodeType": "VariableDeclaration",
            "scope": 1498,
            "src": "560:23:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BEP20_$32",
              "typeString": "contract BEP20"
>>>>>>> origin/ajibigad/token-swap
            },
<<<<<<< HEAD
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10660:5:32",
                "type": ""
||||||| merged common ancestors
            "typeName": {
              "id": 1216,
              "name": "BEP20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 32,
              "src": "560:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BEP20_$32",
                "typeString": "contract BEP20"
=======
            "typeName": {
              "id": 1352,
              "name": "BEP20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 32,
              "src": "560:5:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BEP20_$32",
                "typeString": "contract BEP20"
>>>>>>> origin/ajibigad/token-swap
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "10670:9:32",
                "type": ""
              }
            ],
            "src": "10620:113:32"
          },
          {
<<<<<<< HEAD
            "body": {
              "nodeType": "YulBlock",
              "src": "10762:25:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "functionName": {
                      "name": "invalid",
                      "nodeType": "YulIdentifier",
                      "src": "10772:7:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10772:9:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10772:9:32"
                }
              ]
||||||| merged common ancestors
            "constant": false,
            "id": 1219,
            "mutability": "mutable",
            "name": "router",
            "nodeType": "VariableDeclaration",
            "scope": 1362,
            "src": "589:38:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_HelperPancakeSwapROUTER_$68",
              "typeString": "contract HelperPancakeSwapROUTER"
            },
            "typeName": {
              "id": 1218,
              "name": "HelperPancakeSwapROUTER",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 68,
              "src": "589:23:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HelperPancakeSwapROUTER_$68",
                "typeString": "contract HelperPancakeSwapROUTER"
              }
=======
            "constant": false,
            "id": 1355,
            "mutability": "mutable",
            "name": "router",
            "nodeType": "VariableDeclaration",
            "scope": 1498,
            "src": "589:38:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_HelperPancakeSwapROUTER_$101",
              "typeString": "contract HelperPancakeSwapROUTER"
            },
            "typeName": {
              "id": 1354,
              "name": "HelperPancakeSwapROUTER",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 101,
              "src": "589:23:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HelperPancakeSwapROUTER_$101",
                "typeString": "contract HelperPancakeSwapROUTER"
              }
>>>>>>> origin/ajibigad/token-swap
            },
            "name": "panic_error",
            "nodeType": "YulFunctionDefinition",
            "src": "10739:48:32"
          },
          {
<<<<<<< HEAD
            "body": {
              "nodeType": "YulBlock",
              "src": "10836:79:32",
              "statements": [
||||||| merged common ancestors
            "anonymous": false,
            "id": 1225,
            "name": "BalanceEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1224,
              "nodeType": "ParameterList",
              "parameters": [
=======
            "anonymous": false,
            "id": 1361,
            "name": "BalanceEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1360,
              "nodeType": "ParameterList",
              "parameters": [
>>>>>>> origin/ajibigad/token-swap
                {
<<<<<<< HEAD
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10893:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10902:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10905:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10895:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10895:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10895:12:32"
                      }
                    ]
||||||| merged common ancestors
                  "constant": false,
                  "id": 1221,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1225,
                  "src": "653:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1220,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "653:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1223,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 1225,
                  "src": "668:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
=======
                  "constant": false,
                  "id": 1357,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1361,
                  "src": "653:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1356,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "653:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1359,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 1361,
                  "src": "668:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10859:5:32"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10884:5:32"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "10866:17:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10866:24:32"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10856:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10856:35:32"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10849:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10849:43:32"
||||||| merged common ancestors
                  "typeName": {
                    "id": 1222,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "668:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
=======
                  "typeName": {
                    "id": 1358,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "668:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
>>>>>>> origin/ajibigad/token-swap
                  },
                  "nodeType": "YulIf",
                  "src": "10846:2:32"
                }
<<<<<<< HEAD
              ]
||||||| merged common ancestors
              ],
              "src": "652:32:5"
=======
              ],
              "src": "652:32:6"
>>>>>>> origin/ajibigad/token-swap
            },
<<<<<<< HEAD
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10829:5:32",
                "type": ""
              }
            ],
            "src": "10793:122:32"
||||||| merged common ancestors
            "src": "634:51:5"
=======
            "src": "634:51:6"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
<<<<<<< HEAD
              "nodeType": "YulBlock",
              "src": "10961:76:32",
||||||| merged common ancestors
              "id": 1246,
              "nodeType": "Block",
              "src": "705:246:5",
=======
              "id": 1382,
              "nodeType": "Block",
              "src": "705:246:6",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
<<<<<<< HEAD
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11015:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11024:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11027:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11017:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11017:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11017:12:32"
||||||| merged common ancestors
                  "expression": {
                    "id": 1232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1228,
                      "name": "wBNBToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1215,
                      "src": "715:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BEP20_$32",
                        "typeString": "contract BEP20"
=======
                  "expression": {
                    "id": 1368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1364,
                      "name": "wBNBToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1351,
                      "src": "715:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BEP20_$32",
                        "typeString": "contract BEP20"
>>>>>>> origin/ajibigad/token-swap
                      }
<<<<<<< HEAD
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
||||||| merged common ancestors
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1230,
                          "name": "wBNB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1207,
                          "src": "733:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
=======
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1366,
                          "name": "wBNB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1343,
                          "src": "733:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
>>>>>>> origin/ajibigad/token-swap
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10984:5:32"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11006:5:32"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "10991:14:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10991:21:32"
                          }
                        ],
<<<<<<< HEAD
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10981:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10981:32:32"
||||||| merged common ancestors
                        "id": 1229,
                        "name": "BEP20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "727:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BEP20_$32_$",
                          "typeString": "type(contract BEP20)"
                        }
                      },
                      "id": 1231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "727:11:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BEP20_$32",
                        "typeString": "contract BEP20"
                      }
                    },
                    "src": "715:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BEP20_$32",
                      "typeString": "contract BEP20"
                    }
                  },
                  "id": 1233,
                  "nodeType": "ExpressionStatement",
                  "src": "715:23:5"
                },
                {
                  "expression": {
                    "id": 1238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1234,
                      "name": "bUSDToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1217,
                      "src": "787:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BEP20_$32",
                        "typeString": "contract BEP20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1236,
                          "name": "BUSD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1210,
                          "src": "805:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1235,
                        "name": "BEP20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "799:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BEP20_$32_$",
                          "typeString": "type(contract BEP20)"
                        }
                      },
                      "id": 1237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "799:11:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BEP20_$32",
                        "typeString": "contract BEP20"
                      }
                    },
                    "src": "787:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BEP20_$32",
                      "typeString": "contract BEP20"
                    }
                  },
                  "id": 1239,
                  "nodeType": "ExpressionStatement",
                  "src": "787:23:5"
                },
                {
                  "expression": {
                    "id": 1244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1240,
                      "name": "router",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1219,
                      "src": "859:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_HelperPancakeSwapROUTER_$68",
                        "typeString": "contract HelperPancakeSwapROUTER"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1242,
                          "name": "pROUTER",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1213,
                          "src": "892:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1241,
                        "name": "HelperPancakeSwapROUTER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68,
                        "src": "868:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_HelperPancakeSwapROUTER_$68_$",
                          "typeString": "type(contract HelperPancakeSwapROUTER)"
                        }
                      },
                      "id": 1243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "868:32:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_HelperPancakeSwapROUTER_$68",
                        "typeString": "contract HelperPancakeSwapROUTER"
=======
                        "id": 1365,
                        "name": "BEP20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "727:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BEP20_$32_$",
                          "typeString": "type(contract BEP20)"
                        }
                      },
                      "id": 1367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "727:11:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BEP20_$32",
                        "typeString": "contract BEP20"
                      }
                    },
                    "src": "715:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BEP20_$32",
                      "typeString": "contract BEP20"
                    }
                  },
                  "id": 1369,
                  "nodeType": "ExpressionStatement",
                  "src": "715:23:6"
                },
                {
                  "expression": {
                    "id": 1374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1370,
                      "name": "bUSDToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1353,
                      "src": "787:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BEP20_$32",
                        "typeString": "contract BEP20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1372,
                          "name": "BUSD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1346,
                          "src": "805:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1371,
                        "name": "BEP20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "799:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BEP20_$32_$",
                          "typeString": "type(contract BEP20)"
                        }
                      },
                      "id": 1373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "799:11:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BEP20_$32",
                        "typeString": "contract BEP20"
                      }
                    },
                    "src": "787:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BEP20_$32",
                      "typeString": "contract BEP20"
                    }
                  },
                  "id": 1375,
                  "nodeType": "ExpressionStatement",
                  "src": "787:23:6"
                },
                {
                  "expression": {
                    "id": 1380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1376,
                      "name": "router",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1355,
                      "src": "859:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_HelperPancakeSwapROUTER_$101",
                        "typeString": "contract HelperPancakeSwapROUTER"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1378,
                          "name": "pROUTER",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1349,
                          "src": "892:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1377,
                        "name": "HelperPancakeSwapROUTER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101,
                        "src": "868:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_HelperPancakeSwapROUTER_$101_$",
                          "typeString": "type(contract HelperPancakeSwapROUTER)"
                        }
                      },
                      "id": 1379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "868:32:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_HelperPancakeSwapROUTER_$101",
                        "typeString": "contract HelperPancakeSwapROUTER"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10974:6:32"
                    },
<<<<<<< HEAD
                    "nodeType": "YulFunctionCall",
                    "src": "10974:40:32"
||||||| merged common ancestors
                    "src": "859:41:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_HelperPancakeSwapROUTER_$68",
                      "typeString": "contract HelperPancakeSwapROUTER"
                    }
=======
                    "src": "859:41:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_HelperPancakeSwapROUTER_$101",
                      "typeString": "contract HelperPancakeSwapROUTER"
                    }
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "nodeType": "YulIf",
                  "src": "10971:2:32"
||||||| merged common ancestors
                  "id": 1245,
                  "nodeType": "ExpressionStatement",
                  "src": "859:41:5"
=======
                  "id": 1381,
                  "nodeType": "ExpressionStatement",
                  "src": "859:41:6"
>>>>>>> origin/ajibigad/token-swap
                }
              ]
            },
<<<<<<< HEAD
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10954:5:32",
                "type": ""
              }
            ],
            "src": "10921:116:32"
||||||| merged common ancestors
            "id": 1247,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "702:2:5"
            },
            "returnParameters": {
              "id": 1227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "705:0:5"
            },
            "scope": 1362,
            "src": "691:260:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
=======
            "id": 1383,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "702:2:6"
            },
            "returnParameters": {
              "id": 1363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "705:0:6"
            },
            "scope": 1498,
            "src": "691:260:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
<<<<<<< HEAD
              "nodeType": "YulBlock",
              "src": "11086:79:32",
||||||| merged common ancestors
              "id": 1356,
              "nodeType": "Block",
              "src": "1167:705:5",
=======
              "id": 1492,
              "nodeType": "Block",
              "src": "1167:705:6",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11143:16:32",
                    "statements": [
                      {
                        "expression": {
<<<<<<< HEAD
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11152:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11155:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11145:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11145:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11145:12:32"
||||||| merged common ancestors
                          "id": 1257,
                          "name": "wBNBToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1215,
                          "src": "1177:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BEP20_$32",
                            "typeString": "contract BEP20"
                          }
                        },
                        "id": 1259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "1177:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 1261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 1260,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1249,
                          "src": "1202:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1177:32:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
=======
                          "id": 1393,
                          "name": "wBNBToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1351,
                          "src": "1177:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BEP20_$32",
                            "typeString": "contract BEP20"
                          }
                        },
                        "id": 1395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "1177:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 1397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 1396,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1385,
                          "src": "1202:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1177:32:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
>>>>>>> origin/ajibigad/token-swap
                      }
<<<<<<< HEAD
                    ]
||||||| merged common ancestors
                    },
                    "id": 1262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1177:34:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
=======
                    },
                    "id": 1398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1177:34:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "condition": {
||||||| merged common ancestors
                  "id": 1263,
                  "nodeType": "ExpressionStatement",
                  "src": "1177:34:5"
                },
                {
                  "expression": {
=======
                  "id": 1399,
                  "nodeType": "ExpressionStatement",
                  "src": "1177:34:6"
                },
                {
                  "expression": {
>>>>>>> origin/ajibigad/token-swap
                    "arguments": [
                      {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11109:5:32"
||||||| merged common ancestors
                            "id": 1269,
                            "name": "router",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1219,
                            "src": "1269:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HelperPancakeSwapROUTER_$68",
                              "typeString": "contract HelperPancakeSwapROUTER"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HelperPancakeSwapROUTER_$68",
                              "typeString": "contract HelperPancakeSwapROUTER"
                            }
                          ],
                          "id": 1268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1261:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
=======
                            "id": 1405,
                            "name": "router",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1355,
                            "src": "1269:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HelperPancakeSwapROUTER_$101",
                              "typeString": "contract HelperPancakeSwapROUTER"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HelperPancakeSwapROUTER_$101",
                              "typeString": "contract HelperPancakeSwapROUTER"
                            }
                          ],
                          "id": 1404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1261:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
>>>>>>> origin/ajibigad/token-swap
                          },
<<<<<<< HEAD
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11134:5:32"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "11116:17:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11116:24:32"
||||||| merged common ancestors
                          "typeName": {
                            "id": 1267,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1261:7:5",
                            "typeDescriptions": {}
=======
                          "typeName": {
                            "id": 1403,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1261:7:6",
                            "typeDescriptions": {}
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "11106:2:32"
                        },
<<<<<<< HEAD
                        "nodeType": "YulFunctionCall",
                        "src": "11106:35:32"
||||||| merged common ancestors
                        "id": 1270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1261:15:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1271,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1249,
                        "src": "1278:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
=======
                        "id": 1406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1261:15:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1407,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1385,
                        "src": "1278:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
<<<<<<< HEAD
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11099:6:32"
||||||| merged common ancestors
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1264,
                        "name": "wBNBToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1215,
                        "src": "1243:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BEP20_$32",
                          "typeString": "contract BEP20"
                        }
                      },
                      "id": 1266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17,
                      "src": "1243:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
=======
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1400,
                        "name": "wBNBToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1351,
                        "src": "1243:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BEP20_$32",
                          "typeString": "contract BEP20"
                        }
                      },
                      "id": 1402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17,
                      "src": "1243:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
>>>>>>> origin/ajibigad/token-swap
                    },
<<<<<<< HEAD
                    "nodeType": "YulFunctionCall",
                    "src": "11099:43:32"
||||||| merged common ancestors
                    "id": 1272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1243:42:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
=======
                    "id": 1408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1243:42:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "nodeType": "YulIf",
                  "src": "11096:2:32"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11079:5:32",
                "type": ""
              }
            ],
            "src": "11043:122:32"
          }
        ]
      },
      "contents": "{\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n        mstore(array, length) dst := add(array, 0x20)\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) { revert(0, 0) }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementPos := src\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error() {\n        invalid()\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 32,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "170:1745:5:-:0;;;691:260;;;;;;;;;;235:42;715:9;;:23;;;;;;;;;;;;;;;;;;339:42;787:9;;:23;;;;;;;;;;;;;;;;;;446:42;859:6;;:41;;;;;;;;;;;;;;;;;;170:1745;;;;;;",
  "deployedSourceMap": "170:1745:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;308:73;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;204;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1094:778;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;412:76;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;308:73;339:42;308:73;:::o;204:::-;235:42;204:73;:::o;1094:778::-;1152:13;1177:9;;;;;;;;;;:17;;;1202:6;1177:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1243:9;;;;;;;;;;:17;;;1269:6;;;;;;;;;;;1278;1243:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1339:21;1377:1;1363:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1339:40;;235:42;1389:4;1394:1;1389:7;;;;;;;;;;;;;:14;;;;;;;;;;;339:42;1413:4;1418:1;1413:7;;;;;;;;;;;;;:14;;;;;;;;;;;1437:13;1471:10;1453:15;:28;1437:44;;1512:23;1538:6;;;;;;;;;;;:31;;;1570:6;1578:1;1581:4;1587:2;1591:8;1538:62;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1512:88;;1619:15;1637:9;;;;;;;;;;;:19;;;1665:4;1637:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1619:52;;1687:36;1708:4;1715:7;1687:36;;;;;;;:::i;:::-;;;;;;;;1752:9;;;;;;;;;;;:19;;;1780:4;1752:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1742:44;;1802:36;1823:4;1830:7;1802:36;;;;;;;:::i;:::-;;;;;;;;1856:9;1849:16;;;;;;1094:778;;;;:::o;412:76::-;446:42;412:76;:::o;24:644:32:-;;156:80;171:64;228:6;171:64;:::i;:::-;156:80;:::i;:::-;147:89;;256:5;284:6;277:5;270:21;310:4;303:5;299:16;292:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:2;;;402:1;399;392:12;350:2;430:1;415:247;440:6;437:1;434:13;415:247;;;507:3;535:48;579:3;567:10;535:48;:::i;:::-;530:3;523:61;613:4;608:3;604:14;597:21;;647:4;642:3;638:14;631:21;;475:187;462:1;459;455:9;450:14;;415:247;;;419:14;137:531;;;;;;;:::o;674:139::-;;758:6;745:20;736:29;;774:33;801:5;774:33;:::i;:::-;726:87;;;;:::o;836:318::-;;967:3;960:4;952:6;948:17;944:27;934:2;;985:1;982;975:12;934:2;1018:6;1012:13;1043:105;1144:3;1136:6;1129:4;1121:6;1117:17;1043:105;:::i;:::-;1034:114;;924:230;;;;;:::o;1160:137::-;;1245:6;1239:13;1230:22;;1261:30;1285:5;1261:30;:::i;:::-;1220:77;;;;:::o;1303:139::-;;1387:6;1374:20;1365:29;;1403:33;1430:5;1403:33;:::i;:::-;1355:87;;;;:::o;1448:143::-;;1536:6;1530:13;1521:22;;1552:33;1579:5;1552:33;:::i;:::-;1511:80;;;;:::o;1597:420::-;;1741:2;1729:9;1720:7;1716:23;1712:32;1709:2;;;1757:1;1754;1747:12;1709:2;1821:1;1810:9;1806:17;1800:24;1851:18;1843:6;1840:30;1837:2;;;1883:1;1880;1873:12;1837:2;1911:89;1992:7;1983:6;1972:9;1968:22;1911:89;:::i;:::-;1901:99;;1771:239;1699:318;;;;:::o;2023:278::-;;2139:2;2127:9;2118:7;2114:23;2110:32;2107:2;;;2155:1;2152;2145:12;2107:2;2198:1;2223:61;2276:7;2267:6;2256:9;2252:22;2223:61;:::i;:::-;2213:71;;2169:125;2097:204;;;;:::o;2307:284::-;;2426:2;2414:9;2405:7;2401:23;2397:32;2394:2;;;2442:1;2439;2432:12;2394:2;2485:1;2510:64;2566:7;2557:6;2546:9;2542:22;2510:64;:::i;:::-;2500:74;;2456:128;2384:207;;;;:::o;2597:407::-;;;2722:2;2710:9;2701:7;2697:23;2693:32;2690:2;;;2738:1;2735;2728:12;2690:2;2781:1;2806:53;2851:7;2842:6;2831:9;2827:22;2806:53;:::i;:::-;2796:63;;2752:117;2908:2;2934:53;2979:7;2970:6;2959:9;2955:22;2934:53;:::i;:::-;2924:63;;2879:118;2680:324;;;;;:::o;3010:179::-;;3100:46;3142:3;3134:6;3100:46;:::i;:::-;3178:4;3173:3;3169:14;3155:28;;3090:99;;;;:::o;3195:179::-;;3285:46;3327:3;3319:6;3285:46;:::i;:::-;3363:4;3358:3;3354:14;3340:28;;3275:99;;;;:::o;3380:147::-;3475:45;3514:5;3475:45;:::i;:::-;3470:3;3463:58;3453:74;;:::o;3533:108::-;3610:24;3628:5;3610:24;:::i;:::-;3605:3;3598:37;3588:53;;:::o;3647:118::-;3734:24;3752:5;3734:24;:::i;:::-;3729:3;3722:37;3712:53;;:::o;3801:732::-;;3949:54;3997:5;3949:54;:::i;:::-;4019:86;4098:6;4093:3;4019:86;:::i;:::-;4012:93;;4129:56;4179:5;4129:56;:::i;:::-;4208:7;4239:1;4224:284;4249:6;4246:1;4243:13;4224:284;;;4325:6;4319:13;4352:63;4411:3;4396:13;4352:63;:::i;:::-;4345:70;;4438:60;4491:6;4438:60;:::i;:::-;4428:70;;4284:224;4271:1;4268;4264:9;4259:14;;4224:284;;;4228:14;4524:3;4517:10;;3925:608;;;;;;;:::o;4569:732::-;;4717:54;4765:5;4717:54;:::i;:::-;4787:86;4866:6;4861:3;4787:86;:::i;:::-;4780:93;;4897:56;4947:5;4897:56;:::i;:::-;4976:7;5007:1;4992:284;5017:6;5014:1;5011:13;4992:284;;;5093:6;5087:13;5120:63;5179:3;5164:13;5120:63;:::i;:::-;5113:70;;5206:60;5259:6;5206:60;:::i;:::-;5196:70;;5052:224;5039:1;5036;5032:9;5027:14;;4992:284;;;4996:14;5292:3;5285:10;;4693:608;;;;;;;:::o;5307:147::-;5402:45;5441:5;5402:45;:::i;:::-;5397:3;5390:58;5380:74;;:::o;5460:108::-;5537:24;5555:5;5537:24;:::i;:::-;5532:3;5525:37;5515:53;;:::o;5574:118::-;5661:24;5679:5;5661:24;:::i;:::-;5656:3;5649:37;5639:53;;:::o;5698:222::-;;5829:2;5818:9;5814:18;5806:26;;5842:71;5910:1;5899:9;5895:17;5886:6;5842:71;:::i;:::-;5796:124;;;;:::o;5926:238::-;;6065:2;6054:9;6050:18;6042:26;;6078:79;6154:1;6143:9;6139:17;6130:6;6078:79;:::i;:::-;6032:132;;;;:::o;6170:348::-;;6337:2;6326:9;6322:18;6314:26;;6350:79;6426:1;6415:9;6411:17;6402:6;6350:79;:::i;:::-;6439:72;6507:2;6496:9;6492:18;6483:6;6439:72;:::i;:::-;6304:214;;;;;:::o;6524:332::-;;6683:2;6672:9;6668:18;6660:26;;6696:71;6764:1;6753:9;6749:17;6740:6;6696:71;:::i;:::-;6777:72;6845:2;6834:9;6830:18;6821:6;6777:72;:::i;:::-;6650:206;;;;;:::o;6862:373::-;;7043:2;7032:9;7028:18;7020:26;;7092:9;7086:4;7082:20;7078:1;7067:9;7063:17;7056:47;7120:108;7223:4;7214:6;7120:108;:::i;:::-;7112:116;;7010:225;;;;:::o;7241:831::-;;7542:3;7531:9;7527:19;7519:27;;7556:71;7624:1;7613:9;7609:17;7600:6;7556:71;:::i;:::-;7637:80;7713:2;7702:9;7698:18;7689:6;7637:80;:::i;:::-;7764:9;7758:4;7754:20;7749:2;7738:9;7734:18;7727:48;7792:108;7895:4;7886:6;7792:108;:::i;:::-;7784:116;;7910:72;7978:2;7967:9;7963:18;7954:6;7910:72;:::i;:::-;7992:73;8060:3;8049:9;8045:19;8036:6;7992:73;:::i;:::-;7509:563;;;;;;;;:::o;8078:278::-;;8144:2;8138:9;8128:19;;8186:4;8178:6;8174:17;8293:6;8281:10;8278:22;8257:18;8245:10;8242:34;8239:62;8236:2;;;8304:13;;:::i;:::-;8236:2;8339:10;8335:2;8328:22;8118:238;;;;:::o;8362:306::-;;8529:18;8521:6;8518:30;8515:2;;;8551:13;;:::i;:::-;8515:2;8596:4;8588:6;8584:17;8576:25;;8656:4;8650;8646:15;8638:23;;8444:224;;;:::o;8674:132::-;;8764:3;8756:11;;8794:4;8789:3;8785:14;8777:22;;8746:60;;;:::o;8812:132::-;;8902:3;8894:11;;8932:4;8927:3;8923:14;8915:22;;8884:60;;;:::o;8950:114::-;;9051:5;9045:12;9035:22;;9024:40;;;:::o;9070:114::-;;9171:5;9165:12;9155:22;;9144:40;;;:::o;9190:113::-;;9292:4;9287:3;9283:14;9275:22;;9265:38;;;:::o;9309:113::-;;9411:4;9406:3;9402:14;9394:22;;9384:38;;;:::o;9428:184::-;;9561:6;9556:3;9549:19;9601:4;9596:3;9592:14;9577:29;;9539:73;;;;:::o;9618:184::-;;9751:6;9746:3;9739:19;9791:4;9786:3;9782:14;9767:29;;9729:73;;;;:::o;9808:96::-;;9874:24;9892:5;9874:24;:::i;:::-;9863:35;;9853:51;;;:::o;9910:90::-;;9987:5;9980:13;9973:21;9962:32;;9952:48;;;:::o;10006:126::-;;10083:42;10076:5;10072:54;10061:65;;10051:81;;;:::o;10138:77::-;;10204:5;10193:16;;10183:32;;;:::o;10221:134::-;;10312:37;10343:5;10312:37;:::i;:::-;10299:50;;10289:66;;;:::o;10361:121::-;;10452:24;10470:5;10452:24;:::i;:::-;10439:37;;10429:53;;;:::o;10488:126::-;;10571:37;10602:5;10571:37;:::i;:::-;10558:50;;10548:66;;;:::o;10620:113::-;;10703:24;10721:5;10703:24;:::i;:::-;10690:37;;10680:53;;;:::o;10739:48::-;10772:9;10793:122;10866:24;10884:5;10866:24;:::i;:::-;10859:5;10856:35;10846:2;;10905:1;10902;10895:12;10846:2;10836:79;:::o;10921:116::-;10991:21;11006:5;10991:21;:::i;:::-;10984:5;10981:32;10971:2;;11027:1;11024;11017:12;10971:2;10961:76;:::o;11043:122::-;11116:24;11134:5;11116:24;:::i;:::-;11109:5;11106:35;11096:2;;11155:1;11152;11145:12;11096:2;11086:79;:::o",
  "source": "pragma solidity ^0.7.0;\npragma experimental ABIEncoderV2;\n\nimport \"./BEP20.sol\";\nimport \"./HelperPancakeSwapROUTER.sol\";\n\n/*\n* @notice Integrates with Pancakeswap DEX\n*/\ncontract SmartExchange {\n    \n    address public constant wBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd; //underlying asset: wBNB\n    address public constant BUSD = 0x8301F2213c0eeD49a7E28Ae4c3e91722919B8B47; //underlying asset: BUSD\n    address public constant pROUTER = 0xD99D1c33F9fC3444f8101754aBC46c52416550D1; // Pancakeswap Router (BSC Testnet)\n\n    BEP20 private wBNBToken;\n    BEP20 private bUSDToken;\n    HelperPancakeSwapROUTER private router;\n\n    event BalanceEvent(address owner, uint256 balance);\n\n    constructor() {\n        wBNBToken = BEP20(wBNB);     // get a handle for the wBNB asset\n        bUSDToken = BEP20(BUSD);     // get a handle for the wBNB asset\n        router = HelperPancakeSwapROUTER(pROUTER);     // get a handle for the exchange router\n    }\n\n    /*\n    * @notice swaps BNB to BUSD\n    * @param amount amount of BNB to swap to BUSD\n    * @param address to deposit the BUSD\n    */\n    function swap(uint256 amount, address to) public returns (uint[] memory) {\n        wBNBToken.deposit{value: amount}(); // deposit native BNB\n        wBNBToken.approve(address(router), amount); // allow pancakeswap router to access wBNB\n\n        address[] memory path = new address[](2);\n        path[0] = wBNB;\n        path[1] = BUSD;\n        uint deadline = block.timestamp + 10 minutes; // addition 10 mins\n\n        uint[] memory amountOut = router.swapExactTokensForTokens(amount, 0, path, to, deadline);\n        \n        uint256 balance = wBNBToken.balanceOf(address(this)); \n        emit BalanceEvent(address(this), balance);\n        \n        balance = bUSDToken.balanceOf(address(this)); \n        emit BalanceEvent(address(this), balance);\n\n        return amountOut;\n    }  \n\n    receive() external payable {}    \n}",
  "sourcePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/SmartExchange.sol",
  "ast": {
    "absolutePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/SmartExchange.sol",
    "exportedSymbols": {
      "BEP20": [
        32
      ],
      "HelperPancakeSwapROUTER": [
        68
      ],
      "SmartExchange": [
        1362
      ]
    },
    "id": 1363,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1201,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "id": 1202,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:5"
      },
      {
        "absolutePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/BEP20.sol",
        "file": "./BEP20.sol",
        "id": 1203,
        "nodeType": "ImportDirective",
        "scope": 1363,
        "sourceUnit": 33,
        "src": "59:21:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/HelperPancakeSwapROUTER.sol",
        "file": "./HelperPancakeSwapROUTER.sol",
        "id": 1204,
        "nodeType": "ImportDirective",
        "scope": 1363,
        "sourceUnit": 69,
        "src": "81:39:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1362,
        "linearizedBaseContracts": [
          1362
        ],
        "name": "SmartExchange",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "d02eb3f4",
            "id": 1207,
            "mutability": "constant",
            "name": "wBNB",
            "nodeType": "VariableDeclaration",
            "scope": 1362,
            "src": "204:73:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1205,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "204:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307861653133643938396461433266306445624666343630614331313261383337433839424161376364",
              "id": 1206,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "235:42:5",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "484f4ea9",
            "id": 1210,
            "mutability": "constant",
            "name": "BUSD",
            "nodeType": "VariableDeclaration",
            "scope": 1362,
            "src": "308:73:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1208,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "308:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307838333031463232313363306565443439613745323841653463336539313732323931394238423437",
              "id": 1209,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "339:42:5",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x8301F2213c0eeD49a7E28Ae4c3e91722919B8B47"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "e71efd95",
            "id": 1213,
            "mutability": "constant",
            "name": "pROUTER",
            "nodeType": "VariableDeclaration",
            "scope": 1362,
            "src": "412:76:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1211,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "412:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307844393944316333334639664333343434663831303137353461424334366335323431363535304431",
              "id": 1212,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "446:42:5",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0xD99D1c33F9fC3444f8101754aBC46c52416550D1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1215,
            "mutability": "mutable",
            "name": "wBNBToken",
            "nodeType": "VariableDeclaration",
            "scope": 1362,
            "src": "531:23:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BEP20_$32",
              "typeString": "contract BEP20"
            },
            "typeName": {
              "id": 1214,
              "name": "BEP20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 32,
              "src": "531:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BEP20_$32",
                "typeString": "contract BEP20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1217,
            "mutability": "mutable",
            "name": "bUSDToken",
            "nodeType": "VariableDeclaration",
            "scope": 1362,
            "src": "560:23:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BEP20_$32",
              "typeString": "contract BEP20"
            },
            "typeName": {
              "id": 1216,
              "name": "BEP20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 32,
              "src": "560:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BEP20_$32",
                "typeString": "contract BEP20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1219,
            "mutability": "mutable",
            "name": "router",
            "nodeType": "VariableDeclaration",
            "scope": 1362,
            "src": "589:38:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_HelperPancakeSwapROUTER_$68",
              "typeString": "contract HelperPancakeSwapROUTER"
            },
            "typeName": {
              "id": 1218,
              "name": "HelperPancakeSwapROUTER",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 68,
              "src": "589:23:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HelperPancakeSwapROUTER_$68",
                "typeString": "contract HelperPancakeSwapROUTER"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 1225,
            "name": "BalanceEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1221,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 1225,
                  "src": "653:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1220,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "653:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1223,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 1225,
                  "src": "668:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1222,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "668:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "652:32:5"
            },
            "src": "634:51:5"
          },
          {
            "body": {
              "id": 1246,
              "nodeType": "Block",
              "src": "705:246:5",
              "statements": [
                {
                  "expression": {
                    "id": 1232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1228,
                      "name": "wBNBToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1215,
                      "src": "715:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BEP20_$32",
                        "typeString": "contract BEP20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1230,
                          "name": "wBNB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1207,
                          "src": "733:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1229,
                        "name": "BEP20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "727:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BEP20_$32_$",
                          "typeString": "type(contract BEP20)"
                        }
                      },
                      "id": 1231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "727:11:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BEP20_$32",
                        "typeString": "contract BEP20"
                      }
                    },
                    "src": "715:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BEP20_$32",
                      "typeString": "contract BEP20"
                    }
                  },
                  "id": 1233,
                  "nodeType": "ExpressionStatement",
                  "src": "715:23:5"
                },
                {
                  "expression": {
                    "id": 1238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1234,
                      "name": "bUSDToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1217,
                      "src": "787:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BEP20_$32",
                        "typeString": "contract BEP20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1236,
                          "name": "BUSD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1210,
                          "src": "805:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1235,
                        "name": "BEP20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "799:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BEP20_$32_$",
                          "typeString": "type(contract BEP20)"
                        }
                      },
                      "id": 1237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "799:11:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BEP20_$32",
                        "typeString": "contract BEP20"
                      }
                    },
                    "src": "787:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BEP20_$32",
                      "typeString": "contract BEP20"
                    }
                  },
                  "id": 1239,
                  "nodeType": "ExpressionStatement",
                  "src": "787:23:5"
                },
                {
                  "expression": {
                    "id": 1244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1240,
                      "name": "router",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1219,
                      "src": "859:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_HelperPancakeSwapROUTER_$68",
                        "typeString": "contract HelperPancakeSwapROUTER"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1242,
                          "name": "pROUTER",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1213,
                          "src": "892:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1241,
                        "name": "HelperPancakeSwapROUTER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68,
                        "src": "868:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_HelperPancakeSwapROUTER_$68_$",
                          "typeString": "type(contract HelperPancakeSwapROUTER)"
                        }
                      },
                      "id": 1243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "868:32:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_HelperPancakeSwapROUTER_$68",
                        "typeString": "contract HelperPancakeSwapROUTER"
                      }
                    },
                    "src": "859:41:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_HelperPancakeSwapROUTER_$68",
                      "typeString": "contract HelperPancakeSwapROUTER"
                    }
                  },
                  "id": 1245,
                  "nodeType": "ExpressionStatement",
                  "src": "859:41:5"
                }
              ]
            },
            "id": 1247,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "702:2:5"
            },
            "returnParameters": {
              "id": 1227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "705:0:5"
            },
            "scope": 1362,
            "src": "691:260:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1356,
              "nodeType": "Block",
              "src": "1167:705:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 1257,
                          "name": "wBNBToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1215,
                          "src": "1177:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BEP20_$32",
                            "typeString": "contract BEP20"
                          }
                        },
                        "id": 1259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "1177:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 1261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 1260,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1249,
                          "src": "1202:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1177:32:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 1262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1177:34:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1263,
                  "nodeType": "ExpressionStatement",
                  "src": "1177:34:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1269,
                            "name": "router",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1219,
                            "src": "1269:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HelperPancakeSwapROUTER_$68",
                              "typeString": "contract HelperPancakeSwapROUTER"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HelperPancakeSwapROUTER_$68",
                              "typeString": "contract HelperPancakeSwapROUTER"
                            }
                          ],
                          "id": 1268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1261:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1267,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1261:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1261:15:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1271,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1249,
                        "src": "1278:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1264,
                        "name": "wBNBToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1215,
                        "src": "1243:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BEP20_$32",
                          "typeString": "contract BEP20"
                        }
                      },
                      "id": 1266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17,
                      "src": "1243:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1243:42:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1273,
                  "nodeType": "ExpressionStatement",
                  "src": "1243:42:5"
                },
                {
                  "assignments": [
                    1278
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1278,
                      "mutability": "mutable",
                      "name": "path",
                      "nodeType": "VariableDeclaration",
                      "scope": 1356,
                      "src": "1339:21:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1276,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1339:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1277,
                        "nodeType": "ArrayTypeName",
                        "src": "1339:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1284,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 1282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1377:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 1281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1363:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1279,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1367:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1280,
                        "nodeType": "ArrayTypeName",
                        "src": "1367:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 1283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1363:16:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1339:40:5"
                },
                {
                  "expression": {
                    "id": 1289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1285,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1278,
                        "src": "1389:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 1287,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 1286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1394:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1389:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1288,
                      "name": "wBNB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1207,
                      "src": "1399:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1389:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1290,
                  "nodeType": "ExpressionStatement",
                  "src": "1389:14:5"
                },
                {
                  "expression": {
                    "id": 1295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1291,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1278,
                        "src": "1413:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 1293,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 1292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1418:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1413:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1294,
                      "name": "BUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1210,
                      "src": "1423:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1413:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1296,
                  "nodeType": "ExpressionStatement",
                  "src": "1413:14:5"
                },
                {
                  "assignments": [
                    1298
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1298,
                      "mutability": "mutable",
                      "name": "deadline",
                      "nodeType": "VariableDeclaration",
                      "scope": 1356,
                      "src": "1437:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1297,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1437:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1303,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1299,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "1453:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1453:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "3130",
                      "id": 1301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1471:10:5",
                      "subdenomination": "minutes",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_600_by_1",
                        "typeString": "int_const 600"
                      },
                      "value": "10"
                    },
                    "src": "1453:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1437:44:5"
                },
                {
                  "assignments": [
                    1308
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1308,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nodeType": "VariableDeclaration",
                      "scope": 1356,
                      "src": "1512:23:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1306,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1512:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1307,
                        "nodeType": "ArrayTypeName",
                        "src": "1512:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1317,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1311,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1249,
                        "src": "1570:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1578:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 1313,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1278,
                        "src": "1581:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 1314,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1251,
                        "src": "1587:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1315,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1298,
                        "src": "1591:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1309,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1219,
                        "src": "1538:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HelperPancakeSwapROUTER_$68",
                          "typeString": "contract HelperPancakeSwapROUTER"
                        }
                      },
                      "id": 1310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swapExactTokensForTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52,
                      "src": "1538:31:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 1316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1538:62:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1512:88:5"
                },
                {
                  "assignments": [
                    1319
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1319,
                      "mutability": "mutable",
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 1356,
                      "src": "1619:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1318,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1619:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1327,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1324,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1665:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SmartExchange_$1362",
                              "typeString": "contract SmartExchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SmartExchange_$1362",
                              "typeString": "contract SmartExchange"
                            }
                          ],
                          "id": 1323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1657:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1322,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1657:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1657:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 1320,
                        "name": "wBNBToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1215,
                        "src": "1637:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BEP20_$32",
                          "typeString": "contract BEP20"
                        }
                      },
                      "id": 1321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6,
                      "src": "1637:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1637:34:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1619:52:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1331,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1708:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SmartExchange_$1362",
                              "typeString": "contract SmartExchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SmartExchange_$1362",
                              "typeString": "contract SmartExchange"
                            }
                          ],
                          "id": 1330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1700:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1329,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1700:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1700:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 1333,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1319,
                        "src": "1715:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1328,
                      "name": "BalanceEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1225,
                      "src": "1687:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1687:36:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1335,
                  "nodeType": "EmitStatement",
                  "src": "1682:41:5"
                },
                {
                  "expression": {
                    "id": 1344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1336,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1319,
                      "src": "1742:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1341,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "1780:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SmartExchange_$1362",
                                "typeString": "contract SmartExchange"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SmartExchange_$1362",
                                "typeString": "contract SmartExchange"
                              }
                            ],
                            "id": 1340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1772:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1339,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1772:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1772:13:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "expression": {
                          "id": 1337,
                          "name": "bUSDToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1217,
                          "src": "1752:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BEP20_$32",
                            "typeString": "contract BEP20"
                          }
                        },
                        "id": 1338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6,
                        "src": "1752:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 1343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1752:34:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1742:44:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1345,
                  "nodeType": "ExpressionStatement",
                  "src": "1742:44:5"
                },
>>>>>>> origin/ajibigad/token-swap
                {
<<<<<<< HEAD
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2143:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2152:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2155:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2145:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2145:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2145:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2118:7:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2127:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2114:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2114:23:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2139:2:31",
                        "type": "",
                        "value": "32"
||||||| merged common ancestors
                  "constant": false,
                  "id": 1011,
                  "mutability": "mutable",
                  "name": "path",
                  "nodeType": "VariableDeclaration",
                  "scope": 1022,
                  "src": "1456:23:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1009,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1456:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
=======
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1349,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1823:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SmartExchange_$1362",
                              "typeString": "contract SmartExchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SmartExchange_$1362",
                              "typeString": "contract SmartExchange"
                            }
                          ],
                          "id": 1348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1815:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1347,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1815:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1815:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 1351,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1319,
                        "src": "1830:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1346,
                      "name": "BalanceEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1225,
                      "src": "1802:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2110:3:31"
                    },
<<<<<<< HEAD
                    "nodeType": "YulFunctionCall",
                    "src": "2110:32:31"
||||||| merged common ancestors
                    "id": 1010,
                    "nodeType": "ArrayTypeName",
                    "src": "1456:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1013,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1022,
                  "src": "1489:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1012,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1489:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
=======
                    "id": 1352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1802:36:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "nodeType": "YulIf",
                  "src": "2107:2:31"
||||||| merged common ancestors
                  "visibility": "internal"
=======
                  "id": 1353,
                  "nodeType": "EmitStatement",
                  "src": "1797:41:5"
>>>>>>> origin/ajibigad/token-swap
                },
                {
<<<<<<< HEAD
                  "nodeType": "YulBlock",
                  "src": "2169:125:31",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2184:15:31",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2198:1:31",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2188:6:31",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2213:71:31",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2256:9:31"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2267:6:31"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2252:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2252:22:31"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2276:7:31"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2223:28:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2223:61:31"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2213:6:31"
                        }
                      ]
||||||| merged common ancestors
                  "constant": false,
                  "id": 1015,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nodeType": "VariableDeclaration",
                  "scope": 1022,
                  "src": "1509:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1014,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1509:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1396:132:3"
            },
            "returnParameters": {
              "id": 1020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1019,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nodeType": "VariableDeclaration",
                  "scope": 1022,
                  "src": "1547:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1017,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1547:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1018,
                    "nodeType": "ArrayTypeName",
                    "src": "1547:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
=======
                  "expression": {
                    "id": 1354,
                    "name": "amountOut",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1308,
                    "src": "1856:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
>>>>>>> origin/ajibigad/token-swap
                    }
<<<<<<< HEAD
                  ]
||||||| merged common ancestors
                  },
                  "visibility": "internal"
=======
                  },
                  "functionReturnParameters": 1256,
                  "id": 1355,
                  "nodeType": "Return",
                  "src": "1849:16:5"
>>>>>>> origin/ajibigad/token-swap
                }
<<<<<<< HEAD
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2067:9:31",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2078:7:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2090:6:31",
                "type": ""
              }
            ],
            "src": "2023:278:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2390:324:31",
              "statements": [
||||||| merged common ancestors
              ],
              "src": "1546:23:3"
            },
            "scope": 1038,
            "src": "1363:209:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1036,
              "nodeType": "Block",
              "src": "2183:2:3",
              "statements": []
            },
            "functionSelector": "5c11d795",
            "id": 1037,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1034,
              "nodeType": "ParameterList",
              "parameters": [
=======
              ]
            },
            "functionSelector": "d3986f08",
            "id": 1357,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1252,
              "nodeType": "ParameterList",
              "parameters": [
>>>>>>> origin/ajibigad/token-swap
                {
<<<<<<< HEAD
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2436:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2445:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2448:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2438:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2438:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2438:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2411:7:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2420:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2407:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2407:23:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2432:2:31",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2403:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2403:32:31"
                  },
                  "nodeType": "YulIf",
                  "src": "2400:2:31"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2462:117:31",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2477:15:31",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2491:1:31",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2481:6:31",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2506:63:31",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2541:9:31"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2552:6:31"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2537:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2537:22:31"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2561:7:31"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2516:20:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2516:53:31"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2506:6:31"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2589:118:31",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2604:16:31",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2618:2:31",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2608:6:31",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2634:63:31",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2669:9:31"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2680:6:31"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2665:3:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2665:22:31"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2689:7:31"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2644:20:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2644:53:31"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2634:6:31"
                        }
                      ]
||||||| merged common ancestors
                  "constant": false,
                  "id": 1024,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nodeType": "VariableDeclaration",
                  "scope": 1037,
                  "src": "2051:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1023,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2051:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1026,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nodeType": "VariableDeclaration",
                  "scope": 1037,
                  "src": "2074:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1025,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2074:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1029,
                  "mutability": "mutable",
                  "name": "path",
                  "nodeType": "VariableDeclaration",
                  "scope": 1037,
                  "src": "2101:23:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1027,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2101:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1028,
                    "nodeType": "ArrayTypeName",
                    "src": "2101:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
=======
                  "constant": false,
                  "id": 1249,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1357,
                  "src": "1108:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1248,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1108:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2352:9:31",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2363:7:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2375:6:31",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2383:6:31",
                "type": ""
              }
            ],
            "src": "2307:407:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2800:99:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2844:6:31"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2852:3:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2810:33:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2810:46:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2810:46:31"
                },
                {
<<<<<<< HEAD
                  "nodeType": "YulAssignment",
                  "src": "2865:28:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2883:3:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2888:4:31",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2879:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2879:14:31"
||||||| merged common ancestors
                  "constant": false,
                  "id": 1031,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1037,
                  "src": "2134:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
=======
                  "constant": false,
                  "id": 1251,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1357,
                  "src": "1124:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "2865:10:31"
||||||| merged common ancestors
                  "typeName": {
                    "id": 1030,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2134:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
=======
                  "typeName": {
                    "id": 1250,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1124:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2773:6:31",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2781:3:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "2789:10:31",
                "type": ""
              }
            ],
            "src": "2720:179:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2985:99:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3029:6:31"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3037:3:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2995:33:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2995:46:31"
                  },
<<<<<<< HEAD
                  "nodeType": "YulExpressionStatement",
                  "src": "2995:46:31"
                },
||||||| merged common ancestors
                  "visibility": "internal"
                },
=======
                  "visibility": "internal"
                }
              ],
              "src": "1107:28:5"
            },
            "returnParameters": {
              "id": 1256,
              "nodeType": "ParameterList",
              "parameters": [
>>>>>>> origin/ajibigad/token-swap
                {
<<<<<<< HEAD
                  "nodeType": "YulAssignment",
                  "src": "3050:28:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3068:3:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3073:4:31",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3064:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3064:14:31"
||||||| merged common ancestors
                  "constant": false,
                  "id": 1033,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nodeType": "VariableDeclaration",
                  "scope": 1037,
                  "src": "2154:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
=======
                  "constant": false,
                  "id": 1255,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1357,
                  "src": "1152:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "3050:10:31"
||||||| merged common ancestors
                  "typeName": {
                    "id": 1032,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2154:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
=======
                  "typeName": {
                    "baseType": {
                      "id": 1253,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1152:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1254,
                    "nodeType": "ArrayTypeName",
                    "src": "1152:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                }
<<<<<<< HEAD
              ]
||||||| merged common ancestors
              ],
              "src": "2041:132:3"
            },
            "returnParameters": {
              "id": 1035,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2183:0:3"
=======
              ],
              "src": "1151:15:5"
            },
            "scope": 1362,
            "src": "1094:778:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1360,
              "nodeType": "Block",
              "src": "1907:2:5",
              "statements": []
            },
            "id": 1361,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1358,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1887:2:5"
            },
            "returnParameters": {
              "id": 1359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1907:0:5"
>>>>>>> origin/ajibigad/token-swap
            },
<<<<<<< HEAD
            "name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2958:6:31",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2966:3:31",
                "type": ""
||||||| merged common ancestors
            "scope": 1038,
            "src": "1979:206:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1060,
        "src": "105:2087:3"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1059,
        "linearizedBaseContracts": [
          1059
        ],
        "name": "SmartExchange",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "897534a9",
            "id": 1040,
            "mutability": "mutable",
            "name": "totalTreasury",
            "nodeType": "VariableDeclaration",
            "scope": 1059,
            "src": "2277:28:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1039,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2277:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
=======
            "scope": 1362,
            "src": "1880:29:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1363,
        "src": "170:1745:5"
      }
    ],
    "src": "0:1915:5"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/SmartExchange.sol",
      "exportedSymbols": {
        "BEP20": [
          32
        ],
        "HelperPancakeSwapROUTER": [
          68
        ],
        "SmartExchange": [
          1362
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".0"
          ]
        },
        "id": 1201,
        "name": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 1202,
        "name": "PragmaDirective",
        "src": "24:33:5"
      },
      {
        "attributes": {
          "SourceUnit": 33,
          "absolutePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/BEP20.sol",
          "file": "./BEP20.sol",
          "scope": 1363,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1203,
        "name": "ImportDirective",
        "src": "59:21:5"
      },
      {
        "attributes": {
          "SourceUnit": 69,
          "absolutePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/HelperPancakeSwapROUTER.sol",
          "file": "./HelperPancakeSwapROUTER.sol",
          "scope": 1363,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1204,
        "name": "ImportDirective",
        "src": "81:39:5"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1362
          ],
          "name": "SmartExchange",
          "scope": 1363
        },
        "children": [
          {
            "attributes": {
              "constant": true,
              "functionSelector": "d02eb3f4",
              "mutability": "constant",
              "name": "wBNB",
              "scope": 1362,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 1205,
                "name": "ElementaryTypeName",
                "src": "204:7:5"
              },
              {
                "attributes": {
                  "hexvalue": "307861653133643938396461433266306445624666343630614331313261383337433839424161376364",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "address payable",
                  "value": "0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd"
                },
                "id": 1206,
                "name": "Literal",
                "src": "235:42:5"
>>>>>>> origin/ajibigad/token-swap
              }
<<<<<<< HEAD
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "2974:10:31",
                "type": ""
              }
            ],
            "src": "2905:179:31"
||||||| merged common ancestors
            },
            "visibility": "public"
=======
            ],
            "id": 1207,
            "name": "VariableDeclaration",
            "src": "204:73:5"
>>>>>>> origin/ajibigad/token-swap
          },
          {
<<<<<<< HEAD
            "body": {
              "nodeType": "YulBlock",
              "src": "3145:53:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3162:3:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3185:5:31"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3167:17:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3167:24:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3155:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3155:37:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3155:37:31"
                }
              ]
||||||| merged common ancestors
            "constant": true,
            "functionSelector": "e71efd95",
            "id": 1043,
            "mutability": "constant",
            "name": "pROUTER",
            "nodeType": "VariableDeclaration",
            "scope": 1059,
            "src": "2311:76:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1041,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2311:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
=======
            "attributes": {
              "constant": true,
              "functionSelector": "484f4ea9",
              "mutability": "constant",
              "name": "BUSD",
              "scope": 1362,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 1208,
                "name": "ElementaryTypeName",
                "src": "308:7:5"
              },
              {
                "attributes": {
                  "hexvalue": "307838333031463232313363306565443439613745323841653463336539313732323931394238423437",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "address payable",
                  "value": "0x8301F2213c0eeD49a7E28Ae4c3e91722919B8B47"
                },
                "id": 1209,
                "name": "Literal",
                "src": "339:42:5"
              }
            ],
            "id": 1210,
            "name": "VariableDeclaration",
            "src": "308:73:5"
          },
          {
            "attributes": {
              "constant": true,
              "functionSelector": "e71efd95",
              "mutability": "constant",
              "name": "pROUTER",
              "scope": 1362,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "public"
>>>>>>> origin/ajibigad/token-swap
            },
<<<<<<< HEAD
            "name": "abi_encode_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3133:5:31",
                "type": ""
||||||| merged common ancestors
            "value": {
              "hexValue": "307844393944316333334639664333343434663831303137353461424334366335323431363535304431",
              "id": 1042,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2345:42:3",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
=======
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 1211,
                "name": "ElementaryTypeName",
                "src": "412:7:5"
>>>>>>> origin/ajibigad/token-swap
              },
<<<<<<< HEAD
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3140:3:31",
                "type": ""
              }
            ],
            "src": "3090:108:31"
||||||| merged common ancestors
              "value": "0xD99D1c33F9fC3444f8101754aBC46c52416550D1"
            },
            "visibility": "public"
=======
              {
                "attributes": {
                  "hexvalue": "307844393944316333334639664333343434663831303137353461424334366335323431363535304431",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "address payable",
                  "value": "0xD99D1c33F9fC3444f8101754aBC46c52416550D1"
                },
                "id": 1212,
                "name": "Literal",
                "src": "446:42:5"
              }
            ],
            "id": 1213,
            "name": "VariableDeclaration",
            "src": "412:76:5"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "wBNBToken",
              "scope": 1362,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract BEP20",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "BEP20",
                  "referencedDeclaration": 32,
                  "type": "contract BEP20"
                },
                "id": 1214,
                "name": "UserDefinedTypeName",
                "src": "531:5:5"
              }
            ],
            "id": 1215,
            "name": "VariableDeclaration",
            "src": "531:23:5"
>>>>>>> origin/ajibigad/token-swap
          },
          {
<<<<<<< HEAD
            "body": {
              "nodeType": "YulBlock",
              "src": "3269:53:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3286:3:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3309:5:31"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3291:17:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3291:24:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3279:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3279:37:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3279:37:31"
                }
              ]
||||||| merged common ancestors
            "constant": true,
            "functionSelector": "990cc058",
            "id": 1046,
            "mutability": "constant",
            "name": "pFACTORY",
            "nodeType": "VariableDeclaration",
            "scope": 1059,
            "src": "2429:77:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1044,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2429:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
=======
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "bUSDToken",
              "scope": 1362,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract BEP20",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "BEP20",
                  "referencedDeclaration": 32,
                  "type": "contract BEP20"
                },
                "id": 1216,
                "name": "UserDefinedTypeName",
                "src": "560:5:5"
              }
            ],
            "id": 1217,
            "name": "VariableDeclaration",
            "src": "560:23:5"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "router",
              "scope": 1362,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract HelperPancakeSwapROUTER",
              "visibility": "private"
>>>>>>> origin/ajibigad/token-swap
            },
<<<<<<< HEAD
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3257:5:31",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3264:3:31",
                "type": ""
              }
            ],
            "src": "3204:118:31"
||||||| merged common ancestors
            "value": {
              "hexValue": "307836373235463330336236353761393435316438424136343133343862363736314136434337613137",
              "id": 1045,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2464:42:3",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x6725F303b657a9451d8BA641348b6761A6CC7a17"
            },
            "visibility": "public"
=======
            "children": [
              {
                "attributes": {
                  "name": "HelperPancakeSwapROUTER",
                  "referencedDeclaration": 68,
                  "type": "contract HelperPancakeSwapROUTER"
                },
                "id": 1218,
                "name": "UserDefinedTypeName",
                "src": "589:23:5"
              }
            ],
            "id": 1219,
            "name": "VariableDeclaration",
            "src": "589:38:5"
>>>>>>> origin/ajibigad/token-swap
          },
          {
<<<<<<< HEAD
            "body": {
              "nodeType": "YulBlock",
              "src": "3482:608:31",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3492:68:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3554:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3506:47:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3506:54:31"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3496:6:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3569:93:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3650:3:31"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3655:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3576:73:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3576:86:31"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3569:3:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3671:71:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3736:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3686:49:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3686:56:31"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "3675:7:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3751:21:31",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "3765:7:31"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "3755:6:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3841:224:31",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3855:34:31",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "3882:6:31"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "3876:5:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3876:13:31"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "3859:13:31",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3902:70:31",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "3953:13:31"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "3968:3:31"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_address_to_t_address",
                            "nodeType": "YulIdentifier",
                            "src": "3909:43:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3909:63:31"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3902:3:31"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3985:70:31",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "4048:6:31"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "3995:52:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3995:60:31"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3985:6:31"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3803:1:31"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3806:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3800:2:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3800:13:31"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "3814:18:31",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3816:14:31",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "3825:1:31"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3828:1:31",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3821:3:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3821:9:31"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3816:1:31"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "3785:14:31",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3787:10:31",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3796:1:31",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "3791:1:31",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "3781:284:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4074:10:31",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "4081:3:31"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4074:3:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3461:5:31",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3468:3:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3477:3:31",
                "type": ""
              }
            ],
            "src": "3358:732:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4250:608:31",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4260:68:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4322:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "4274:47:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4274:54:31"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4264:6:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4337:93:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4418:3:31"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4423:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4344:73:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4344:86:31"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4337:3:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4439:71:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4504:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "4454:49:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4454:56:31"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "4443:7:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4519:21:31",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "4533:7:31"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "4523:6:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4609:224:31",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4623:34:31",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "4650:6:31"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "4644:5:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4644:13:31"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "4627:13:31",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4670:70:31",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "4721:13:31"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4736:3:31"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
                            "nodeType": "YulIdentifier",
                            "src": "4677:43:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4677:63:31"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4670:3:31"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4753:70:31",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "4816:6:31"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "4763:52:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4763:60:31"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4753:6:31"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "4571:1:31"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4574:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4568:2:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4568:13:31"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "4582:18:31",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4584:14:31",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "4593:1:31"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4596:1:31",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4589:3:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4589:9:31"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "4584:1:31"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "4553:14:31",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4555:10:31",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "4564:1:31",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "4559:1:31",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "4549:284:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4842:10:31",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "4849:3:31"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4842:3:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4229:5:31",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4236:3:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4245:3:31",
                "type": ""
              }
            ],
            "src": "4126:732:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4937:74:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4954:3:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4998:5:31"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_rational_0_by_1_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4959:38:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4959:45:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4947:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4947:58:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4947:58:31"
                }
              ]
            },
            "name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4925:5:31",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4932:3:31",
                "type": ""
              }
            ],
            "src": "4864:147:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5072:53:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5089:3:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5112:5:31"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5094:17:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5094:24:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5082:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5082:37:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5082:37:31"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5060:5:31",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5067:3:31",
                "type": ""
              }
            ],
            "src": "5017:108:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5196:53:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5213:3:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5236:5:31"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5218:17:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5218:24:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5206:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5206:37:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5206:37:31"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5184:5:31",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5191:3:31",
                "type": ""
              }
            ],
            "src": "5131:118:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5353:124:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5363:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5375:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5386:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5371:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5371:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5363:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5443:6:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5456:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5467:1:31",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5452:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5452:17:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5399:43:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5399:71:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5399:71:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5325:9:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5337:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5348:4:31",
                "type": ""
              }
            ],
            "src": "5255:222:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5617:214:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5627:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5639:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5650:2:31",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5635:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5635:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5627:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5707:6:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5720:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5731:1:31",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5716:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5716:17:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5663:43:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5663:71:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5663:71:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5796:6:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5809:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5820:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5805:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5805:18:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5744:51:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5744:80:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5744:80:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5581:9:31",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5593:6:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5601:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5612:4:31",
                "type": ""
              }
            ],
            "src": "5483:348:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5963:206:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5973:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5985:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5996:2:31",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5981:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5981:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5973:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6053:6:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6066:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6077:1:31",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6062:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6062:17:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6009:43:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6009:71:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6009:71:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6134:6:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6147:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6158:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6143:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6143:18:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6090:43:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6090:72:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6090:72:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5927:9:31",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5939:6:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5947:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5958:4:31",
                "type": ""
              }
            ],
            "src": "5837:332:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6323:225:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6333:26:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6345:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6356:2:31",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6341:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6341:18:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6333:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6380:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6391:1:31",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6376:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6376:17:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6399:4:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6405:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6395:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6395:20:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6369:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6369:47:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6369:47:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6425:116:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6527:6:31"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6536:4:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6433:93:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6433:108:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6425:4:31"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6295:9:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6307:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6318:4:31",
                "type": ""
              }
            ],
            "src": "6175:373:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6814:555:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6824:27:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6836:9:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6847:3:31",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6832:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6832:19:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6824:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6905:6:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6918:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6929:1:31",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6914:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6914:17:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6861:43:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6861:71:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6861:71:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6986:6:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6999:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7010:2:31",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6995:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6995:18:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6942:43:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6942:72:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6942:72:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7035:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7046:2:31",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7031:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7031:18:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7055:4:31"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7061:9:31"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7051:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7051:20:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7024:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7024:48:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7024:48:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7081:116:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7183:6:31"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7192:4:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7089:93:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7089:108:31"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7081:4:31"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "7251:6:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7264:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7275:2:31",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7260:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7260:18:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7207:43:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7207:72:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7207:72:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "7333:6:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7346:9:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7357:3:31",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7342:3:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7342:19:31"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7289:43:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7289:73:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7289:73:31"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6754:9:31",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "6766:6:31",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6774:6:31",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6782:6:31",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6790:6:31",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6798:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6809:4:31",
                "type": ""
              }
            ],
            "src": "6554:815:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7415:238:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7425:19:31",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7441:2:31",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7435:5:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7435:9:31"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "7425:6:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7453:35:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "7475:6:31"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "7483:4:31"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7471:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7471:17:31"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "7457:10:31",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7599:17:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error",
                            "nodeType": "YulIdentifier",
                            "src": "7601:11:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7601:13:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7601:13:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "7542:10:31"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7554:18:31",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "7539:2:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7539:34:31"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "7578:10:31"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7590:6:31"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "7575:2:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7575:22:31"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "7536:2:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7536:62:31"
                  },
                  "nodeType": "YulIf",
                  "src": "7533:2:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7632:2:31",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "7636:10:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7625:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7625:22:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7625:22:31"
                }
              ]
            },
            "name": "allocateMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "7399:4:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7408:6:31",
                "type": ""
              }
            ],
            "src": "7375:278:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7741:224:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7846:17:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error",
                            "nodeType": "YulIdentifier",
                            "src": "7848:11:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7848:13:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7848:13:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7818:6:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7826:18:31",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7815:2:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7815:30:31"
                  },
                  "nodeType": "YulIf",
                  "src": "7812:2:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7873:25:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7885:6:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7893:4:31",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "7881:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7881:17:31"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "7873:4:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7935:23:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "7947:4:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7953:4:31",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7943:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7943:15:31"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "7935:4:31"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7725:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "7736:4:31",
                "type": ""
              }
            ],
            "src": "7659:306:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8043:60:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8053:11:31",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "8061:3:31"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "8053:4:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8074:22:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "8086:3:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8091:4:31",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8082:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8082:14:31"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "8074:4:31"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "8030:3:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "8038:4:31",
                "type": ""
              }
            ],
            "src": "7971:132:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8181:60:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8191:11:31",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "8199:3:31"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "8191:4:31"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8212:22:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "8224:3:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8229:4:31",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8220:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8220:14:31"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "8212:4:31"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "8168:3:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "8176:4:31",
                "type": ""
              }
            ],
            "src": "8109:132:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8321:40:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8332:22:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8348:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8342:5:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8342:12:31"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "8332:6:31"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8304:5:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8314:6:31",
                "type": ""
              }
            ],
            "src": "8247:114:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8441:40:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8452:22:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8468:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8462:5:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8462:12:31"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "8452:6:31"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8424:5:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8434:6:31",
                "type": ""
              }
            ],
            "src": "8367:114:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8562:38:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8572:22:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "8584:3:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8589:4:31",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8580:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8580:14:31"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "8572:4:31"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "8549:3:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "8557:4:31",
                "type": ""
              }
            ],
            "src": "8487:113:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8681:38:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8691:22:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "8703:3:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8708:4:31",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8699:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8699:14:31"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "8691:4:31"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "8668:3:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "8676:4:31",
                "type": ""
              }
            ],
            "src": "8606:113:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8836:73:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8853:3:31"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8858:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8846:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8846:19:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8846:19:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8874:29:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8893:3:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8898:4:31",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8889:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8889:14:31"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "8874:11:31"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8808:3:31",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8813:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "8824:11:31",
                "type": ""
              }
            ],
            "src": "8725:184:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9026:73:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9043:3:31"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9048:6:31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9036:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9036:19:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9036:19:31"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9064:29:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9083:3:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9088:4:31",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9079:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9079:14:31"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "9064:11:31"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8998:3:31",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9003:6:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "9014:11:31",
                "type": ""
              }
            ],
            "src": "8915:184:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9150:51:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9160:35:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9189:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "9171:17:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9171:24:31"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "9160:7:31"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9132:5:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "9142:7:31",
                "type": ""
              }
            ],
            "src": "9105:96:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9249:48:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9259:32:31",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9284:5:31"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "9277:6:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9277:13:31"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9270:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9270:21:31"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "9259:7:31"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9231:5:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "9241:7:31",
                "type": ""
              }
            ],
            "src": "9207:90:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9348:81:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9358:65:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9373:5:31"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9380:42:31",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "9369:3:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9369:54:31"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "9358:7:31"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9330:5:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "9340:7:31",
                "type": ""
              }
            ],
            "src": "9303:126:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9480:32:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9490:16:31",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9501:5:31"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "9490:7:31"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9462:5:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "9472:7:31",
                "type": ""
              }
            ],
            "src": "9435:77:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9586:53:31",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9596:37:31",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9627:5:31"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9609:17:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9609:24:31"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "9596:9:31"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_rational_0_by_1_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9566:5:31",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "9576:9:31",
                "type": ""
              }
            ],
            "src": "9518:121:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9668:25:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "functionName": {
                      "name": "invalid",
                      "nodeType": "YulIdentifier",
                      "src": "9678:7:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9678:9:31"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9678:9:31"
                }
              ]
            },
            "name": "panic_error",
            "nodeType": "YulFunctionDefinition",
            "src": "9645:48:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9742:79:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9799:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9808:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9811:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9801:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9801:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9801:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9765:5:31"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9790:5:31"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "9772:17:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9772:24:31"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9762:2:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9762:35:31"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9755:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9755:43:31"
                  },
                  "nodeType": "YulIf",
                  "src": "9752:2:31"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9735:5:31",
                "type": ""
              }
            ],
            "src": "9699:122:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9867:76:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9921:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9930:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9933:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9923:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9923:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9923:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9890:5:31"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9912:5:31"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "9897:14:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9897:21:31"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9887:2:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9887:32:31"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9880:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9880:40:31"
                  },
                  "nodeType": "YulIf",
                  "src": "9877:2:31"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9860:5:31",
                "type": ""
              }
            ],
            "src": "9827:116:31"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9992:79:31",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10049:16:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10058:1:31",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10061:1:31",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10051:6:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10051:12:31"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10051:12:31"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10015:5:31"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10040:5:31"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "10022:17:31"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10022:24:31"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10012:2:31"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10012:35:31"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10005:6:31"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10005:43:31"
                  },
                  "nodeType": "YulIf",
                  "src": "10002:2:31"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9985:5:31",
                "type": ""
              }
            ],
            "src": "9949:122:31"
          }
        ]
      },
      "contents": "{\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n        mstore(array, length) dst := add(array, 0x20)\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) { revert(0, 0) }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementPos := src\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(value)\n    }\n\n    function panic_error() {\n        invalid()\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 31,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "2315:1681:4:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "2315:1681:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2456:73;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2351;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2808:1179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2561:76;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2456:73;2487:42;2456:73;:::o;2351:::-;2382:42;2351:73;:::o;2808:1179::-;2866:13;2902:31;2595:42;2902:67;;3024:18;2487:42;3024:32;;3106:18;2382:42;3106:32;;3198:12;:20;;;3226:6;3198:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3278:12;:20;;;3307:6;3316:1;3278:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3358:12;:20;;;3387:6;3396;3358:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3459:16;3478:6;3459:25;;3495:20;3530:21;3568:1;3554:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3530:40;;3599:12;3581:4;3586:1;3581:7;;;;;;;;;;;;;:31;;;;;;;;;;;3641:12;3623:4;3628:1;3623:7;;;;;;;;;;;;;:31;;;;;;;;;;;3665:10;3678:2;3665:15;;3691:13;3725:10;3707:15;:28;3691:44;;3768:23;3794:6;:31;;;3826:8;3836:12;3850:4;3856:2;3860:8;3794:75;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3768:101;;3970:9;3963:16;;;;;;;;;;;2808:1179;;;;:::o;2561:76::-;2595:42;2561:76;:::o;24:644:31:-;;156:80;171:64;228:6;171:64;:::i;:::-;156:80;:::i;:::-;147:89;;256:5;284:6;277:5;270:21;310:4;303:5;299:16;292:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:2;;;402:1;399;392:12;350:2;430:1;415:247;440:6;437:1;434:13;415:247;;;507:3;535:48;579:3;567:10;535:48;:::i;:::-;530:3;523:61;613:4;608:3;604:14;597:21;;647:4;642:3;638:14;631:21;;475:187;462:1;459;455:9;450:14;;415:247;;;419:14;137:531;;;;;;;:::o;674:139::-;;758:6;745:20;736:29;;774:33;801:5;774:33;:::i;:::-;726:87;;;;:::o;836:318::-;;967:3;960:4;952:6;948:17;944:27;934:2;;985:1;982;975:12;934:2;1018:6;1012:13;1043:105;1144:3;1136:6;1129:4;1121:6;1117:17;1043:105;:::i;:::-;1034:114;;924:230;;;;;:::o;1160:137::-;;1245:6;1239:13;1230:22;;1261:30;1285:5;1261:30;:::i;:::-;1220:77;;;;:::o;1303:139::-;;1387:6;1374:20;1365:29;;1403:33;1430:5;1403:33;:::i;:::-;1355:87;;;;:::o;1448:143::-;;1536:6;1530:13;1521:22;;1552:33;1579:5;1552:33;:::i;:::-;1511:80;;;;:::o;1597:420::-;;1741:2;1729:9;1720:7;1716:23;1712:32;1709:2;;;1757:1;1754;1747:12;1709:2;1821:1;1810:9;1806:17;1800:24;1851:18;1843:6;1840:30;1837:2;;;1883:1;1880;1873:12;1837:2;1911:89;1992:7;1983:6;1972:9;1968:22;1911:89;:::i;:::-;1901:99;;1771:239;1699:318;;;;:::o;2023:278::-;;2139:2;2127:9;2118:7;2114:23;2110:32;2107:2;;;2155:1;2152;2145:12;2107:2;2198:1;2223:61;2276:7;2267:6;2256:9;2252:22;2223:61;:::i;:::-;2213:71;;2169:125;2097:204;;;;:::o;2307:407::-;;;2432:2;2420:9;2411:7;2407:23;2403:32;2400:2;;;2448:1;2445;2438:12;2400:2;2491:1;2516:53;2561:7;2552:6;2541:9;2537:22;2516:53;:::i;:::-;2506:63;;2462:117;2618:2;2644:53;2689:7;2680:6;2669:9;2665:22;2644:53;:::i;:::-;2634:63;;2589:118;2390:324;;;;;:::o;2720:179::-;;2810:46;2852:3;2844:6;2810:46;:::i;:::-;2888:4;2883:3;2879:14;2865:28;;2800:99;;;;:::o;2905:179::-;;2995:46;3037:3;3029:6;2995:46;:::i;:::-;3073:4;3068:3;3064:14;3050:28;;2985:99;;;;:::o;3090:108::-;3167:24;3185:5;3167:24;:::i;:::-;3162:3;3155:37;3145:53;;:::o;3204:118::-;3291:24;3309:5;3291:24;:::i;:::-;3286:3;3279:37;3269:53;;:::o;3358:732::-;;3506:54;3554:5;3506:54;:::i;:::-;3576:86;3655:6;3650:3;3576:86;:::i;:::-;3569:93;;3686:56;3736:5;3686:56;:::i;:::-;3765:7;3796:1;3781:284;3806:6;3803:1;3800:13;3781:284;;;3882:6;3876:13;3909:63;3968:3;3953:13;3909:63;:::i;:::-;3902:70;;3995:60;4048:6;3995:60;:::i;:::-;3985:70;;3841:224;3828:1;3825;3821:9;3816:14;;3781:284;;;3785:14;4081:3;4074:10;;3482:608;;;;;;;:::o;4126:732::-;;4274:54;4322:5;4274:54;:::i;:::-;4344:86;4423:6;4418:3;4344:86;:::i;:::-;4337:93;;4454:56;4504:5;4454:56;:::i;:::-;4533:7;4564:1;4549:284;4574:6;4571:1;4568:13;4549:284;;;4650:6;4644:13;4677:63;4736:3;4721:13;4677:63;:::i;:::-;4670:70;;4763:60;4816:6;4763:60;:::i;:::-;4753:70;;4609:224;4596:1;4593;4589:9;4584:14;;4549:284;;;4553:14;4849:3;4842:10;;4250:608;;;;;;;:::o;4864:147::-;4959:45;4998:5;4959:45;:::i;:::-;4954:3;4947:58;4937:74;;:::o;5017:108::-;5094:24;5112:5;5094:24;:::i;:::-;5089:3;5082:37;5072:53;;:::o;5131:118::-;5218:24;5236:5;5218:24;:::i;:::-;5213:3;5206:37;5196:53;;:::o;5255:222::-;;5386:2;5375:9;5371:18;5363:26;;5399:71;5467:1;5456:9;5452:17;5443:6;5399:71;:::i;:::-;5353:124;;;;:::o;5483:348::-;;5650:2;5639:9;5635:18;5627:26;;5663:71;5731:1;5720:9;5716:17;5707:6;5663:71;:::i;:::-;5744:80;5820:2;5809:9;5805:18;5796:6;5744:80;:::i;:::-;5617:214;;;;;:::o;5837:332::-;;5996:2;5985:9;5981:18;5973:26;;6009:71;6077:1;6066:9;6062:17;6053:6;6009:71;:::i;:::-;6090:72;6158:2;6147:9;6143:18;6134:6;6090:72;:::i;:::-;5963:206;;;;;:::o;6175:373::-;;6356:2;6345:9;6341:18;6333:26;;6405:9;6399:4;6395:20;6391:1;6380:9;6376:17;6369:47;6433:108;6536:4;6527:6;6433:108;:::i;:::-;6425:116;;6323:225;;;;:::o;6554:815::-;;6847:3;6836:9;6832:19;6824:27;;6861:71;6929:1;6918:9;6914:17;6905:6;6861:71;:::i;:::-;6942:72;7010:2;6999:9;6995:18;6986:6;6942:72;:::i;:::-;7061:9;7055:4;7051:20;7046:2;7035:9;7031:18;7024:48;7089:108;7192:4;7183:6;7089:108;:::i;:::-;7081:116;;7207:72;7275:2;7264:9;7260:18;7251:6;7207:72;:::i;:::-;7289:73;7357:3;7346:9;7342:19;7333:6;7289:73;:::i;:::-;6814:555;;;;;;;;:::o;7375:278::-;;7441:2;7435:9;7425:19;;7483:4;7475:6;7471:17;7590:6;7578:10;7575:22;7554:18;7542:10;7539:34;7536:62;7533:2;;;7601:13;;:::i;:::-;7533:2;7636:10;7632:2;7625:22;7415:238;;;;:::o;7659:306::-;;7826:18;7818:6;7815:30;7812:2;;;7848:13;;:::i;:::-;7812:2;7893:4;7885:6;7881:17;7873:25;;7953:4;7947;7943:15;7935:23;;7741:224;;;:::o;7971:132::-;;8061:3;8053:11;;8091:4;8086:3;8082:14;8074:22;;8043:60;;;:::o;8109:132::-;;8199:3;8191:11;;8229:4;8224:3;8220:14;8212:22;;8181:60;;;:::o;8247:114::-;;8348:5;8342:12;8332:22;;8321:40;;;:::o;8367:114::-;;8468:5;8462:12;8452:22;;8441:40;;;:::o;8487:113::-;;8589:4;8584:3;8580:14;8572:22;;8562:38;;;:::o;8606:113::-;;8708:4;8703:3;8699:14;8691:22;;8681:38;;;:::o;8725:184::-;;8858:6;8853:3;8846:19;8898:4;8893:3;8889:14;8874:29;;8836:73;;;;:::o;8915:184::-;;9048:6;9043:3;9036:19;9088:4;9083:3;9079:14;9064:29;;9026:73;;;;:::o;9105:96::-;;9171:24;9189:5;9171:24;:::i;:::-;9160:35;;9150:51;;;:::o;9207:90::-;;9284:5;9277:13;9270:21;9259:32;;9249:48;;;:::o;9303:126::-;;9380:42;9373:5;9369:54;9358:65;;9348:81;;;:::o;9435:77::-;;9501:5;9490:16;;9480:32;;;:::o;9518:121::-;;9609:24;9627:5;9609:24;:::i;:::-;9596:37;;9586:53;;;:::o;9645:48::-;9678:9;9699:122;9772:24;9790:5;9772:24;:::i;:::-;9765:5;9762:35;9752:2;;9811:1;9808;9801:12;9752:2;9742:79;:::o;9827:116::-;9897:21;9912:5;9897:21;:::i;:::-;9890:5;9887:32;9877:2;;9933:1;9930;9923:12;9877:2;9867:76;:::o;9949:122::-;10022:24;10040:5;10022:24;:::i;:::-;10015:5;10012:35;10002:2;;10061:1;10058;10051:12;10002:2;9992:79;:::o",
  "source": "pragma solidity ^0.7.0;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport \"./Bep20.sol\";\r\n\r\n//TODO: move to HelperPancakeSwap_ROUTER.sol\r\ncontract HelperPancakeSwap_ROUTER {\r\n    // No implementation, just the function signature. This is just so Solidity can work out how to call it.\r\n    \r\n    /*\r\n    * @notice   Swaps an exact amount of input tokens for as many output tokens as possible, \r\n    *           along the route determined by the path. The first element of path is the input token, \r\n    *           the last is the output token, and any intermediate elements represent intermediate pairs\r\n    *           to trade through (if, for example, a direct pair does not exist).\r\n    *           ``msg.sender`` should have already given the router an allowance of at least amountIn on the input token.\r\n    * @param    amountIn    The amount of input tokens to send.\r\n    * @param    amountOutMin    The minimum amount of output tokens that must be received for the transaction not to revert.\r\n    * @param    path    An array of token addresses. ``path.length`` must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.\r\n    * @param    to      Recipient of the output tokens.\r\n    * @param    deadline    \tUnix timestamp after which the transaction will revert.\r\n    * @return    amounts    \tThe input token amount and all subsequent output token amounts.\r\n    */\r\n    function swapExactTokensForTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external returns (uint[] memory amounts) {}\r\n    \r\n\r\n    /*\r\n    * @notice   Same as \r\n    *           Succeeds for tokens that take a fee on transfer.* and the market's available liquidity.\r\n    *           ``msg.sender`` should have already given the router an allowance of at least amountIn on the input token.\r\n    * @param    redeemAmount The amount of underlying to be redeemed.\r\n    * @return   status 0 on success, otherwise an Error code\r\n    */\r\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external {}\r\n    \r\n}\r\n\r\n\r\n/*\r\n* @notice Integrates with Pancakeswap DEX\r\n*/\r\ncontract SmartExchange {\r\n    \r\n    address public constant wBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd; //underlying asset: BUSD\r\n    address public constant BUSD = 0x8301F2213c0eeD49a7E28Ae4c3e91722919B8B47; //underlying asset: BUSD\r\n    address public constant pROUTER = 0xD99D1c33F9fC3444f8101754aBC46c52416550D1; // Pancakeswap Router (BSC Testnet)\r\n    //address public constant pFACTORY = 0x6725F303b657a9451d8BA641348b6761A6CC7a17; // Pancakeswap factory (BSC Testnet)\r\n    \r\n   function swap(uint256 amount, address to) public returns (uint[] memory) {\r\n        \r\n        HelperPancakeSwap_ROUTER router = HelperPancakeSwap_ROUTER(pROUTER);     // get a handle for the exchange router\r\n        Bep20 busdContract = Bep20(BUSD);     // get a handle for the BUSD asset\r\n        Bep20 wbnbContract = Bep20(wBNB);     // get a handle for the wBNB asset\r\n        \r\n        wbnbContract.deposit{value: amount}(); // deposit native BNB\r\n        \r\n        wbnbContract.approve(address(router), 0); // security: reset allowance\r\n        wbnbContract.approve(address(router), amount); // allow pancakeswap router to access wBNB\r\n\r\n        uint256 amountIn = amount;\r\n        uint256 amountOutMin = 0;\r\n        address[] memory path = new address[](2);\r\n        path[0] = address(wbnbContract);\r\n        path[1] = address(busdContract);\r\n        address to = to;\r\n        uint deadline = block.timestamp + 10 minutes; // addition 10 mins\r\n\r\n        uint[] memory amountOut = router.swapExactTokensForTokens(amountIn, amountOutMin, path, to, deadline);\r\n        \r\n        // assert(amountOut > 0, \"swapping failed with returning 0\");\r\n\r\n        return amountOut;\r\n    }      \r\n}",
  "sourcePath": "C:/Users/USER/Desktop/BLOCKCHAIN/SmartBet/contracts/SmartExchange.sol",
  "ast": {
    "absolutePath": "/C/Users/USER/Desktop/BLOCKCHAIN/SmartBet/contracts/SmartExchange.sol",
    "exportedSymbols": {
      "Bep20": [
        18
      ],
      "HelperPancakeSwap_ROUTER": [
        1138
      ],
      "SmartExchange": [
        1268
      ]
    },
    "id": 1269,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1102,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "id": 1103,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:4"
      },
      {
        "absolutePath": "/C/Users/USER/Desktop/BLOCKCHAIN/SmartBet/contracts/Bep20.sol",
        "file": "./Bep20.sol",
        "id": 1104,
        "nodeType": "ImportDirective",
        "scope": 1269,
        "sourceUnit": 19,
        "src": "62:21:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1138,
        "linearizedBaseContracts": [
          1138
        ],
        "name": "HelperPancakeSwap_ROUTER",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1121,
              "nodeType": "Block",
              "src": "1618:2:4",
              "statements": []
            },
            "functionSelector": "38ed1739",
            "id": 1122,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactTokensForTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1106,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nodeType": "VariableDeclaration",
                  "scope": 1122,
                  "src": "1449:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1105,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1449:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1108,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nodeType": "VariableDeclaration",
                  "scope": 1122,
                  "src": "1473:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1107,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1473:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1111,
                  "mutability": "mutable",
                  "name": "path",
                  "nodeType": "VariableDeclaration",
                  "scope": 1122,
                  "src": "1501:23:4",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1109,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1501:7:4",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1110,
                    "nodeType": "ArrayTypeName",
                    "src": "1501:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1113,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1122,
                  "src": "1535:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1535:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1115,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nodeType": "VariableDeclaration",
                  "scope": 1122,
                  "src": "1556:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1114,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1556:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1438:138:4"
            },
            "returnParameters": {
              "id": 1120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1119,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nodeType": "VariableDeclaration",
                  "scope": 1122,
                  "src": "1595:21:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1117,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1595:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1118,
                    "nodeType": "ArrayTypeName",
                    "src": "1595:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1594:23:4"
            },
            "scope": 1138,
            "src": "1405:215:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1136,
              "nodeType": "Block",
              "src": "2247:2:4",
              "statements": []
            },
            "functionSelector": "5c11d795",
            "id": 1137,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1124,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nodeType": "VariableDeclaration",
                  "scope": 1137,
                  "src": "2110:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1123,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2110:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1126,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nodeType": "VariableDeclaration",
                  "scope": 1137,
                  "src": "2134:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1125,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2134:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1129,
                  "mutability": "mutable",
                  "name": "path",
                  "nodeType": "VariableDeclaration",
                  "scope": 1137,
                  "src": "2162:23:4",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1127,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2162:7:4",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1128,
                    "nodeType": "ArrayTypeName",
                    "src": "2162:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1131,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1137,
                  "src": "2196:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2196:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1133,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nodeType": "VariableDeclaration",
                  "scope": 1137,
                  "src": "2217:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1132,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2217:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2099:138:4"
            },
            "returnParameters": {
              "id": 1135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2247:0:4"
            },
            "scope": 1138,
            "src": "2037:212:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1269,
        "src": "133:2125:4"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1268,
        "linearizedBaseContracts": [
          1268
        ],
        "name": "SmartExchange",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "d02eb3f4",
            "id": 1141,
            "mutability": "constant",
            "name": "wBNB",
            "nodeType": "VariableDeclaration",
            "scope": 1268,
            "src": "2351:73:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1139,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2351:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307861653133643938396461433266306445624666343630614331313261383337433839424161376364",
              "id": 1140,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2382:42:4",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "484f4ea9",
            "id": 1144,
            "mutability": "constant",
            "name": "BUSD",
            "nodeType": "VariableDeclaration",
            "scope": 1268,
            "src": "2456:73:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1142,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2456:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307838333031463232313363306565443439613745323841653463336539313732323931394238423437",
              "id": 1143,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2487:42:4",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x8301F2213c0eeD49a7E28Ae4c3e91722919B8B47"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "e71efd95",
            "id": 1147,
            "mutability": "constant",
            "name": "pROUTER",
            "nodeType": "VariableDeclaration",
            "scope": 1268,
            "src": "2561:76:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1145,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2561:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307844393944316333334639664333343434663831303137353461424334366335323431363535304431",
              "id": 1146,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2595:42:4",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0xD99D1c33F9fC3444f8101754aBC46c52416550D1"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1266,
              "nodeType": "Block",
              "src": "2881:1106:4",
              "statements": [
                {
                  "assignments": [
                    1158
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1158,
                      "mutability": "mutable",
                      "name": "router",
                      "nodeType": "VariableDeclaration",
                      "scope": 1266,
                      "src": "2902:31:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_HelperPancakeSwap_ROUTER_$1138",
                        "typeString": "contract HelperPancakeSwap_ROUTER"
                      },
                      "typeName": {
                        "id": 1157,
                        "name": "HelperPancakeSwap_ROUTER",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1138,
                        "src": "2902:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HelperPancakeSwap_ROUTER_$1138",
                          "typeString": "contract HelperPancakeSwap_ROUTER"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1162,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1160,
                        "name": "pROUTER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1147,
                        "src": "2961:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1159,
                      "name": "HelperPancakeSwap_ROUTER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1138,
                      "src": "2936:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_HelperPancakeSwap_ROUTER_$1138_$",
                        "typeString": "type(contract HelperPancakeSwap_ROUTER)"
                      }
                    },
                    "id": 1161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2936:33:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_HelperPancakeSwap_ROUTER_$1138",
                      "typeString": "contract HelperPancakeSwap_ROUTER"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2902:67:4"
                },
                {
                  "assignments": [
                    1164
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1164,
                      "mutability": "mutable",
                      "name": "busdContract",
                      "nodeType": "VariableDeclaration",
                      "scope": 1266,
                      "src": "3024:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Bep20_$18",
                        "typeString": "contract Bep20"
                      },
                      "typeName": {
                        "id": 1163,
                        "name": "Bep20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 18,
                        "src": "3024:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Bep20_$18",
                          "typeString": "contract Bep20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1168,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1166,
                        "name": "BUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1144,
                        "src": "3051:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1165,
                      "name": "Bep20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "3045:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Bep20_$18_$",
                        "typeString": "type(contract Bep20)"
                      }
                    },
                    "id": 1167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3045:11:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Bep20_$18",
                      "typeString": "contract Bep20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3024:32:4"
                },
                {
                  "assignments": [
                    1170
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1170,
                      "mutability": "mutable",
                      "name": "wbnbContract",
                      "nodeType": "VariableDeclaration",
                      "scope": 1266,
                      "src": "3106:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Bep20_$18",
                        "typeString": "contract Bep20"
                      },
                      "typeName": {
                        "id": 1169,
                        "name": "Bep20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 18,
                        "src": "3106:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Bep20_$18",
                          "typeString": "contract Bep20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1174,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1172,
                        "name": "wBNB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1141,
                        "src": "3133:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1171,
                      "name": "Bep20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "3127:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Bep20_$18_$",
                        "typeString": "type(contract Bep20)"
                      }
                    },
                    "id": 1173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3127:11:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Bep20_$18",
                      "typeString": "contract Bep20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3106:32:4"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 1175,
                          "name": "wbnbContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1170,
                          "src": "3198:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Bep20_$18",
                            "typeString": "contract Bep20"
                          }
                        },
                        "id": 1177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17,
                        "src": "3198:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 1179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 1178,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1149,
                          "src": "3226:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "3198:35:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 1180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3198:37:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1181,
                  "nodeType": "ExpressionStatement",
                  "src": "3198:37:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1187,
                            "name": "router",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1158,
                            "src": "3307:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HelperPancakeSwap_ROUTER_$1138",
                              "typeString": "contract HelperPancakeSwap_ROUTER"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HelperPancakeSwap_ROUTER_$1138",
                              "typeString": "contract HelperPancakeSwap_ROUTER"
                            }
                          ],
                          "id": 1186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3299:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1185,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3299:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3299:15:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3316:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 1182,
                        "name": "wbnbContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1170,
                        "src": "3278:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Bep20_$18",
                          "typeString": "contract Bep20"
                        }
                      },
                      "id": 1184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "3278:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3278:40:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1191,
                  "nodeType": "ExpressionStatement",
                  "src": "3278:40:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1197,
                            "name": "router",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1158,
                            "src": "3387:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_HelperPancakeSwap_ROUTER_$1138",
                              "typeString": "contract HelperPancakeSwap_ROUTER"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_HelperPancakeSwap_ROUTER_$1138",
                              "typeString": "contract HelperPancakeSwap_ROUTER"
                            }
                          ],
                          "id": 1196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3379:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1195,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3379:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3379:15:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1199,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1149,
                        "src": "3396:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1192,
                        "name": "wbnbContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1170,
                        "src": "3358:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Bep20_$18",
                          "typeString": "contract Bep20"
                        }
                      },
                      "id": 1194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "3358:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3358:45:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
||||||| merged common ancestors
                  "id": 1273,
                  "nodeType": "ExpressionStatement",
                  "src": "1243:42:5"
                },
                {
                  "assignments": [
                    1278
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1278,
                      "mutability": "mutable",
                      "name": "path",
                      "nodeType": "VariableDeclaration",
                      "scope": 1356,
                      "src": "1339:21:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1276,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1339:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1277,
                        "nodeType": "ArrayTypeName",
                        "src": "1339:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
=======
                  "id": 1409,
                  "nodeType": "ExpressionStatement",
                  "src": "1243:42:6"
                },
                {
                  "assignments": [
                    1414
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1414,
                      "mutability": "mutable",
                      "name": "path",
                      "nodeType": "VariableDeclaration",
                      "scope": 1492,
                      "src": "1339:21:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1412,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1339:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1413,
                        "nodeType": "ArrayTypeName",
                        "src": "1339:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
>>>>>>> origin/ajibigad/token-swap
                    }
                  },
                  "id": 1201,
                  "nodeType": "ExpressionStatement",
                  "src": "3358:45:4"
                },
                {
                  "assignments": [
                    1203
                  ],
<<<<<<< HEAD
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1203,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nodeType": "VariableDeclaration",
                      "scope": 1266,
                      "src": "3459:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1202,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3459:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1205,
                  "initialValue": {
                    "id": 1204,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1149,
                    "src": "3478:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3459:25:4"
                },
                {
                  "assignments": [
                    1207
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1207,
                      "mutability": "mutable",
                      "name": "amountOutMin",
                      "nodeType": "VariableDeclaration",
                      "scope": 1266,
                      "src": "3495:20:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1206,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3495:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1209,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3518:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3495:24:4"
                },
                {
                  "assignments": [
                    1214
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1214,
                      "mutability": "mutable",
                      "name": "path",
                      "nodeType": "VariableDeclaration",
                      "scope": 1266,
                      "src": "3530:21:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1212,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3530:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1213,
                        "nodeType": "ArrayTypeName",
                        "src": "3530:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1220,
||||||| merged common ancestors
                  "id": 1284,
=======
                  "id": 1420,
>>>>>>> origin/ajibigad/token-swap
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
<<<<<<< HEAD
                        "id": 1218,
||||||| merged common ancestors
                        "id": 1282,
=======
                        "id": 1418,
>>>>>>> origin/ajibigad/token-swap
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "3568:1:4",
||||||| merged common ancestors
                        "src": "1377:1:5",
=======
                        "src": "1377:1:6",
>>>>>>> origin/ajibigad/token-swap
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1217,
||||||| merged common ancestors
                      "id": 1281,
=======
                      "id": 1417,
>>>>>>> origin/ajibigad/token-swap
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
<<<<<<< HEAD
                      "src": "3554:13:4",
||||||| merged common ancestors
                      "src": "1363:13:5",
=======
                      "src": "1363:13:6",
>>>>>>> origin/ajibigad/token-swap
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
<<<<<<< HEAD
                          "id": 1215,
||||||| merged common ancestors
                          "id": 1279,
=======
                          "id": 1415,
>>>>>>> origin/ajibigad/token-swap
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                          "src": "3558:7:4",
||||||| merged common ancestors
                          "src": "1367:7:5",
=======
                          "src": "1367:7:6",
>>>>>>> origin/ajibigad/token-swap
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "id": 1216,
||||||| merged common ancestors
                        "id": 1280,
=======
                        "id": 1416,
>>>>>>> origin/ajibigad/token-swap
                        "nodeType": "ArrayTypeName",
<<<<<<< HEAD
                        "src": "3558:9:4",
||||||| merged common ancestors
                        "src": "1367:9:5",
=======
                        "src": "1367:9:6",
>>>>>>> origin/ajibigad/token-swap
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
<<<<<<< HEAD
                    "id": 1219,
||||||| merged common ancestors
                    "id": 1283,
=======
                    "id": 1419,
>>>>>>> origin/ajibigad/token-swap
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3554:16:4",
||||||| merged common ancestors
                    "src": "1363:16:5",
=======
                    "src": "1363:16:6",
>>>>>>> origin/ajibigad/token-swap
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "3530:40:4"
||||||| merged common ancestors
                  "src": "1339:40:5"
=======
                  "src": "1339:40:6"
>>>>>>> origin/ajibigad/token-swap
                },
                {
                  "expression": {
<<<<<<< HEAD
                    "id": 1228,
||||||| merged common ancestors
                    "id": 1289,
=======
                    "id": 1425,
>>>>>>> origin/ajibigad/token-swap
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 1221,
||||||| merged common ancestors
                        "id": 1285,
=======
                        "id": 1421,
>>>>>>> origin/ajibigad/token-swap
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1214,
                        "src": "3581:4:4",
||||||| merged common ancestors
                        "referencedDeclaration": 1278,
                        "src": "1389:4:5",
=======
                        "referencedDeclaration": 1414,
                        "src": "1389:4:6",
>>>>>>> origin/ajibigad/token-swap
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
<<<<<<< HEAD
                      "id": 1223,
||||||| merged common ancestors
                      "id": 1287,
=======
                      "id": 1423,
>>>>>>> origin/ajibigad/token-swap
                      "indexExpression": {
                        "hexValue": "30",
<<<<<<< HEAD
                        "id": 1222,
||||||| merged common ancestors
                        "id": 1286,
=======
                        "id": 1422,
>>>>>>> origin/ajibigad/token-swap
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "3586:1:4",
||||||| merged common ancestors
                        "src": "1394:1:5",
=======
                        "src": "1394:1:6",
>>>>>>> origin/ajibigad/token-swap
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "3581:7:4",
||||||| merged common ancestors
                      "src": "1389:7:5",
=======
                      "src": "1389:7:6",
>>>>>>> origin/ajibigad/token-swap
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "arguments": [
                        {
                          "id": 1226,
                          "name": "wbnbContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1170,
                          "src": "3599:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Bep20_$18",
                            "typeString": "contract Bep20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Bep20_$18",
                            "typeString": "contract Bep20"
                          }
                        ],
                        "id": 1225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3591:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1224,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3591:7:4",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3591:21:4",
                      "tryCall": false,
||||||| merged common ancestors
                      "id": 1288,
                      "name": "wBNB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1207,
                      "src": "1399:4:5",
=======
                      "id": 1424,
                      "name": "wBNB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1343,
                      "src": "1399:4:6",
>>>>>>> origin/ajibigad/token-swap
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
<<<<<<< HEAD
                    "src": "3581:31:4",
||||||| merged common ancestors
                    "src": "1389:14:5",
=======
                    "src": "1389:14:6",
>>>>>>> origin/ajibigad/token-swap
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "id": 1229,
||||||| merged common ancestors
                  "id": 1290,
=======
                  "id": 1426,
>>>>>>> origin/ajibigad/token-swap
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "3581:31:4"
||||||| merged common ancestors
                  "src": "1389:14:5"
=======
                  "src": "1389:14:6"
>>>>>>> origin/ajibigad/token-swap
                },
                {
                  "expression": {
<<<<<<< HEAD
                    "id": 1237,
||||||| merged common ancestors
                    "id": 1295,
=======
                    "id": 1431,
>>>>>>> origin/ajibigad/token-swap
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 1230,
||||||| merged common ancestors
                        "id": 1291,
=======
                        "id": 1427,
>>>>>>> origin/ajibigad/token-swap
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1214,
                        "src": "3623:4:4",
||||||| merged common ancestors
                        "referencedDeclaration": 1278,
                        "src": "1413:4:5",
=======
                        "referencedDeclaration": 1414,
                        "src": "1413:4:6",
>>>>>>> origin/ajibigad/token-swap
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
<<<<<<< HEAD
                      "id": 1232,
||||||| merged common ancestors
                      "id": 1293,
=======
                      "id": 1429,
>>>>>>> origin/ajibigad/token-swap
                      "indexExpression": {
                        "hexValue": "31",
<<<<<<< HEAD
                        "id": 1231,
||||||| merged common ancestors
                        "id": 1292,
=======
                        "id": 1428,
>>>>>>> origin/ajibigad/token-swap
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "3628:1:4",
||||||| merged common ancestors
                        "src": "1418:1:5",
=======
                        "src": "1418:1:6",
>>>>>>> origin/ajibigad/token-swap
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "3623:7:4",
||||||| merged common ancestors
                      "src": "1413:7:5",
=======
                      "src": "1413:7:6",
>>>>>>> origin/ajibigad/token-swap
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "arguments": [
                        {
                          "id": 1235,
                          "name": "busdContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1164,
                          "src": "3641:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Bep20_$18",
                            "typeString": "contract Bep20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Bep20_$18",
                            "typeString": "contract Bep20"
                          }
                        ],
                        "id": 1234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3633:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1233,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3633:7:4",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3633:21:4",
                      "tryCall": false,
||||||| merged common ancestors
                      "id": 1294,
                      "name": "BUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1210,
                      "src": "1423:4:5",
=======
                      "id": 1430,
                      "name": "BUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1346,
                      "src": "1423:4:6",
>>>>>>> origin/ajibigad/token-swap
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
<<<<<<< HEAD
                    "src": "3623:31:4",
||||||| merged common ancestors
                    "src": "1413:14:5",
=======
                    "src": "1413:14:6",
>>>>>>> origin/ajibigad/token-swap
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "id": 1238,
||||||| merged common ancestors
                  "id": 1296,
=======
                  "id": 1432,
>>>>>>> origin/ajibigad/token-swap
                  "nodeType": "ExpressionStatement",
<<<<<<< HEAD
                  "src": "3623:31:4"
||||||| merged common ancestors
                  "src": "1413:14:5"
=======
                  "src": "1413:14:6"
>>>>>>> origin/ajibigad/token-swap
                },
                {
                  "assignments": [
<<<<<<< HEAD
                    1240
||||||| merged common ancestors
                    1298
=======
                    1434
>>>>>>> origin/ajibigad/token-swap
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 1240,
                      "mutability": "mutable",
                      "name": "to",
                      "nodeType": "VariableDeclaration",
                      "scope": 1266,
                      "src": "3665:10:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1239,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3665:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1242,
                  "initialValue": {
                    "id": 1241,
                    "name": "to",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1151,
                    "src": "3678:2:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3665:15:4"
                },
                {
                  "assignments": [
                    1244
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1244,
||||||| merged common ancestors
                      "id": 1298,
=======
                      "id": 1434,
>>>>>>> origin/ajibigad/token-swap
                      "mutability": "mutable",
                      "name": "deadline",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 1266,
                      "src": "3691:13:4",
||||||| merged common ancestors
                      "scope": 1356,
                      "src": "1437:13:5",
=======
                      "scope": 1492,
                      "src": "1437:13:6",
>>>>>>> origin/ajibigad/token-swap
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 1243,
||||||| merged common ancestors
                        "id": 1297,
=======
                        "id": 1433,
>>>>>>> origin/ajibigad/token-swap
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "3691:4:4",
||||||| merged common ancestors
                        "src": "1437:4:5",
=======
                        "src": "1437:4:6",
>>>>>>> origin/ajibigad/token-swap
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 1249,
||||||| merged common ancestors
                  "id": 1303,
=======
                  "id": 1439,
>>>>>>> origin/ajibigad/token-swap
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
<<<<<<< HEAD
                    "id": 1248,
||||||| merged common ancestors
                    "id": 1302,
=======
                    "id": 1438,
>>>>>>> origin/ajibigad/token-swap
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
<<<<<<< HEAD
                        "id": 1245,
||||||| merged common ancestors
                        "id": 1299,
=======
                        "id": 1435,
>>>>>>> origin/ajibigad/token-swap
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
<<<<<<< HEAD
                        "src": "3707:5:4",
||||||| merged common ancestors
                        "src": "1453:5:5",
=======
                        "src": "1453:5:6",
>>>>>>> origin/ajibigad/token-swap
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
<<<<<<< HEAD
                      "id": 1246,
||||||| merged common ancestors
                      "id": 1300,
=======
                      "id": 1436,
>>>>>>> origin/ajibigad/token-swap
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "src": "3707:15:4",
||||||| merged common ancestors
                      "src": "1453:15:5",
=======
                      "src": "1453:15:6",
>>>>>>> origin/ajibigad/token-swap
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "3130",
<<<<<<< HEAD
                      "id": 1247,
||||||| merged common ancestors
                      "id": 1301,
=======
                      "id": 1437,
>>>>>>> origin/ajibigad/token-swap
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "3725:10:4",
||||||| merged common ancestors
                      "src": "1471:10:5",
=======
                      "src": "1471:10:6",
>>>>>>> origin/ajibigad/token-swap
                      "subdenomination": "minutes",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_600_by_1",
                        "typeString": "int_const 600"
                      },
                      "value": "10"
                    },
<<<<<<< HEAD
                    "src": "3707:28:4",
||||||| merged common ancestors
                    "src": "1453:28:5",
=======
                    "src": "1453:28:6",
>>>>>>> origin/ajibigad/token-swap
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
                  "src": "3691:44:4"
||||||| merged common ancestors
                  "src": "1437:44:5"
=======
                  "src": "1437:44:6"
>>>>>>> origin/ajibigad/token-swap
                },
                {
                  "assignments": [
<<<<<<< HEAD
                    1254
||||||| merged common ancestors
                    1308
=======
                    1444
>>>>>>> origin/ajibigad/token-swap
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 1254,
||||||| merged common ancestors
                      "id": 1308,
=======
                      "id": 1444,
>>>>>>> origin/ajibigad/token-swap
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 1266,
                      "src": "3768:23:4",
||||||| merged common ancestors
                      "scope": 1356,
                      "src": "1512:23:5",
=======
                      "scope": 1492,
                      "src": "1512:23:6",
>>>>>>> origin/ajibigad/token-swap
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
<<<<<<< HEAD
                          "id": 1252,
||||||| merged common ancestors
                          "id": 1306,
=======
                          "id": 1442,
>>>>>>> origin/ajibigad/token-swap
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                          "src": "3768:4:4",
||||||| merged common ancestors
                          "src": "1512:4:5",
=======
                          "src": "1512:4:6",
>>>>>>> origin/ajibigad/token-swap
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "id": 1253,
||||||| merged common ancestors
                        "id": 1307,
=======
                        "id": 1443,
>>>>>>> origin/ajibigad/token-swap
                        "nodeType": "ArrayTypeName",
<<<<<<< HEAD
                        "src": "3768:6:4",
||||||| merged common ancestors
                        "src": "1512:6:5",
=======
                        "src": "1512:6:6",
>>>>>>> origin/ajibigad/token-swap
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 1263,
||||||| merged common ancestors
                  "id": 1317,
=======
                  "id": 1453,
>>>>>>> origin/ajibigad/token-swap
                  "initialValue": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 1257,
                        "name": "amountIn",
||||||| merged common ancestors
                        "id": 1311,
                        "name": "amount",
=======
                        "id": 1447,
                        "name": "amount",
>>>>>>> origin/ajibigad/token-swap
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1203,
                        "src": "3826:8:4",
||||||| merged common ancestors
                        "referencedDeclaration": 1249,
                        "src": "1570:6:5",
=======
                        "referencedDeclaration": 1385,
                        "src": "1570:6:6",
>>>>>>> origin/ajibigad/token-swap
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1258,
                        "name": "amountOutMin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1207,
                        "src": "3836:12:4",
||||||| merged common ancestors
                        "hexValue": "30",
                        "id": 1312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1578:1:5",
=======
                        "hexValue": "30",
                        "id": 1448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1578:1:6",
>>>>>>> origin/ajibigad/token-swap
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1259,
||||||| merged common ancestors
                        "id": 1313,
=======
                        "id": 1449,
>>>>>>> origin/ajibigad/token-swap
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1214,
                        "src": "3850:4:4",
||||||| merged common ancestors
                        "referencedDeclaration": 1278,
                        "src": "1581:4:5",
=======
                        "referencedDeclaration": 1414,
                        "src": "1581:4:6",
>>>>>>> origin/ajibigad/token-swap
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1260,
||||||| merged common ancestors
                        "id": 1314,
=======
                        "id": 1450,
>>>>>>> origin/ajibigad/token-swap
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1240,
                        "src": "3856:2:4",
||||||| merged common ancestors
                        "referencedDeclaration": 1251,
                        "src": "1587:2:5",
=======
                        "referencedDeclaration": 1387,
                        "src": "1587:2:6",
>>>>>>> origin/ajibigad/token-swap
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 1261,
||||||| merged common ancestors
                        "id": 1315,
=======
                        "id": 1451,
>>>>>>> origin/ajibigad/token-swap
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1244,
                        "src": "3860:8:4",
||||||| merged common ancestors
                        "referencedDeclaration": 1298,
                        "src": "1591:8:5",
=======
                        "referencedDeclaration": 1434,
                        "src": "1591:8:6",
>>>>>>> origin/ajibigad/token-swap
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
<<<<<<< HEAD
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
||||||| merged common ancestors
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1309,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1219,
                        "src": "1538:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HelperPancakeSwapROUTER_$68",
                          "typeString": "contract HelperPancakeSwapROUTER"
                        }
                      },
                      "id": 1310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swapExactTokensForTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52,
                      "src": "1538:31:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 1316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1538:62:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1512:88:5"
                },
                {
                  "assignments": [
                    1319
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1319,
                      "mutability": "mutable",
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 1356,
                      "src": "1619:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1318,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1619:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1327,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1324,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1665:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SmartExchange_$1362",
                              "typeString": "contract SmartExchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SmartExchange_$1362",
                              "typeString": "contract SmartExchange"
                            }
                          ],
                          "id": 1323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1657:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1322,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1657:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1657:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
=======
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1445,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1355,
                        "src": "1538:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HelperPancakeSwapROUTER_$101",
                          "typeString": "contract HelperPancakeSwapROUTER"
                        }
                      },
                      "id": 1446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swapExactTokensForTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 85,
                      "src": "1538:31:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 1452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1538:62:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1512:88:6"
                },
                {
                  "assignments": [
                    1455
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1455,
                      "mutability": "mutable",
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 1492,
                      "src": "1619:15:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1454,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1619:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1463,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1460,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1665:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SmartExchange_$1498",
                              "typeString": "contract SmartExchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SmartExchange_$1498",
                              "typeString": "contract SmartExchange"
                            }
                          ],
                          "id": 1459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1657:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1458,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1657:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1657:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
>>>>>>> origin/ajibigad/token-swap
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 1255,
                        "name": "router",
||||||| merged common ancestors
                        "id": 1320,
                        "name": "wBNBToken",
=======
                        "id": 1456,
                        "name": "wBNBToken",
>>>>>>> origin/ajibigad/token-swap
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1158,
                        "src": "3794:6:4",
||||||| merged common ancestors
                        "referencedDeclaration": 1215,
                        "src": "1637:9:5",
=======
                        "referencedDeclaration": 1351,
                        "src": "1637:9:6",
>>>>>>> origin/ajibigad/token-swap
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HelperPancakeSwap_ROUTER_$1138",
                          "typeString": "contract HelperPancakeSwap_ROUTER"
                        }
                      },
<<<<<<< HEAD
                      "id": 1256,
||||||| merged common ancestors
                      "id": 1321,
=======
                      "id": 1457,
>>>>>>> origin/ajibigad/token-swap
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swapExactTokensForTokens",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 1122,
                      "src": "3794:31:4",
||||||| merged common ancestors
                      "referencedDeclaration": 6,
                      "src": "1637:19:5",
=======
                      "referencedDeclaration": 6,
                      "src": "1637:19:6",
>>>>>>> origin/ajibigad/token-swap
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1262,
||||||| merged common ancestors
                    "id": 1326,
=======
                    "id": 1462,
>>>>>>> origin/ajibigad/token-swap
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3794:75:4",
||||||| merged common ancestors
                    "src": "1637:34:5",
=======
                    "src": "1637:34:6",
>>>>>>> origin/ajibigad/token-swap
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3768:101:4"
                },
                {
                  "expression": {
                    "id": 1264,
                    "name": "amountOut",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1254,
                    "src": "3970:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 1156,
                  "id": 1265,
                  "nodeType": "Return",
                  "src": "3963:16:4"
                }
              ]
            },
            "functionSelector": "d3986f08",
            "id": 1267,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1149,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1267,
                  "src": "2822:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1148,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2822:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "visibility": "internal"
||||||| merged common ancestors
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1619:52:5"
=======
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1619:52:6"
>>>>>>> origin/ajibigad/token-swap
                },
                {
<<<<<<< HEAD
                  "constant": false,
                  "id": 1151,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1267,
                  "src": "2838:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1150,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2838:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2821:28:4"
            },
            "returnParameters": {
              "id": 1156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1155,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1267,
                  "src": "2866:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1153,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2866:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1154,
                    "nodeType": "ArrayTypeName",
                    "src": "2866:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2865:15:4"
            },
            "scope": 1268,
            "src": "2808:1179:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1269,
        "src": "2315:1681:4"
      }
    ],
    "src": "0:3996:4"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/C/Users/USER/Desktop/BLOCKCHAIN/SmartBet/contracts/SmartExchange.sol",
      "exportedSymbols": {
        "Bep20": [
          18
        ],
        "HelperPancakeSwap_ROUTER": [
          1138
        ],
        "SmartExchange": [
          1268
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".0"
          ]
        },
        "id": 1102,
        "name": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 1103,
        "name": "PragmaDirective",
        "src": "25:33:4"
      },
      {
        "attributes": {
          "SourceUnit": 19,
          "absolutePath": "/C/Users/USER/Desktop/BLOCKCHAIN/SmartBet/contracts/Bep20.sol",
          "file": "./Bep20.sol",
          "scope": 1269,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1104,
        "name": "ImportDirective",
        "src": "62:21:4"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1138
          ],
          "name": "HelperPancakeSwap_ROUTER",
          "scope": 1269
        },
        "children": [
          {
            "attributes": {
              "functionSelector": "38ed1739",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "swapExactTokensForTokens",
              "scope": 1138,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "scope": 1122,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
||||||| merged common ancestors
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1331,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1708:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SmartExchange_$1362",
                              "typeString": "contract SmartExchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SmartExchange_$1362",
                              "typeString": "contract SmartExchange"
                            }
                          ],
                          "id": 1330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1700:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1329,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1700:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1700:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
=======
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1467,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1708:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SmartExchange_$1498",
                              "typeString": "contract SmartExchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SmartExchange_$1498",
                              "typeString": "contract SmartExchange"
                            }
                          ],
                          "id": 1466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1700:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1465,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1700:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1700:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
>>>>>>> origin/ajibigad/token-swap
                      {
<<<<<<< HEAD
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 1105,
                        "name": "ElementaryTypeName",
                        "src": "1449:4:4"
||||||| merged common ancestors
                        "id": 1333,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1319,
                        "src": "1715:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
=======
                        "id": 1469,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1455,
                        "src": "1715:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "id": 1106,
                    "name": "VariableDeclaration",
                    "src": "1449:13:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amountOutMin",
                      "scope": 1122,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
<<<<<<< HEAD
                        "id": 1107,
                        "name": "ElementaryTypeName",
                        "src": "1473:4:4"
||||||| merged common ancestors
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1328,
                      "name": "BalanceEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1225,
                      "src": "1687:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
=======
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1464,
                      "name": "BalanceEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1361,
                      "src": "1687:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
>>>>>>> origin/ajibigad/token-swap
                      }
<<<<<<< HEAD
                    ],
                    "id": 1108,
                    "name": "VariableDeclaration",
                    "src": "1473:17:4"
||||||| merged common ancestors
                    },
                    "id": 1334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1687:36:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
=======
                    },
                    "id": 1470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1687:36:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "path",
                      "scope": 1122,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "address[]",
                      "visibility": "internal"
||||||| merged common ancestors
                  "id": 1335,
                  "nodeType": "EmitStatement",
                  "src": "1682:41:5"
                },
                {
                  "expression": {
                    "id": 1344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1336,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1319,
                      "src": "1742:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
=======
                  "id": 1471,
                  "nodeType": "EmitStatement",
                  "src": "1682:41:6"
                },
                {
                  "expression": {
                    "id": 1480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1472,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1455,
                      "src": "1742:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
>>>>>>> origin/ajibigad/token-swap
                    },
<<<<<<< HEAD
                    "children": [
                      {
                        "attributes": {
                          "type": "address[]"
                        },
                        "children": [
||||||| merged common ancestors
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1341,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "1780:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SmartExchange_$1362",
                                "typeString": "contract SmartExchange"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SmartExchange_$1362",
                                "typeString": "contract SmartExchange"
                              }
                            ],
                            "id": 1340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1772:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1339,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1772:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1772:13:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
=======
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1477,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "1780:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SmartExchange_$1498",
                                "typeString": "contract SmartExchange"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SmartExchange_$1498",
                                "typeString": "contract SmartExchange"
                              }
                            ],
                            "id": 1476,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1772:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1475,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1772:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1772:13:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
>>>>>>> origin/ajibigad/token-swap
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 1109,
                            "name": "ElementaryTypeName",
                            "src": "1501:7:4"
                          }
                        ],
<<<<<<< HEAD
                        "id": 1110,
                        "name": "ArrayTypeName",
                        "src": "1501:9:4"
                      }
                    ],
                    "id": 1111,
                    "name": "VariableDeclaration",
                    "src": "1501:23:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "to",
                      "scope": 1122,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
||||||| merged common ancestors
                        "expression": {
                          "id": 1337,
                          "name": "bUSDToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1217,
                          "src": "1752:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BEP20_$32",
                            "typeString": "contract BEP20"
                          }
=======
                        "expression": {
                          "id": 1473,
                          "name": "bUSDToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1353,
                          "src": "1752:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BEP20_$32",
                            "typeString": "contract BEP20"
                          }
>>>>>>> origin/ajibigad/token-swap
                        },
<<<<<<< HEAD
                        "id": 1112,
                        "name": "ElementaryTypeName",
                        "src": "1535:7:4"
                      }
                    ],
                    "id": 1113,
                    "name": "VariableDeclaration",
                    "src": "1535:10:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "deadline",
                      "scope": 1122,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 1114,
                        "name": "ElementaryTypeName",
                        "src": "1556:4:4"
||||||| merged common ancestors
                        "id": 1338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6,
                        "src": "1752:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 1343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1752:34:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
=======
                        "id": 1474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6,
                        "src": "1752:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 1479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1752:34:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "id": 1115,
                    "name": "VariableDeclaration",
                    "src": "1556:13:4"
                  }
                ],
                "id": 1116,
                "name": "ParameterList",
                "src": "1438:138:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amounts",
                      "scope": 1122,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[]",
                      "visibility": "internal"
                    },
<<<<<<< HEAD
                    "children": [
||||||| merged common ancestors
                    "src": "1742:44:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1345,
                  "nodeType": "ExpressionStatement",
                  "src": "1742:44:5"
                },
                {
                  "eventCall": {
                    "arguments": [
=======
                    "src": "1742:44:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1481,
                  "nodeType": "ExpressionStatement",
                  "src": "1742:44:6"
                },
                {
                  "eventCall": {
                    "arguments": [
>>>>>>> origin/ajibigad/token-swap
                      {
                        "attributes": {
                          "type": "uint256[]"
                        },
                        "children": [
                          {
<<<<<<< HEAD
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 1117,
                            "name": "ElementaryTypeName",
                            "src": "1595:4:4"
||||||| merged common ancestors
                            "id": 1349,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1823:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SmartExchange_$1362",
                              "typeString": "contract SmartExchange"
                            }
=======
                            "id": 1485,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1823:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SmartExchange_$1498",
                              "typeString": "contract SmartExchange"
                            }
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
<<<<<<< HEAD
                        "id": 1118,
                        "name": "ArrayTypeName",
                        "src": "1595:6:4"
                      }
                    ],
                    "id": 1119,
                    "name": "VariableDeclaration",
                    "src": "1595:21:4"
                  }
                ],
                "id": 1120,
                "name": "ParameterList",
                "src": "1594:23:4"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 1121,
                "name": "Block",
                "src": "1618:2:4"
              }
            ],
            "id": 1122,
            "name": "FunctionDefinition",
            "src": "1405:215:4"
          },
          {
            "attributes": {
              "functionSelector": "5c11d795",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
              "scope": 1138,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "scope": 1137,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
||||||| merged common ancestors
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SmartExchange_$1362",
                              "typeString": "contract SmartExchange"
                            }
                          ],
                          "id": 1348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1815:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1347,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1815:7:5",
                            "typeDescriptions": {}
                          }
=======
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SmartExchange_$1498",
                              "typeString": "contract SmartExchange"
                            }
                          ],
                          "id": 1484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1815:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1483,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1815:7:6",
                            "typeDescriptions": {}
                          }
>>>>>>> origin/ajibigad/token-swap
                        },
<<<<<<< HEAD
                        "id": 1123,
                        "name": "ElementaryTypeName",
                        "src": "2110:4:4"
                      }
                    ],
                    "id": 1124,
                    "name": "VariableDeclaration",
                    "src": "2110:13:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amountOutMin",
                      "scope": 1137,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 1125,
                        "name": "ElementaryTypeName",
                        "src": "2134:4:4"
                      }
                    ],
                    "id": 1126,
                    "name": "VariableDeclaration",
                    "src": "2134:17:4"
                  },
                  {
                    "attributes": {
||||||| merged common ancestors
            "body": {
              "id": 1057,
              "nodeType": "Block",
              "src": "2593:423:3",
              "statements": [
                {
                  "assignments": [
                    1052
                  ],
                  "declarations": [
                    {
=======
            "attributes": {
              "anonymous": false,
              "name": "BalanceEvent"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
>>>>>>> origin/ajibigad/token-swap
                      "constant": false,
<<<<<<< HEAD
||||||| merged common ancestors
                      "id": 1052,
=======
                      "indexed": false,
>>>>>>> origin/ajibigad/token-swap
                      "mutability": "mutable",
<<<<<<< HEAD
                      "name": "path",
                      "scope": 1137,
||||||| merged common ancestors
                      "name": "underlying",
                      "nodeType": "VariableDeclaration",
                      "scope": 1057,
                      "src": "2612:35:3",
=======
                      "name": "owner",
                      "scope": 1225,
>>>>>>> origin/ajibigad/token-swap
                      "stateVariable": false,
<<<<<<< HEAD
                      "storageLocation": "calldata",
                      "type": "address[]",
||||||| merged common ancestors
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_HelperPancakeSwap_ROUTER_$1038",
                        "typeString": "contract HelperPancakeSwap_ROUTER"
                      },
                      "typeName": {
                        "id": 1051,
                        "name": "HelperPancakeSwap_ROUTER",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1038,
                        "src": "2612:24:3",
||||||| merged common ancestors
                        "id": 1350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1815:13:5",
                        "tryCall": false,
=======
                        "id": 1486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1815:13:6",
                        "tryCall": false,
>>>>>>> origin/ajibigad/token-swap
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HelperPancakeSwap_ROUTER_$1038",
                          "typeString": "contract HelperPancakeSwap_ROUTER"
                        }
                      },
=======
                      "storageLocation": "default",
                      "type": "address",
>>>>>>> origin/ajibigad/token-swap
                      "visibility": "internal"
                    },
                    "children": [
                      {
<<<<<<< HEAD
<<<<<<< HEAD
                        "attributes": {
                          "type": "address[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 1127,
                            "name": "ElementaryTypeName",
                            "src": "2162:7:4"
                          }
                        ],
                        "id": 1128,
                        "name": "ArrayTypeName",
                        "src": "2162:9:4"
||||||| merged common ancestors
                        "id": 1054,
                        "name": "pFACTORY",
||||||| merged common ancestors
                        "id": 1351,
                        "name": "balance",
=======
                        "id": 1487,
                        "name": "balance",
>>>>>>> origin/ajibigad/token-swap
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 1046,
                        "src": "2675:8:3",
||||||| merged common ancestors
                        "referencedDeclaration": 1319,
                        "src": "1830:7:5",
=======
                        "referencedDeclaration": 1455,
                        "src": "1830:7:6",
>>>>>>> origin/ajibigad/token-swap
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
=======
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1220,
                        "name": "ElementaryTypeName",
                        "src": "653:7:5"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
<<<<<<< HEAD
                    "id": 1129,
                    "name": "VariableDeclaration",
                    "src": "2162:23:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "to",
                      "scope": 1137,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1130,
                        "name": "ElementaryTypeName",
                        "src": "2196:7:4"
                      }
                    ],
                    "id": 1131,
                    "name": "VariableDeclaration",
                    "src": "2196:10:4"
||||||| merged common ancestors
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
<<<<<<< HEAD
                      "id": 1053,
                      "name": "HelperPancakeSwap_ROUTER",
||||||| merged common ancestors
                      "id": 1346,
                      "name": "BalanceEvent",
=======
                      "id": 1482,
                      "name": "BalanceEvent",
>>>>>>> origin/ajibigad/token-swap
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
<<<<<<< HEAD
                      "referencedDeclaration": 1038,
                      "src": "2650:24:3",
||||||| merged common ancestors
                      "referencedDeclaration": 1225,
                      "src": "1802:12:5",
=======
                      "referencedDeclaration": 1361,
                      "src": "1802:12:6",
>>>>>>> origin/ajibigad/token-swap
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_HelperPancakeSwap_ROUTER_$1038_$",
                        "typeString": "type(contract HelperPancakeSwap_ROUTER)"
                      }
                    },
<<<<<<< HEAD
                    "id": 1055,
||||||| merged common ancestors
                    "id": 1352,
=======
                    "id": 1488,
>>>>>>> origin/ajibigad/token-swap
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2650:34:3",
||||||| merged common ancestors
                    "src": "1802:36:5",
=======
                    "src": "1802:36:6",
>>>>>>> origin/ajibigad/token-swap
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_HelperPancakeSwap_ROUTER_$1038",
                      "typeString": "contract HelperPancakeSwap_ROUTER"
                    }
=======
                    "id": 1221,
                    "name": "VariableDeclaration",
                    "src": "653:13:5"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
<<<<<<< HEAD
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "deadline",
                      "scope": 1137,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 1132,
                        "name": "ElementaryTypeName",
                        "src": "2217:4:4"
                      }
                    ],
                    "id": 1133,
                    "name": "VariableDeclaration",
                    "src": "2217:13:4"
                  }
                ],
                "id": 1134,
                "name": "ParameterList",
                "src": "2099:138:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
||||||| merged common ancestors
                  "id": 1353,
                  "nodeType": "EmitStatement",
                  "src": "1797:41:5"
=======
                  "id": 1489,
                  "nodeType": "EmitStatement",
                  "src": "1797:41:6"
>>>>>>> origin/ajibigad/token-swap
                },
<<<<<<< HEAD
                "children": [],
                "id": 1135,
                "name": "ParameterList",
                "src": "2247:0:4"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
||||||| merged common ancestors
                {
                  "expression": {
                    "id": 1354,
                    "name": "amountOut",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1308,
                    "src": "1856:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 1256,
                  "id": 1355,
                  "nodeType": "Return",
                  "src": "1849:16:5"
                }
              ]
            },
            "functionSelector": "d3986f08",
            "id": 1357,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1249,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1357,
                  "src": "1108:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1248,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1108:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
=======
                {
                  "expression": {
                    "id": 1490,
                    "name": "amountOut",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1444,
                    "src": "1856:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 1392,
                  "id": 1491,
                  "nodeType": "Return",
                  "src": "1849:16:6"
                }
              ]
            },
            "functionSelector": "d3986f08",
            "id": 1493,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1385,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1493,
                  "src": "1108:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1384,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1108:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
>>>>>>> origin/ajibigad/token-swap
                },
<<<<<<< HEAD
                "children": [],
                "id": 1136,
                "name": "Block",
                "src": "2247:2:4"
              }
            ],
            "id": 1137,
            "name": "FunctionDefinition",
            "src": "2037:212:4"
          }
||||||| merged common ancestors
                {
                  "constant": false,
                  "id": 1251,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1357,
                  "src": "1124:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1250,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1124:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1107:28:5"
            },
            "returnParameters": {
              "id": 1256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1255,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1357,
                  "src": "1152:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1253,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1152:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1254,
                    "nodeType": "ArrayTypeName",
                    "src": "1152:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1151:15:5"
            },
            "scope": 1362,
            "src": "1094:778:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1360,
              "nodeType": "Block",
              "src": "1907:2:5",
              "statements": []
            },
            "id": 1361,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1358,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1887:2:5"
            },
            "returnParameters": {
              "id": 1359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1907:0:5"
            },
            "scope": 1362,
            "src": "1880:29:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1363,
        "src": "170:1745:5"
      }
    ],
    "src": "0:1915:5"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/SmartExchange.sol",
      "exportedSymbols": {
        "BEP20": [
          32
        ],
        "HelperPancakeSwapROUTER": [
          68
=======
                {
                  "constant": false,
                  "id": 1387,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1493,
                  "src": "1124:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1386,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1124:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1107:28:6"
            },
            "returnParameters": {
              "id": 1392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1391,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1493,
                  "src": "1152:13:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1389,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1152:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1390,
                    "nodeType": "ArrayTypeName",
                    "src": "1152:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1151:15:6"
            },
            "scope": 1498,
            "src": "1094:778:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1496,
              "nodeType": "Block",
              "src": "1907:2:6",
              "statements": []
            },
            "id": 1497,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1887:2:6"
            },
            "returnParameters": {
              "id": 1495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1907:0:6"
            },
            "scope": 1498,
            "src": "1880:29:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1499,
        "src": "170:1745:6"
      }
    ],
    "src": "0:1915:6"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/SmartExchange.sol",
      "exportedSymbols": {
        "BEP20": [
          32
        ],
        "HelperPancakeSwapROUTER": [
          101
>>>>>>> origin/ajibigad/token-swap
        ],
<<<<<<< HEAD
        "id": 1138,
        "name": "ContractDefinition",
        "src": "133:2125:4"
||||||| merged common ancestors
        "SmartExchange": [
          1362
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".0"
          ]
        },
        "id": 1201,
        "name": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 1202,
        "name": "PragmaDirective",
        "src": "24:33:5"
      },
      {
        "attributes": {
          "SourceUnit": 33,
          "absolutePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/BEP20.sol",
          "file": "./BEP20.sol",
          "scope": 1363,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1203,
        "name": "ImportDirective",
        "src": "59:21:5"
      },
      {
        "attributes": {
          "SourceUnit": 69,
          "absolutePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/HelperPancakeSwapROUTER.sol",
          "file": "./HelperPancakeSwapROUTER.sol",
          "scope": 1363,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1204,
        "name": "ImportDirective",
        "src": "81:39:5"
=======
        "SmartExchange": [
          1498
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".0"
          ]
        },
        "id": 1337,
        "name": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 1338,
        "name": "PragmaDirective",
        "src": "24:33:6"
      },
      {
        "attributes": {
          "SourceUnit": 33,
          "absolutePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/BEP20.sol",
          "file": "./BEP20.sol",
          "scope": 1499,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1339,
        "name": "ImportDirective",
        "src": "59:21:6"
      },
      {
        "attributes": {
          "SourceUnit": 102,
          "absolutePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/HelperPancakeSwapROUTER.sol",
          "file": "./HelperPancakeSwapROUTER.sol",
          "scope": 1499,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1340,
        "name": "ImportDirective",
        "src": "81:39:6"
>>>>>>> origin/ajibigad/token-swap
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
<<<<<<< HEAD
            1268
||||||| merged common ancestors
            1362
=======
            1498
>>>>>>> origin/ajibigad/token-swap
          ],
          "name": "SmartExchange",
<<<<<<< HEAD
          "scope": 1269
||||||| merged common ancestors
          "scope": 1363
=======
          "scope": 1499
>>>>>>> origin/ajibigad/token-swap
        },
        "children": [
          {
            "attributes": {
              "constant": true,
              "functionSelector": "d02eb3f4",
              "mutability": "constant",
              "name": "wBNB",
<<<<<<< HEAD
              "scope": 1268,
||||||| merged common ancestors
              "scope": 1362,
=======
              "scope": 1498,
>>>>>>> origin/ajibigad/token-swap
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "public"
||||||| merged common ancestors
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2612:72:3"
                }
              ]
=======
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "balance",
                      "scope": 1225,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1222,
                        "name": "ElementaryTypeName",
                        "src": "668:7:5"
                      }
                    ],
                    "id": 1223,
                    "name": "VariableDeclaration",
                    "src": "668:15:5"
                  }
                ],
                "id": 1224,
                "name": "ParameterList",
                "src": "652:32:5"
              }
            ],
            "id": 1225,
            "name": "EventDefinition",
            "src": "634:51:5"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 1362,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
>>>>>>> origin/ajibigad/token-swap
            },
<<<<<<< HEAD
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
<<<<<<< HEAD
                "id": 1139,
||||||| merged common ancestors
                "id": 1205,
=======
                "id": 1341,
>>>>>>> origin/ajibigad/token-swap
                "name": "ElementaryTypeName",
<<<<<<< HEAD
                "src": "2351:7:4"
||||||| merged common ancestors
                "src": "204:7:5"
=======
                "src": "204:7:6"
>>>>>>> origin/ajibigad/token-swap
              },
              {
                "attributes": {
                  "hexvalue": "307861653133643938396461433266306445624666343630614331313261383337433839424161376364",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "address payable",
                  "value": "0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd"
                },
<<<<<<< HEAD
                "id": 1140,
||||||| merged common ancestors
                "id": 1206,
=======
                "id": 1342,
>>>>>>> origin/ajibigad/token-swap
                "name": "Literal",
<<<<<<< HEAD
                "src": "2382:42:4"
||||||| merged common ancestors
                "src": "235:42:5"
=======
                "src": "235:42:6"
>>>>>>> origin/ajibigad/token-swap
              }
            ],
<<<<<<< HEAD
            "id": 1141,
||||||| merged common ancestors
            "id": 1207,
=======
            "id": 1343,
>>>>>>> origin/ajibigad/token-swap
            "name": "VariableDeclaration",
<<<<<<< HEAD
            "src": "2351:73:4"
||||||| merged common ancestors
            "src": "204:73:5"
=======
            "src": "204:73:6"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "attributes": {
              "constant": true,
              "functionSelector": "484f4ea9",
              "mutability": "constant",
              "name": "BUSD",
<<<<<<< HEAD
              "scope": 1268,
||||||| merged common ancestors
              "scope": 1362,
=======
              "scope": 1498,
>>>>>>> origin/ajibigad/token-swap
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
<<<<<<< HEAD
                "id": 1142,
||||||| merged common ancestors
                "id": 1208,
=======
                "id": 1344,
>>>>>>> origin/ajibigad/token-swap
                "name": "ElementaryTypeName",
<<<<<<< HEAD
                "src": "2456:7:4"
||||||| merged common ancestors
                "src": "308:7:5"
=======
                "src": "308:7:6"
>>>>>>> origin/ajibigad/token-swap
              },
              {
                "attributes": {
                  "hexvalue": "307838333031463232313363306565443439613745323841653463336539313732323931394238423437",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "address payable",
                  "value": "0x8301F2213c0eeD49a7E28Ae4c3e91722919B8B47"
                },
<<<<<<< HEAD
                "id": 1143,
||||||| merged common ancestors
                "id": 1209,
=======
                "id": 1345,
>>>>>>> origin/ajibigad/token-swap
                "name": "Literal",
<<<<<<< HEAD
                "src": "2487:42:4"
||||||| merged common ancestors
                "src": "339:42:5"
=======
                "src": "339:42:6"
>>>>>>> origin/ajibigad/token-swap
              }
            ],
<<<<<<< HEAD
            "id": 1144,
||||||| merged common ancestors
            "id": 1210,
=======
            "id": 1346,
>>>>>>> origin/ajibigad/token-swap
            "name": "VariableDeclaration",
<<<<<<< HEAD
            "src": "2456:73:4"
||||||| merged common ancestors
            "src": "308:73:5"
=======
            "src": "308:73:6"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "attributes": {
              "constant": true,
              "functionSelector": "e71efd95",
              "mutability": "constant",
              "name": "pROUTER",
<<<<<<< HEAD
              "scope": 1268,
||||||| merged common ancestors
              "scope": 1362,
=======
              "scope": 1498,
>>>>>>> origin/ajibigad/token-swap
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
<<<<<<< HEAD
                "id": 1145,
||||||| merged common ancestors
                "id": 1211,
=======
                "id": 1347,
>>>>>>> origin/ajibigad/token-swap
                "name": "ElementaryTypeName",
<<<<<<< HEAD
                "src": "2561:7:4"
||||||| merged common ancestors
                "src": "412:7:5"
=======
                "src": "412:7:6"
>>>>>>> origin/ajibigad/token-swap
              },
              {
                "attributes": {
                  "hexvalue": "307844393944316333334639664333343434663831303137353461424334366335323431363535304431",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "address payable",
                  "value": "0xD99D1c33F9fC3444f8101754aBC46c52416550D1"
                },
<<<<<<< HEAD
                "id": 1146,
||||||| merged common ancestors
                "id": 1212,
=======
                "id": 1348,
>>>>>>> origin/ajibigad/token-swap
                "name": "Literal",
<<<<<<< HEAD
                "src": "2595:42:4"
||||||| merged common ancestors
                "src": "446:42:5"
=======
                "src": "446:42:6"
>>>>>>> origin/ajibigad/token-swap
              }
            ],
<<<<<<< HEAD
            "id": 1147,
||||||| merged common ancestors
            "id": 1213,
=======
            "id": 1349,
>>>>>>> origin/ajibigad/token-swap
            "name": "VariableDeclaration",
<<<<<<< HEAD
            "src": "2561:76:4"
||||||| merged common ancestors
            "src": "412:76:5"
=======
            "src": "412:76:6"
>>>>>>> origin/ajibigad/token-swap
          },
<<<<<<< HEAD
||||||| merged common ancestors
            "functionSelector": "2afcf480",
            "id": 1058,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "invest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1049,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1048,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1058,
                  "src": "2570:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1047,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2570:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2569:16:3"
            },
            "returnParameters": {
              "id": 1050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2593:0:3"
||||||| merged common ancestors
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "wBNBToken",
              "scope": 1362,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract BEP20",
              "visibility": "private"
=======
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "wBNBToken",
              "scope": 1498,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract BEP20",
              "visibility": "private"
>>>>>>> origin/ajibigad/token-swap
            },
            "scope": 1059,
            "src": "2554:462:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1060,
        "src": "2243:780:3"
      }
    ],
    "src": "0:3023:3"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/SmartExchange.sol",
      "exportedSymbols": {
        "HelperPancakeSwap_ROUTER": [
          1038
        ],
        "SmartExchange": [
          1059
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".0"
          ]
        },
        "id": 1003,
        "name": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 1004,
        "name": "PragmaDirective",
        "src": "24:33:3"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1038
          ],
          "name": "HelperPancakeSwap_ROUTER",
          "scope": 1060
        },
        "children": [
=======
            "children": [
              {
<<<<<<< HEAD
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1226,
                "name": "ParameterList",
                "src": "702:2:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1227,
                "name": "ParameterList",
                "src": "705:0:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract BEP20"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1215,
                              "type": "contract BEP20",
                              "value": "wBNBToken"
                            },
                            "id": 1228,
                            "name": "Identifier",
                            "src": "715:9:5"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract BEP20",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 32,
                                  "type": "type(contract BEP20)",
                                  "value": "BEP20"
                                },
                                "id": 1229,
                                "name": "Identifier",
                                "src": "727:5:5"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1207,
                                  "type": "address",
                                  "value": "wBNB"
                                },
                                "id": 1230,
                                "name": "Identifier",
                                "src": "733:4:5"
                              }
                            ],
                            "id": 1231,
                            "name": "FunctionCall",
                            "src": "727:11:5"
                          }
                        ],
                        "id": 1232,
                        "name": "Assignment",
                        "src": "715:23:5"
                      }
                    ],
                    "id": 1233,
                    "name": "ExpressionStatement",
                    "src": "715:23:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract BEP20"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1217,
                              "type": "contract BEP20",
                              "value": "bUSDToken"
                            },
                            "id": 1234,
                            "name": "Identifier",
                            "src": "787:9:5"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract BEP20",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 32,
                                  "type": "type(contract BEP20)",
                                  "value": "BEP20"
                                },
                                "id": 1235,
                                "name": "Identifier",
                                "src": "799:5:5"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1210,
                                  "type": "address",
                                  "value": "BUSD"
                                },
                                "id": 1236,
                                "name": "Identifier",
                                "src": "805:4:5"
                              }
                            ],
                            "id": 1237,
                            "name": "FunctionCall",
                            "src": "799:11:5"
                          }
                        ],
                        "id": 1238,
                        "name": "Assignment",
                        "src": "787:23:5"
                      }
                    ],
                    "id": 1239,
                    "name": "ExpressionStatement",
                    "src": "787:23:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract HelperPancakeSwapROUTER"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1219,
                              "type": "contract HelperPancakeSwapROUTER",
                              "value": "router"
                            },
                            "id": 1240,
                            "name": "Identifier",
                            "src": "859:6:5"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract HelperPancakeSwapROUTER",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 68,
                                  "type": "type(contract HelperPancakeSwapROUTER)",
                                  "value": "HelperPancakeSwapROUTER"
                                },
                                "id": 1241,
                                "name": "Identifier",
                                "src": "868:23:5"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1213,
                                  "type": "address",
                                  "value": "pROUTER"
                                },
                                "id": 1242,
                                "name": "Identifier",
                                "src": "892:7:5"
                              }
                            ],
                            "id": 1243,
                            "name": "FunctionCall",
                            "src": "868:32:5"
                          }
                        ],
                        "id": 1244,
                        "name": "Assignment",
                        "src": "859:41:5"
                      }
                    ],
                    "id": 1245,
                    "name": "ExpressionStatement",
                    "src": "859:41:5"
                  }
                ],
                "id": 1246,
                "name": "Block",
                "src": "705:246:5"
||||||| merged common ancestors
                "attributes": {
                  "name": "BEP20",
                  "referencedDeclaration": 32,
                  "type": "contract BEP20"
                },
                "id": 1214,
                "name": "UserDefinedTypeName",
                "src": "531:5:5"
=======
                "attributes": {
                  "name": "BEP20",
                  "referencedDeclaration": 32,
                  "type": "contract BEP20"
                },
                "id": 1350,
                "name": "UserDefinedTypeName",
                "src": "531:5:6"
>>>>>>> origin/ajibigad/token-swap
              }
            ],
<<<<<<< HEAD
            "id": 1247,
            "name": "FunctionDefinition",
            "src": "691:260:5"
||||||| merged common ancestors
            "id": 1215,
            "name": "VariableDeclaration",
            "src": "531:23:5"
=======
            "id": 1351,
            "name": "VariableDeclaration",
            "src": "531:23:6"
>>>>>>> origin/ajibigad/token-swap
          },
>>>>>>> origin/ajibigad/token-swap
          {
            "attributes": {
<<<<<<< HEAD
              "functionSelector": "d3986f08",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
<<<<<<< HEAD
              "name": "swap",
              "scope": 1268,
||||||| merged common ancestors
              "name": "swapExactTokensForTokens",
              "scope": 1038,
=======
              "name": "swap",
              "scope": 1362,
>>>>>>> origin/ajibigad/token-swap
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
||||||| merged common ancestors
              "constant": false,
              "mutability": "mutable",
              "name": "bUSDToken",
              "scope": 1362,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract BEP20",
              "visibility": "private"
=======
              "constant": false,
              "mutability": "mutable",
              "name": "bUSDToken",
              "scope": 1498,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract BEP20",
              "visibility": "private"
>>>>>>> origin/ajibigad/token-swap
            },
            "children": [
              {
<<<<<<< HEAD
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
<<<<<<< HEAD
                      "name": "amount",
                      "scope": 1267,
||||||| merged common ancestors
                      "name": "amountIn",
                      "scope": 1022,
=======
                      "name": "amount",
                      "scope": 1357,
>>>>>>> origin/ajibigad/token-swap
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
<<<<<<< HEAD
                        "id": 1148,
||||||| merged common ancestors
                        "id": 1005,
=======
                        "id": 1248,
                        "name": "ElementaryTypeName",
                        "src": "1108:7:5"
                      }
                    ],
                    "id": 1249,
                    "name": "VariableDeclaration",
                    "src": "1108:14:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "to",
                      "scope": 1357,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1250,
>>>>>>> origin/ajibigad/token-swap
                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "2822:7:4"
||||||| merged common ancestors
                        "src": "1406:4:3"
=======
                        "src": "1124:7:5"
                      }
                    ],
                    "id": 1251,
                    "name": "VariableDeclaration",
                    "src": "1124:10:5"
                  }
                ],
                "id": 1252,
                "name": "ParameterList",
                "src": "1107:28:5"
              },
||||||| merged common ancestors
                "attributes": {
                  "name": "BEP20",
                  "referencedDeclaration": 32,
                  "type": "contract BEP20"
                },
                "id": 1216,
                "name": "UserDefinedTypeName",
                "src": "560:5:5"
              }
            ],
            "id": 1217,
            "name": "VariableDeclaration",
            "src": "560:23:5"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "router",
              "scope": 1362,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract HelperPancakeSwapROUTER",
              "visibility": "private"
            },
            "children": [
=======
                "attributes": {
                  "name": "BEP20",
                  "referencedDeclaration": 32,
                  "type": "contract BEP20"
                },
                "id": 1352,
                "name": "UserDefinedTypeName",
                "src": "560:5:6"
              }
            ],
            "id": 1353,
            "name": "VariableDeclaration",
            "src": "560:23:6"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "router",
              "scope": 1498,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract HelperPancakeSwapROUTER",
              "visibility": "private"
            },
            "children": [
>>>>>>> origin/ajibigad/token-swap
              {
<<<<<<< HEAD
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1357,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[]",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 1253,
                            "name": "ElementaryTypeName",
                            "src": "1152:4:5"
                          }
                        ],
                        "id": 1254,
                        "name": "ArrayTypeName",
                        "src": "1152:6:5"
                      }
                    ],
                    "id": 1255,
                    "name": "VariableDeclaration",
                    "src": "1152:13:5"
                  }
                ],
                "id": 1256,
                "name": "ParameterList",
                "src": "1151:15:5"
              },
||||||| merged common ancestors
                "attributes": {
                  "name": "HelperPancakeSwapROUTER",
                  "referencedDeclaration": 68,
                  "type": "contract HelperPancakeSwapROUTER"
                },
                "id": 1218,
                "name": "UserDefinedTypeName",
                "src": "589:23:5"
              }
            ],
            "id": 1219,
            "name": "VariableDeclaration",
            "src": "589:38:5"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "BalanceEvent"
            },
            "children": [
=======
                "attributes": {
                  "name": "HelperPancakeSwapROUTER",
                  "referencedDeclaration": 101,
                  "type": "contract HelperPancakeSwapROUTER"
                },
                "id": 1354,
                "name": "UserDefinedTypeName",
                "src": "589:23:6"
              }
            ],
            "id": 1355,
            "name": "VariableDeclaration",
            "src": "589:38:6"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "BalanceEvent"
            },
            "children": [
>>>>>>> origin/ajibigad/token-swap
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "type": "function () payable external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "deposit",
                                  "referencedDeclaration": 21,
                                  "type": "function () payable external"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1215,
                                      "type": "contract BEP20",
                                      "value": "wBNBToken"
                                    },
                                    "id": 1257,
                                    "name": "Identifier",
                                    "src": "1177:9:5"
                                  }
                                ],
                                "id": 1259,
                                "name": "MemberAccess",
                                "src": "1177:17:5"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1249,
                                  "type": "uint256",
                                  "value": "amount"
                                },
                                "id": 1260,
                                "name": "Identifier",
                                "src": "1202:6:5"
                              }
                            ],
                            "id": 1261,
                            "name": "FunctionCallOptions",
                            "src": "1177:32:5"
                          }
                        ],
                        "id": 1262,
                        "name": "FunctionCall",
                        "src": "1177:34:5"
                      }
                    ],
                    "id": 1263,
                    "name": "ExpressionStatement",
                    "src": "1177:34:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "approve",
                              "referencedDeclaration": 17,
                              "type": "function (address,uint256) external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1215,
                                  "type": "contract BEP20",
                                  "value": "wBNBToken"
                                },
                                "id": 1264,
                                "name": "Identifier",
                                "src": "1243:9:5"
                              }
                            ],
                            "id": 1266,
                            "name": "MemberAccess",
                            "src": "1243:17:5"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_HelperPancakeSwapROUTER_$68",
                                      "typeString": "contract HelperPancakeSwapROUTER"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 1267,
                                    "name": "ElementaryTypeName",
                                    "src": "1261:7:5"
                                  }
                                ],
                                "id": 1268,
                                "name": "ElementaryTypeNameExpression",
                                "src": "1261:7:5"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1219,
                                  "type": "contract HelperPancakeSwapROUTER",
                                  "value": "router"
                                },
                                "id": 1269,
                                "name": "Identifier",
                                "src": "1269:6:5"
                              }
                            ],
                            "id": 1270,
                            "name": "FunctionCall",
                            "src": "1261:15:5"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1249,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 1271,
                            "name": "Identifier",
                            "src": "1278:6:5"
                          }
                        ],
                        "id": 1272,
                        "name": "FunctionCall",
                        "src": "1243:42:5"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
<<<<<<< HEAD
                    "id": 1149,
                    "name": "VariableDeclaration",
                    "src": "2822:14:4"
||||||| merged common ancestors
                    "id": 1006,
                    "name": "VariableDeclaration",
                    "src": "1406:13:3"
=======
                    "id": 1273,
                    "name": "ExpressionStatement",
                    "src": "1243:42:5"
>>>>>>> origin/ajibigad/token-swap
                  },
                  {
                    "attributes": {
<<<<<<< HEAD
                      "constant": false,
                      "mutability": "mutable",
<<<<<<< HEAD
                      "name": "to",
                      "scope": 1267,
||||||| merged common ancestors
                      "name": "owner",
                      "scope": 1225,
=======
                      "name": "owner",
                      "scope": 1361,
>>>>>>> origin/ajibigad/token-swap
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
||||||| merged common ancestors
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amountOutMin",
                      "scope": 1022,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
=======
                      "assignments": [
                        1278
                      ]
>>>>>>> origin/ajibigad/token-swap
                    },
                    "children": [
                      {
                        "attributes": {
<<<<<<< HEAD
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
||||||| merged common ancestors
                          "name": "uint",
                          "type": "uint256"
=======
                          "constant": false,
                          "mutability": "mutable",
                          "name": "path",
                          "scope": 1356,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "address[]",
                          "visibility": "internal"
>>>>>>> origin/ajibigad/token-swap
                        },
<<<<<<< HEAD
<<<<<<< HEAD
                        "id": 1150,
||||||| merged common ancestors
                        "id": 1220,
=======
                        "id": 1356,
>>>>>>> origin/ajibigad/token-swap
                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "2838:7:4"
||||||| merged common ancestors
                        "src": "653:7:5"
=======
                        "src": "653:7:6"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
<<<<<<< HEAD
                    "id": 1151,
||||||| merged common ancestors
                    "id": 1221,
=======
                    "id": 1357,
>>>>>>> origin/ajibigad/token-swap
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "2838:10:4"
                  }
                ],
                "id": 1152,
                "name": "ParameterList",
                "src": "2821:28:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1267,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[]",
                      "visibility": "internal"
                    },
                    "children": [
||||||| merged common ancestors
                        "id": 1007,
                        "name": "ElementaryTypeName",
                        "src": "1429:4:3"
                      }
                    ],
                    "id": 1008,
                    "name": "VariableDeclaration",
                    "src": "1429:17:3"
||||||| merged common ancestors
                    "src": "653:13:5"
=======
                    "src": "653:13:6"
>>>>>>> origin/ajibigad/token-swap
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
<<<<<<< HEAD
                      "name": "path",
                      "scope": 1022,
||||||| merged common ancestors
                      "name": "balance",
                      "scope": 1225,
=======
                      "name": "balance",
                      "scope": 1361,
>>>>>>> origin/ajibigad/token-swap
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "address[]",
                      "visibility": "internal"
                    },
                    "children": [
=======
                        "children": [
                          {
                            "attributes": {
                              "type": "address[]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "address",
                                  "type": "address"
                                },
                                "id": 1276,
                                "name": "ElementaryTypeName",
                                "src": "1339:7:5"
                              }
                            ],
                            "id": 1277,
                            "name": "ArrayTypeName",
                            "src": "1339:9:5"
                          }
                        ],
                        "id": 1278,
                        "name": "VariableDeclaration",
                        "src": "1339:21:5"
                      },
>>>>>>> origin/ajibigad/token-swap
                      {
                        "attributes": {
<<<<<<< HEAD
                          "type": "uint256[]"
||||||| merged common ancestors
                          "type": "address[]"
=======
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "address[] memory",
                          "type_conversion": false
>>>>>>> origin/ajibigad/token-swap
                        },
<<<<<<< HEAD
                        "children": [
                          {
                            "attributes": {
<<<<<<< HEAD
                              "name": "uint",
                              "type": "uint256"
||||||| merged common ancestors
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
=======
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "function (uint256) pure returns (address[] memory)"
>>>>>>> origin/ajibigad/token-swap
                            },
<<<<<<< HEAD
                            "id": 1153,
                            "name": "ElementaryTypeName",
                            "src": "2866:4:4"
||||||| merged common ancestors
                            "id": 1009,
                            "name": "ElementaryTypeName",
                            "src": "1456:7:3"
=======
                            "children": [
                              {
                                "attributes": {
                                  "type": "address[]"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address",
                                      "stateMutability": "nonpayable",
                                      "type": "address"
                                    },
                                    "id": 1279,
                                    "name": "ElementaryTypeName",
                                    "src": "1367:7:5"
                                  }
                                ],
                                "id": 1280,
                                "name": "ArrayTypeName",
                                "src": "1367:9:5"
                              }
                            ],
                            "id": 1281,
                            "name": "NewExpression",
                            "src": "1363:13:5"
                          },
                          {
                            "attributes": {
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 1282,
                            "name": "Literal",
                            "src": "1377:1:5"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
<<<<<<< HEAD
                        "id": 1154,
                        "name": "ArrayTypeName",
                        "src": "2866:6:4"
||||||| merged common ancestors
                        "id": 1010,
                        "name": "ArrayTypeName",
                        "src": "1456:9:3"
=======
                        "id": 1283,
                        "name": "FunctionCall",
                        "src": "1363:16:5"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "id": 1222,
                        "name": "ElementaryTypeName",
                        "src": "668:7:5"
=======
                        "id": 1358,
                        "name": "ElementaryTypeName",
                        "src": "668:7:6"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
<<<<<<< HEAD
<<<<<<< HEAD
                    "id": 1155,
||||||| merged common ancestors
                    "id": 1223,
=======
                    "id": 1359,
>>>>>>> origin/ajibigad/token-swap
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "2866:13:4"
||||||| merged common ancestors
                    "src": "668:15:5"
=======
                    "src": "668:15:6"
>>>>>>> origin/ajibigad/token-swap
                  }
                ],
<<<<<<< HEAD
                "id": 1156,
||||||| merged common ancestors
                "id": 1224,
                "name": "ParameterList",
                "src": "652:32:5"
              }
            ],
            "id": 1225,
            "name": "EventDefinition",
            "src": "634:51:5"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 1362,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1226,
                "name": "ParameterList",
                "src": "702:2:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1227,
=======
                "id": 1360,
                "name": "ParameterList",
                "src": "652:32:6"
              }
            ],
            "id": 1361,
            "name": "EventDefinition",
            "src": "634:51:6"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 1498,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1362,
                "name": "ParameterList",
                "src": "702:2:6"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1363,
>>>>>>> origin/ajibigad/token-swap
                "name": "ParameterList",
<<<<<<< HEAD
                "src": "2865:15:4"
||||||| merged common ancestors
                "src": "705:0:5"
=======
                "src": "705:0:6"
>>>>>>> origin/ajibigad/token-swap
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        1158
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "router",
                          "scope": 1266,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "contract HelperPancakeSwap_ROUTER",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "HelperPancakeSwap_ROUTER",
                              "referencedDeclaration": 1138,
                              "type": "contract HelperPancakeSwap_ROUTER"
                            },
                            "id": 1157,
                            "name": "UserDefinedTypeName",
                            "src": "2902:24:4"
                          }
                        ],
                        "id": 1158,
                        "name": "VariableDeclaration",
                        "src": "2902:31:4"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "contract HelperPancakeSwap_ROUTER",
                          "type_conversion": true
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
<<<<<<< HEAD
                              "referencedDeclaration": 1138,
                              "type": "type(contract HelperPancakeSwap_ROUTER)",
                              "value": "HelperPancakeSwap_ROUTER"
||||||| merged common ancestors
                              "referencedDeclaration": 1215,
                              "type": "contract BEP20",
                              "value": "wBNBToken"
=======
                              "referencedDeclaration": 1351,
                              "type": "contract BEP20",
                              "value": "wBNBToken"
>>>>>>> origin/ajibigad/token-swap
                            },
<<<<<<< HEAD
                            "id": 1159,
||||||| merged common ancestors
                            "id": 1228,
=======
                            "id": 1364,
>>>>>>> origin/ajibigad/token-swap
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "2936:24:4"
||||||| merged common ancestors
                            "src": "715:9:5"
=======
                            "src": "715:9:6"
>>>>>>> origin/ajibigad/token-swap
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1147,
                              "type": "address",
                              "value": "pROUTER"
                            },
<<<<<<< HEAD
                            "id": 1160,
                            "name": "Identifier",
                            "src": "2961:7:4"
||||||| merged common ancestors
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 32,
                                  "type": "type(contract BEP20)",
                                  "value": "BEP20"
                                },
                                "id": 1229,
                                "name": "Identifier",
                                "src": "727:5:5"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1207,
                                  "type": "address",
                                  "value": "wBNB"
                                },
                                "id": 1230,
                                "name": "Identifier",
                                "src": "733:4:5"
                              }
                            ],
                            "id": 1231,
                            "name": "FunctionCall",
                            "src": "727:11:5"
=======
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 32,
                                  "type": "type(contract BEP20)",
                                  "value": "BEP20"
                                },
                                "id": 1365,
                                "name": "Identifier",
                                "src": "727:5:6"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1343,
                                  "type": "address",
                                  "value": "wBNB"
                                },
                                "id": 1366,
                                "name": "Identifier",
                                "src": "733:4:6"
                              }
                            ],
                            "id": 1367,
                            "name": "FunctionCall",
                            "src": "727:11:6"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
<<<<<<< HEAD
                        "id": 1161,
                        "name": "FunctionCall",
                        "src": "2936:33:4"
||||||| merged common ancestors
                        "id": 1232,
                        "name": "Assignment",
                        "src": "715:23:5"
=======
                        "id": 1368,
                        "name": "Assignment",
                        "src": "715:23:6"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
<<<<<<< HEAD
                    "id": 1162,
                    "name": "VariableDeclarationStatement",
                    "src": "2902:67:4"
||||||| merged common ancestors
                    "id": 1011,
                    "name": "VariableDeclaration",
                    "src": "1456:23:3"
=======
                    "id": 1284,
                    "name": "VariableDeclarationStatement",
                    "src": "1339:40:5"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "id": 1233,
                    "name": "ExpressionStatement",
                    "src": "715:23:5"
=======
                    "id": 1369,
                    "name": "ExpressionStatement",
                    "src": "715:23:6"
>>>>>>> origin/ajibigad/token-swap
                  },
                  {
<<<<<<< HEAD
                    "attributes": {
                      "assignments": [
                        1164
                      ]
                    },
||||||| merged common ancestors
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "to",
                      "scope": 1022,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
=======
>>>>>>> origin/ajibigad/token-swap
                    "children": [
                      {
                        "attributes": {
<<<<<<< HEAD
                          "constant": false,
                          "mutability": "mutable",
                          "name": "busdContract",
                          "scope": 1266,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "contract Bep20",
                          "visibility": "internal"
||||||| merged common ancestors
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
=======
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
>>>>>>> origin/ajibigad/token-swap
                        },
<<<<<<< HEAD
                        "children": [
                          {
                            "attributes": {
                              "name": "Bep20",
                              "referencedDeclaration": 18,
                              "type": "contract Bep20"
                            },
                            "id": 1163,
                            "name": "UserDefinedTypeName",
                            "src": "3024:5:4"
                          }
                        ],
                        "id": 1164,
                        "name": "VariableDeclaration",
                        "src": "3024:18:4"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "contract Bep20",
                          "type_conversion": true
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
<<<<<<< HEAD
                              "referencedDeclaration": 18,
                              "type": "type(contract Bep20)",
                              "value": "Bep20"
||||||| merged common ancestors
                              "referencedDeclaration": 1217,
                              "type": "contract BEP20",
                              "value": "bUSDToken"
=======
                              "referencedDeclaration": 1353,
                              "type": "contract BEP20",
                              "value": "bUSDToken"
>>>>>>> origin/ajibigad/token-swap
                            },
<<<<<<< HEAD
                            "id": 1165,
||||||| merged common ancestors
                            "id": 1234,
=======
                            "id": 1370,
>>>>>>> origin/ajibigad/token-swap
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "3045:5:4"
||||||| merged common ancestors
                            "src": "787:9:5"
=======
                            "src": "787:9:6"
>>>>>>> origin/ajibigad/token-swap
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1144,
                              "type": "address",
                              "value": "BUSD"
                            },
                            "id": 1166,
                            "name": "Identifier",
                            "src": "3051:4:4"
                          }
                        ],
                        "id": 1167,
                        "name": "FunctionCall",
                        "src": "3045:11:4"
||||||| merged common ancestors
                        "id": 1012,
                        "name": "ElementaryTypeName",
                        "src": "1489:7:3"
=======
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1278,
                                  "type": "address[] memory",
                                  "value": "path"
                                },
<<<<<<< HEAD
                                "id": 1285,
||||||| merged common ancestors
                                "id": 1235,
=======
                                "id": 1371,
>>>>>>> origin/ajibigad/token-swap
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "1389:4:5"
||||||| merged common ancestors
                                "src": "799:5:5"
=======
                                "src": "799:5:6"
>>>>>>> origin/ajibigad/token-swap
                              },
                              {
                                "attributes": {
<<<<<<< HEAD
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
||||||| merged common ancestors
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1210,
                                  "type": "address",
                                  "value": "BUSD"
=======
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1346,
                                  "type": "address",
                                  "value": "BUSD"
>>>>>>> origin/ajibigad/token-swap
                                },
<<<<<<< HEAD
                                "id": 1286,
                                "name": "Literal",
                                "src": "1394:1:5"
||||||| merged common ancestors
                                "id": 1236,
                                "name": "Identifier",
                                "src": "805:4:5"
=======
                                "id": 1372,
                                "name": "Identifier",
                                "src": "805:4:6"
>>>>>>> origin/ajibigad/token-swap
                              }
                            ],
<<<<<<< HEAD
                            "id": 1287,
                            "name": "IndexAccess",
                            "src": "1389:7:5"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1207,
                              "type": "address",
                              "value": "wBNB"
                            },
                            "id": 1288,
                            "name": "Identifier",
                            "src": "1399:4:5"
||||||| merged common ancestors
                            "id": 1237,
                            "name": "FunctionCall",
                            "src": "799:11:5"
=======
                            "id": 1373,
                            "name": "FunctionCall",
                            "src": "799:11:6"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
<<<<<<< HEAD
                        "id": 1289,
||||||| merged common ancestors
                        "id": 1238,
=======
                        "id": 1374,
>>>>>>> origin/ajibigad/token-swap
                        "name": "Assignment",
<<<<<<< HEAD
                        "src": "1389:14:5"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "787:23:5"
=======
                        "src": "787:23:6"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
<<<<<<< HEAD
<<<<<<< HEAD
                    "id": 1168,
                    "name": "VariableDeclarationStatement",
                    "src": "3024:32:4"
||||||| merged common ancestors
                    "id": 1013,
                    "name": "VariableDeclaration",
                    "src": "1489:10:3"
=======
                    "id": 1290,
||||||| merged common ancestors
                    "id": 1239,
=======
                    "id": 1375,
>>>>>>> origin/ajibigad/token-swap
                    "name": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "1389:14:5"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "787:23:5"
=======
                    "src": "787:23:6"
>>>>>>> origin/ajibigad/token-swap
                  },
                  {
<<<<<<< HEAD
                    "attributes": {
                      "assignments": [
                        1170
                      ]
                    },
||||||| merged common ancestors
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "deadline",
                      "scope": 1022,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
=======
>>>>>>> origin/ajibigad/token-swap
                    "children": [
                      {
                        "attributes": {
<<<<<<< HEAD
                          "constant": false,
                          "mutability": "mutable",
                          "name": "wbnbContract",
                          "scope": 1266,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "contract Bep20",
                          "visibility": "internal"
||||||| merged common ancestors
                          "name": "uint",
                          "type": "uint256"
=======
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
>>>>>>> origin/ajibigad/token-swap
                        },
<<<<<<< HEAD
                        "children": [
                          {
                            "attributes": {
                              "name": "Bep20",
                              "referencedDeclaration": 18,
                              "type": "contract Bep20"
                            },
                            "id": 1169,
                            "name": "UserDefinedTypeName",
                            "src": "3106:5:4"
                          }
                        ],
                        "id": 1170,
                        "name": "VariableDeclaration",
                        "src": "3106:18:4"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "contract Bep20",
                          "type_conversion": true
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
<<<<<<< HEAD
                              "referencedDeclaration": 18,
                              "type": "type(contract Bep20)",
                              "value": "Bep20"
||||||| merged common ancestors
                              "referencedDeclaration": 1219,
                              "type": "contract HelperPancakeSwapROUTER",
                              "value": "router"
=======
                              "referencedDeclaration": 1355,
                              "type": "contract HelperPancakeSwapROUTER",
                              "value": "router"
>>>>>>> origin/ajibigad/token-swap
                            },
<<<<<<< HEAD
                            "id": 1171,
||||||| merged common ancestors
                            "id": 1240,
=======
                            "id": 1376,
>>>>>>> origin/ajibigad/token-swap
                            "name": "Identifier",
<<<<<<< HEAD
                            "src": "3127:5:4"
||||||| merged common ancestors
                            "src": "859:6:5"
=======
                            "src": "859:6:6"
>>>>>>> origin/ajibigad/token-swap
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1141,
                              "type": "address",
                              "value": "wBNB"
                            },
                            "id": 1172,
                            "name": "Identifier",
                            "src": "3133:4:4"
                          }
                        ],
                        "id": 1173,
                        "name": "FunctionCall",
                        "src": "3127:11:4"
||||||| merged common ancestors
                        "id": 1014,
                        "name": "ElementaryTypeName",
                        "src": "1509:4:3"
=======
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 1278,
                                  "type": "address[] memory",
                                  "value": "path"
||||||| merged common ancestors
                                  "referencedDeclaration": 68,
                                  "type": "type(contract HelperPancakeSwapROUTER)",
                                  "value": "HelperPancakeSwapROUTER"
=======
                                  "referencedDeclaration": 101,
                                  "type": "type(contract HelperPancakeSwapROUTER)",
                                  "value": "HelperPancakeSwapROUTER"
>>>>>>> origin/ajibigad/token-swap
                                },
<<<<<<< HEAD
                                "id": 1291,
||||||| merged common ancestors
                                "id": 1241,
=======
                                "id": 1377,
>>>>>>> origin/ajibigad/token-swap
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "1413:4:5"
||||||| merged common ancestors
                                "src": "868:23:5"
=======
                                "src": "868:23:6"
>>>>>>> origin/ajibigad/token-swap
                              },
                              {
                                "attributes": {
<<<<<<< HEAD
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
||||||| merged common ancestors
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1213,
                                  "type": "address",
                                  "value": "pROUTER"
=======
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1349,
                                  "type": "address",
                                  "value": "pROUTER"
>>>>>>> origin/ajibigad/token-swap
                                },
<<<<<<< HEAD
                                "id": 1292,
                                "name": "Literal",
                                "src": "1418:1:5"
||||||| merged common ancestors
                                "id": 1242,
                                "name": "Identifier",
                                "src": "892:7:5"
=======
                                "id": 1378,
                                "name": "Identifier",
                                "src": "892:7:6"
>>>>>>> origin/ajibigad/token-swap
                              }
                            ],
<<<<<<< HEAD
                            "id": 1293,
                            "name": "IndexAccess",
                            "src": "1413:7:5"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1210,
                              "type": "address",
                              "value": "BUSD"
                            },
                            "id": 1294,
                            "name": "Identifier",
                            "src": "1423:4:5"
||||||| merged common ancestors
                            "id": 1243,
                            "name": "FunctionCall",
                            "src": "868:32:5"
=======
                            "id": 1379,
                            "name": "FunctionCall",
                            "src": "868:32:6"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
<<<<<<< HEAD
                        "id": 1295,
||||||| merged common ancestors
                        "id": 1244,
=======
                        "id": 1380,
>>>>>>> origin/ajibigad/token-swap
                        "name": "Assignment",
<<<<<<< HEAD
                        "src": "1413:14:5"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "859:41:5"
                      }
                    ],
                    "id": 1245,
                    "name": "ExpressionStatement",
                    "src": "859:41:5"
                  }
                ],
                "id": 1246,
                "name": "Block",
                "src": "705:246:5"
              }
            ],
            "id": 1247,
            "name": "FunctionDefinition",
            "src": "691:260:5"
          },
          {
            "attributes": {
              "functionSelector": "d3986f08",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "swap",
              "scope": 1362,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "scope": 1357,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1248,
                        "name": "ElementaryTypeName",
                        "src": "1108:7:5"
=======
                        "src": "859:41:6"
                      }
                    ],
                    "id": 1381,
                    "name": "ExpressionStatement",
                    "src": "859:41:6"
                  }
                ],
                "id": 1382,
                "name": "Block",
                "src": "705:246:6"
              }
            ],
            "id": 1383,
            "name": "FunctionDefinition",
            "src": "691:260:6"
          },
          {
            "attributes": {
              "functionSelector": "d3986f08",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "swap",
              "scope": 1498,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "scope": 1493,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1384,
                        "name": "ElementaryTypeName",
                        "src": "1108:7:6"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
<<<<<<< HEAD
<<<<<<< HEAD
                    "id": 1174,
                    "name": "VariableDeclarationStatement",
                    "src": "3106:32:4"
||||||| merged common ancestors
                    "id": 1249,
                    "name": "VariableDeclaration",
                    "src": "1108:14:5"
=======
                    "id": 1385,
                    "name": "VariableDeclaration",
                    "src": "1108:14:6"
>>>>>>> origin/ajibigad/token-swap
                  },
<<<<<<< HEAD
||||||| merged common ancestors
                    "id": 1015,
||||||| merged common ancestors
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "to",
                      "scope": 1357,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1250,
                        "name": "ElementaryTypeName",
                        "src": "1124:7:5"
                      }
                    ],
                    "id": 1251,
=======
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "to",
                      "scope": 1493,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1386,
                        "name": "ElementaryTypeName",
                        "src": "1124:7:6"
                      }
                    ],
                    "id": 1387,
>>>>>>> origin/ajibigad/token-swap
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "1509:13:3"
||||||| merged common ancestors
                    "src": "1124:10:5"
=======
                    "src": "1124:10:6"
>>>>>>> origin/ajibigad/token-swap
                  }
                ],
<<<<<<< HEAD
                "id": 1016,
||||||| merged common ancestors
                "id": 1252,
=======
                "id": 1388,
>>>>>>> origin/ajibigad/token-swap
                "name": "ParameterList",
<<<<<<< HEAD
                "src": "1396:132:3"
||||||| merged common ancestors
                "src": "1107:28:5"
=======
                "src": "1107:28:6"
>>>>>>> origin/ajibigad/token-swap
              },
              {
                "children": [
=======
                    "id": 1296,
                    "name": "ExpressionStatement",
                    "src": "1413:14:5"
                  },
>>>>>>> origin/ajibigad/token-swap
                  {
<<<<<<< HEAD
||||||| merged common ancestors
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
<<<<<<< HEAD
                      "name": "amounts",
                      "scope": 1022,
||||||| merged common ancestors
                      "name": "",
                      "scope": 1357,
=======
                      "name": "",
                      "scope": 1493,
>>>>>>> origin/ajibigad/token-swap
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[]",
                      "visibility": "internal"
                    },
=======
                    "attributes": {
                      "assignments": [
                        1298
                      ]
                    },
>>>>>>> origin/ajibigad/token-swap
                    "children": [
                      {
                        "attributes": {
<<<<<<< HEAD
<<<<<<< HEAD
||||||| merged common ancestors
                          "type": "uint256[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 1253,
                            "name": "ElementaryTypeName",
                            "src": "1152:4:5"
                          }
                        ],
                        "id": 1254,
                        "name": "ArrayTypeName",
                        "src": "1152:6:5"
                      }
                    ],
                    "id": 1255,
                    "name": "VariableDeclaration",
                    "src": "1152:13:5"
                  }
                ],
                "id": 1256,
                "name": "ParameterList",
                "src": "1151:15:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
=======
                          "type": "uint256[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 1389,
                            "name": "ElementaryTypeName",
                            "src": "1152:4:6"
                          }
                        ],
                        "id": 1390,
                        "name": "ArrayTypeName",
                        "src": "1152:6:6"
                      }
                    ],
                    "id": 1391,
                    "name": "VariableDeclaration",
                    "src": "1152:13:6"
                  }
                ],
                "id": 1392,
                "name": "ParameterList",
                "src": "1151:15:6"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
>>>>>>> origin/ajibigad/token-swap
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
||||||| merged common ancestors
                          "type": "uint256[]"
=======
                          "constant": false,
                          "mutability": "mutable",
                          "name": "deadline",
                          "scope": 1356,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "type": "function () payable external"
                            },
<<<<<<< HEAD
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "deposit",
                                  "referencedDeclaration": 17,
                                  "type": "function () payable external"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
<<<<<<< HEAD
                                      "referencedDeclaration": 1170,
                                      "type": "contract Bep20",
                                      "value": "wbnbContract"
||||||| merged common ancestors
                                      "referencedDeclaration": 1215,
                                      "type": "contract BEP20",
                                      "value": "wBNBToken"
=======
                                      "referencedDeclaration": 1351,
                                      "type": "contract BEP20",
                                      "value": "wBNBToken"
>>>>>>> origin/ajibigad/token-swap
                                    },
<<<<<<< HEAD
                                    "id": 1175,
||||||| merged common ancestors
                                    "id": 1257,
=======
                                    "id": 1393,
>>>>>>> origin/ajibigad/token-swap
                                    "name": "Identifier",
<<<<<<< HEAD
                                    "src": "3198:12:4"
||||||| merged common ancestors
                                    "src": "1177:9:5"
=======
                                    "src": "1177:9:6"
>>>>>>> origin/ajibigad/token-swap
                                  }
                                ],
<<<<<<< HEAD
                                "id": 1177,
||||||| merged common ancestors
                                "id": 1259,
=======
                                "id": 1395,
>>>>>>> origin/ajibigad/token-swap
                                "name": "MemberAccess",
<<<<<<< HEAD
                                "src": "3198:20:4"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1149,
                                  "type": "uint256",
                                  "value": "amount"
                                },
                                "id": 1178,
                                "name": "Identifier",
                                "src": "3226:6:4"
                              }
                            ],
                            "id": 1179,
                            "name": "FunctionCallOptions",
                            "src": "3198:35:4"
||||||| merged common ancestors
                            "id": 1017,
                            "name": "ElementaryTypeName",
                            "src": "1547:4:3"
=======
                            "id": 1297,
                            "name": "ElementaryTypeName",
                            "src": "1437:4:5"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
<<<<<<< HEAD
                        "id": 1180,
                        "name": "FunctionCall",
                        "src": "3198:37:4"
                      }
                    ],
                    "id": 1181,
                    "name": "ExpressionStatement",
                    "src": "3198:37:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "approve",
                              "referencedDeclaration": 13,
                              "type": "function (address,uint256) external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1170,
                                  "type": "contract Bep20",
                                  "value": "wbnbContract"
                                },
                                "id": 1182,
                                "name": "Identifier",
                                "src": "3278:12:4"
                              }
                            ],
                            "id": 1184,
                            "name": "MemberAccess",
                            "src": "3278:20:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_HelperPancakeSwap_ROUTER_$1138",
                                      "typeString": "contract HelperPancakeSwap_ROUTER"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 1185,
                                    "name": "ElementaryTypeName",
                                    "src": "3299:7:4"
                                  }
                                ],
                                "id": 1186,
                                "name": "ElementaryTypeNameExpression",
                                "src": "3299:7:4"
||||||| merged common ancestors
                                "src": "1177:17:5"
=======
                                "src": "1177:17:6"
>>>>>>> origin/ajibigad/token-swap
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 1158,
                                  "type": "contract HelperPancakeSwap_ROUTER",
                                  "value": "router"
||||||| merged common ancestors
                                  "referencedDeclaration": 1249,
                                  "type": "uint256",
                                  "value": "amount"
=======
                                  "referencedDeclaration": 1385,
                                  "type": "uint256",
                                  "value": "amount"
>>>>>>> origin/ajibigad/token-swap
                                },
<<<<<<< HEAD
                                "id": 1187,
||||||| merged common ancestors
                                "id": 1260,
=======
                                "id": 1396,
>>>>>>> origin/ajibigad/token-swap
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "3307:6:4"
||||||| merged common ancestors
                                "src": "1202:6:5"
=======
                                "src": "1202:6:6"
>>>>>>> origin/ajibigad/token-swap
                              }
                            ],
<<<<<<< HEAD
                            "id": 1188,
                            "name": "FunctionCall",
                            "src": "3299:15:4"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 1189,
                            "name": "Literal",
                            "src": "3316:1:4"
||||||| merged common ancestors
                            "id": 1261,
                            "name": "FunctionCallOptions",
                            "src": "1177:32:5"
=======
                            "id": 1397,
                            "name": "FunctionCallOptions",
                            "src": "1177:32:6"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
<<<<<<< HEAD
                        "id": 1190,
||||||| merged common ancestors
                        "id": 1262,
=======
                        "id": 1398,
>>>>>>> origin/ajibigad/token-swap
                        "name": "FunctionCall",
<<<<<<< HEAD
                        "src": "3278:40:4"
||||||| merged common ancestors
                        "src": "1177:34:5"
=======
                        "src": "1177:34:6"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
<<<<<<< HEAD
                    "id": 1191,
||||||| merged common ancestors
                    "id": 1263,
=======
                    "id": 1399,
>>>>>>> origin/ajibigad/token-swap
                    "name": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "3278:40:4"
||||||| merged common ancestors
                    "src": "1177:34:5"
=======
                    "src": "1177:34:6"
>>>>>>> origin/ajibigad/token-swap
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "approve",
                              "referencedDeclaration": 13,
                              "type": "function (address,uint256) external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 1170,
                                  "type": "contract Bep20",
                                  "value": "wbnbContract"
||||||| merged common ancestors
                                  "referencedDeclaration": 1215,
                                  "type": "contract BEP20",
                                  "value": "wBNBToken"
=======
                                  "referencedDeclaration": 1351,
                                  "type": "contract BEP20",
                                  "value": "wBNBToken"
>>>>>>> origin/ajibigad/token-swap
                                },
<<<<<<< HEAD
                                "id": 1192,
||||||| merged common ancestors
                                "id": 1264,
=======
                                "id": 1400,
>>>>>>> origin/ajibigad/token-swap
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "3358:12:4"
||||||| merged common ancestors
                                "src": "1243:9:5"
=======
                                "src": "1243:9:6"
>>>>>>> origin/ajibigad/token-swap
                              }
                            ],
<<<<<<< HEAD
                            "id": 1194,
||||||| merged common ancestors
                            "id": 1266,
=======
                            "id": 1402,
>>>>>>> origin/ajibigad/token-swap
                            "name": "MemberAccess",
<<<<<<< HEAD
                            "src": "3358:20:4"
||||||| merged common ancestors
                            "src": "1243:17:5"
=======
                            "src": "1243:17:6"
>>>>>>> origin/ajibigad/token-swap
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
<<<<<<< HEAD
                                      "typeIdentifier": "t_contract$_HelperPancakeSwap_ROUTER_$1138",
                                      "typeString": "contract HelperPancakeSwap_ROUTER"
||||||| merged common ancestors
                                      "typeIdentifier": "t_contract$_HelperPancakeSwapROUTER_$68",
                                      "typeString": "contract HelperPancakeSwapROUTER"
=======
                                      "typeIdentifier": "t_contract$_HelperPancakeSwapROUTER_$101",
                                      "typeString": "contract HelperPancakeSwapROUTER"
>>>>>>> origin/ajibigad/token-swap
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
<<<<<<< HEAD
                                    "id": 1195,
||||||| merged common ancestors
                                    "id": 1267,
=======
                                    "id": 1403,
>>>>>>> origin/ajibigad/token-swap
                                    "name": "ElementaryTypeName",
<<<<<<< HEAD
                                    "src": "3379:7:4"
||||||| merged common ancestors
                                    "src": "1261:7:5"
=======
                                    "src": "1261:7:6"
>>>>>>> origin/ajibigad/token-swap
                                  }
                                ],
<<<<<<< HEAD
                                "id": 1196,
||||||| merged common ancestors
                                "id": 1268,
=======
                                "id": 1404,
>>>>>>> origin/ajibigad/token-swap
                                "name": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                                "src": "3379:7:4"
||||||| merged common ancestors
                                "src": "1261:7:5"
=======
                                "src": "1261:7:6"
>>>>>>> origin/ajibigad/token-swap
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 1158,
                                  "type": "contract HelperPancakeSwap_ROUTER",
||||||| merged common ancestors
                                  "referencedDeclaration": 1219,
                                  "type": "contract HelperPancakeSwapROUTER",
=======
                                  "referencedDeclaration": 1355,
                                  "type": "contract HelperPancakeSwapROUTER",
>>>>>>> origin/ajibigad/token-swap
                                  "value": "router"
                                },
<<<<<<< HEAD
                                "id": 1197,
||||||| merged common ancestors
                                "id": 1269,
=======
                                "id": 1405,
>>>>>>> origin/ajibigad/token-swap
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "3387:6:4"
||||||| merged common ancestors
                                "src": "1269:6:5"
=======
                                "src": "1269:6:6"
>>>>>>> origin/ajibigad/token-swap
                              }
                            ],
<<<<<<< HEAD
                            "id": 1198,
||||||| merged common ancestors
                            "id": 1270,
=======
                            "id": 1406,
>>>>>>> origin/ajibigad/token-swap
                            "name": "FunctionCall",
<<<<<<< HEAD
                            "src": "3379:15:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1149,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 1199,
                            "name": "Identifier",
                            "src": "3396:6:4"
                          }
                        ],
                        "id": 1200,
                        "name": "FunctionCall",
                        "src": "3358:45:4"
                      }
                    ],
                    "id": 1201,
                    "name": "ExpressionStatement",
                    "src": "3358:45:4"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        1203
                      ]
                    },
                    "children": [
||||||| merged common ancestors
                        "id": 1018,
                        "name": "ArrayTypeName",
                        "src": "1547:6:3"
                      }
                    ],
                    "id": 1019,
                    "name": "VariableDeclaration",
                    "src": "1547:21:3"
                  }
                ],
                "id": 1020,
                "name": "ParameterList",
                "src": "1546:23:3"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 1021,
                "name": "Block",
                "src": "1570:2:3"
              }
            ],
            "id": 1022,
            "name": "FunctionDefinition",
            "src": "1363:209:3"
          },
          {
            "attributes": {
              "functionSelector": "5c11d795",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
              "scope": 1038,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "scope": 1037,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 1023,
                        "name": "ElementaryTypeName",
                        "src": "2051:4:3"
                      }
                    ],
                    "id": 1024,
                    "name": "VariableDeclaration",
                    "src": "2051:13:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amountOutMin",
                      "scope": 1037,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 1025,
                        "name": "ElementaryTypeName",
                        "src": "2074:4:3"
                      }
                    ],
                    "id": 1026,
                    "name": "VariableDeclaration",
                    "src": "2074:17:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "path",
                      "scope": 1037,
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "type": "address[]",
                      "visibility": "internal"
                    },
                    "children": [
=======
                        "id": 1298,
                        "name": "VariableDeclaration",
                        "src": "1437:13:5"
                      },
>>>>>>> origin/ajibigad/token-swap
                      {
                        "attributes": {
<<<<<<< HEAD
                          "constant": false,
                          "mutability": "mutable",
                          "name": "amountIn",
                          "scope": 1266,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
||||||| merged common ancestors
                          "type": "address[]"
=======
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "+",
                          "type": "uint256"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "children": [
                          {
                            "attributes": {
<<<<<<< HEAD
                              "name": "uint256",
                              "type": "uint256"
||||||| merged common ancestors
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
=======
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "timestamp",
                              "type": "uint256"
>>>>>>> origin/ajibigad/token-swap
                            },
<<<<<<< HEAD
                            "id": 1202,
                            "name": "ElementaryTypeName",
                            "src": "3459:7:4"
||||||| merged common ancestors
                            "id": 1027,
                            "name": "ElementaryTypeName",
                            "src": "2101:7:3"
=======
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967292,
                                  "type": "block",
                                  "value": "block"
                                },
                                "id": 1299,
                                "name": "Identifier",
                                "src": "1453:5:5"
                              }
                            ],
                            "id": 1300,
                            "name": "MemberAccess",
                            "src": "1453:15:5"
||||||| merged common ancestors
                            "src": "1261:15:5"
=======
                            "src": "1261:15:6"
>>>>>>> origin/ajibigad/token-swap
                          },
                          {
                            "attributes": {
<<<<<<< HEAD
                              "hexvalue": "3130",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": "minutes",
                              "token": "number",
                              "type": "int_const 600",
                              "value": "10"
                            },
                            "id": 1301,
                            "name": "Literal",
                            "src": "1471:10:5"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
<<<<<<< HEAD
                        "id": 1203,
                        "name": "VariableDeclaration",
                        "src": "3459:16:4"
                      },
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 1149,
                          "type": "uint256",
                          "value": "amount"
                        },
                        "id": 1204,
                        "name": "Identifier",
                        "src": "3478:6:4"
                      }
                    ],
                    "id": 1205,
                    "name": "VariableDeclarationStatement",
                    "src": "3459:25:4"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        1207
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "amountOutMin",
                          "scope": 1266,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
||||||| merged common ancestors
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1249,
                              "type": "uint256",
                              "value": "amount"
=======
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1385,
                              "type": "uint256",
                              "value": "amount"
>>>>>>> origin/ajibigad/token-swap
                            },
<<<<<<< HEAD
                            "id": 1206,
                            "name": "ElementaryTypeName",
                            "src": "3495:7:4"
||||||| merged common ancestors
                            "id": 1271,
                            "name": "Identifier",
                            "src": "1278:6:5"
=======
                            "id": 1407,
                            "name": "Identifier",
                            "src": "1278:6:6"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
<<<<<<< HEAD
                        "id": 1207,
                        "name": "VariableDeclaration",
                        "src": "3495:20:4"
                      },
                      {
                        "attributes": {
                          "hexvalue": "30",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "number",
                          "type": "int_const 0",
                          "value": "0"
                        },
                        "id": 1208,
                        "name": "Literal",
                        "src": "3518:1:4"
||||||| merged common ancestors
                        "id": 1028,
                        "name": "ArrayTypeName",
                        "src": "2101:9:3"
||||||| merged common ancestors
                        "id": 1272,
                        "name": "FunctionCall",
                        "src": "1243:42:5"
=======
                        "id": 1408,
                        "name": "FunctionCall",
                        "src": "1243:42:6"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
<<<<<<< HEAD
                    "id": 1029,
                    "name": "VariableDeclaration",
                    "src": "2101:23:3"
||||||| merged common ancestors
                    "id": 1273,
                    "name": "ExpressionStatement",
                    "src": "1243:42:5"
=======
                    "id": 1409,
                    "name": "ExpressionStatement",
                    "src": "1243:42:6"
>>>>>>> origin/ajibigad/token-swap
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "to",
                      "scope": 1037,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1030,
                        "name": "ElementaryTypeName",
                        "src": "2134:7:3"
=======
                        "id": 1302,
                        "name": "BinaryOperation",
                        "src": "1453:28:5"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
<<<<<<< HEAD
                    "id": 1209,
                    "name": "VariableDeclarationStatement",
                    "src": "3495:24:4"
||||||| merged common ancestors
                    "id": 1031,
                    "name": "VariableDeclaration",
                    "src": "2134:10:3"
=======
                    "id": 1303,
                    "name": "VariableDeclarationStatement",
                    "src": "1437:44:5"
>>>>>>> origin/ajibigad/token-swap
                  },
                  {
                    "attributes": {
<<<<<<< HEAD
                      "assignments": [
<<<<<<< HEAD
                        1214
                      ]
||||||| merged common ancestors
                      "constant": false,
                      "mutability": "mutable",
                      "name": "deadline",
                      "scope": 1037,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
=======
                      "assignments": [
                        1308
||||||| merged common ancestors
                        1278
=======
                        1414
>>>>>>> origin/ajibigad/token-swap
                      ]
>>>>>>> origin/ajibigad/token-swap
                    },
                    "children": [
                      {
                        "attributes": {
<<<<<<< HEAD
                          "constant": false,
                          "mutability": "mutable",
                          "name": "path",
<<<<<<< HEAD
                          "scope": 1266,
||||||| merged common ancestors
                          "scope": 1356,
=======
                          "scope": 1492,
>>>>>>> origin/ajibigad/token-swap
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "address[]",
                          "visibility": "internal"
||||||| merged common ancestors
                          "name": "uint",
                          "type": "uint256"
=======
                          "constant": false,
                          "mutability": "mutable",
                          "name": "amountOut",
                          "scope": 1356,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "uint256[]",
                          "visibility": "internal"
>>>>>>> origin/ajibigad/token-swap
                        },
<<<<<<< HEAD
                        "children": [
                          {
                            "attributes": {
                              "type": "address[]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "address",
                                  "type": "address"
                                },
<<<<<<< HEAD
                                "id": 1212,
||||||| merged common ancestors
                                "id": 1276,
=======
                                "id": 1412,
>>>>>>> origin/ajibigad/token-swap
                                "name": "ElementaryTypeName",
<<<<<<< HEAD
                                "src": "3530:7:4"
||||||| merged common ancestors
                                "src": "1339:7:5"
=======
                                "src": "1339:7:6"
>>>>>>> origin/ajibigad/token-swap
                              }
                            ],
<<<<<<< HEAD
                            "id": 1213,
||||||| merged common ancestors
                            "id": 1277,
=======
                            "id": 1413,
>>>>>>> origin/ajibigad/token-swap
                            "name": "ArrayTypeName",
<<<<<<< HEAD
                            "src": "3530:9:4"
||||||| merged common ancestors
                            "src": "1339:9:5"
=======
                            "src": "1339:9:6"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
<<<<<<< HEAD
                        "id": 1214,
||||||| merged common ancestors
                        "id": 1278,
=======
                        "id": 1414,
>>>>>>> origin/ajibigad/token-swap
                        "name": "VariableDeclaration",
<<<<<<< HEAD
                        "src": "3530:21:4"
||||||| merged common ancestors
                        "src": "1339:21:5"
=======
                        "src": "1339:21:6"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "address[] memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "function (uint256) pure returns (address[] memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "type": "address[]"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address",
                                      "stateMutability": "nonpayable",
                                      "type": "address"
                                    },
<<<<<<< HEAD
                                    "id": 1215,
||||||| merged common ancestors
                                    "id": 1279,
=======
                                    "id": 1415,
>>>>>>> origin/ajibigad/token-swap
                                    "name": "ElementaryTypeName",
<<<<<<< HEAD
                                    "src": "3558:7:4"
||||||| merged common ancestors
                                    "src": "1367:7:5"
=======
                                    "src": "1367:7:6"
>>>>>>> origin/ajibigad/token-swap
                                  }
                                ],
<<<<<<< HEAD
                                "id": 1216,
||||||| merged common ancestors
                                "id": 1280,
=======
                                "id": 1416,
>>>>>>> origin/ajibigad/token-swap
                                "name": "ArrayTypeName",
<<<<<<< HEAD
                                "src": "3558:9:4"
||||||| merged common ancestors
                                "src": "1367:9:5"
=======
                                "src": "1367:9:6"
>>>>>>> origin/ajibigad/token-swap
                              }
                            ],
<<<<<<< HEAD
                            "id": 1217,
||||||| merged common ancestors
                            "id": 1281,
=======
                            "id": 1417,
>>>>>>> origin/ajibigad/token-swap
                            "name": "NewExpression",
<<<<<<< HEAD
                            "src": "3554:13:4"
||||||| merged common ancestors
                            "src": "1363:13:5"
=======
                            "src": "1363:13:6"
>>>>>>> origin/ajibigad/token-swap
                          },
                          {
                            "attributes": {
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
<<<<<<< HEAD
                            "id": 1218,
||||||| merged common ancestors
                            "id": 1282,
=======
                            "id": 1418,
>>>>>>> origin/ajibigad/token-swap
                            "name": "Literal",
<<<<<<< HEAD
                            "src": "3568:1:4"
||||||| merged common ancestors
                            "src": "1377:1:5"
=======
                            "src": "1377:1:6"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
<<<<<<< HEAD
                        "id": 1219,
||||||| merged common ancestors
                        "id": 1283,
=======
                        "id": 1419,
>>>>>>> origin/ajibigad/token-swap
                        "name": "FunctionCall",
<<<<<<< HEAD
                        "src": "3554:16:4"
||||||| merged common ancestors
                        "src": "1363:16:5"
=======
                        "src": "1363:16:6"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
<<<<<<< HEAD
                    "id": 1220,
||||||| merged common ancestors
                    "id": 1284,
=======
                    "id": 1420,
>>>>>>> origin/ajibigad/token-swap
                    "name": "VariableDeclarationStatement",
<<<<<<< HEAD
                    "src": "3530:40:4"
||||||| merged common ancestors
                    "src": "1339:40:5"
=======
                    "src": "1339:40:6"
>>>>>>> origin/ajibigad/token-swap
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 1214,
||||||| merged common ancestors
                                  "referencedDeclaration": 1278,
=======
                                  "referencedDeclaration": 1414,
>>>>>>> origin/ajibigad/token-swap
                                  "type": "address[] memory",
                                  "value": "path"
                                },
<<<<<<< HEAD
                                "id": 1221,
||||||| merged common ancestors
                                "id": 1285,
=======
                                "id": 1421,
>>>>>>> origin/ajibigad/token-swap
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "3581:4:4"
||||||| merged common ancestors
                                "src": "1389:4:5"
=======
                                "src": "1389:4:6"
>>>>>>> origin/ajibigad/token-swap
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
<<<<<<< HEAD
                                "id": 1222,
||||||| merged common ancestors
                                "id": 1286,
=======
                                "id": 1422,
>>>>>>> origin/ajibigad/token-swap
                                "name": "Literal",
<<<<<<< HEAD
                                "src": "3586:1:4"
||||||| merged common ancestors
                                "src": "1394:1:5"
=======
                                "src": "1394:1:6"
>>>>>>> origin/ajibigad/token-swap
                              }
                            ],
<<<<<<< HEAD
                            "id": 1223,
||||||| merged common ancestors
                            "id": 1287,
=======
                            "id": 1423,
>>>>>>> origin/ajibigad/token-swap
                            "name": "IndexAccess",
<<<<<<< HEAD
                            "src": "3581:7:4"
||||||| merged common ancestors
                            "src": "1389:7:5"
=======
                            "src": "1389:7:6"
>>>>>>> origin/ajibigad/token-swap
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
<<<<<<< HEAD
                              "tryCall": false,
||||||| merged common ancestors
                              "referencedDeclaration": 1207,
=======
                              "referencedDeclaration": 1343,
>>>>>>> origin/ajibigad/token-swap
                              "type": "address",
<<<<<<< HEAD
                              "type_conversion": true
||||||| merged common ancestors
                              "value": "wBNB"
                            },
                            "id": 1288,
                            "name": "Identifier",
                            "src": "1399:4:5"
                          }
                        ],
                        "id": 1289,
                        "name": "Assignment",
                        "src": "1389:14:5"
                      }
                    ],
                    "id": 1290,
                    "name": "ExpressionStatement",
                    "src": "1389:14:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "address"
=======
                              "value": "wBNB"
                            },
                            "id": 1424,
                            "name": "Identifier",
                            "src": "1399:4:6"
                          }
                        ],
                        "id": 1425,
                        "name": "Assignment",
                        "src": "1389:14:6"
                      }
                    ],
                    "id": 1426,
                    "name": "ExpressionStatement",
                    "src": "1389:14:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "address"
>>>>>>> origin/ajibigad/token-swap
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Bep20_$18",
                                      "typeString": "contract Bep20"
                                    }
                                  ],
<<<<<<< HEAD
||||||| merged common ancestors
                                  "referencedDeclaration": 1278,
                                  "type": "address[] memory",
                                  "value": "path"
                                },
                                "id": 1291,
                                "name": "Identifier",
                                "src": "1413:4:5"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "31",
=======
                                  "referencedDeclaration": 1414,
                                  "type": "address[] memory",
                                  "value": "path"
                                },
                                "id": 1427,
                                "name": "Identifier",
                                "src": "1413:4:6"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "31",
>>>>>>> origin/ajibigad/token-swap
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
<<<<<<< HEAD
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 1224,
                                    "name": "ElementaryTypeName",
                                    "src": "3591:7:4"
                                  }
                                ],
                                "id": 1225,
                                "name": "ElementaryTypeNameExpression",
                                "src": "3591:7:4"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1170,
                                  "type": "contract Bep20",
                                  "value": "wbnbContract"
                                },
                                "id": 1226,
                                "name": "Identifier",
                                "src": "3599:12:4"
||||||| merged common ancestors
                                "id": 1292,
                                "name": "Literal",
                                "src": "1418:1:5"
=======
                                "id": 1428,
                                "name": "Literal",
                                "src": "1418:1:6"
>>>>>>> origin/ajibigad/token-swap
                              }
                            ],
<<<<<<< HEAD
                            "id": 1227,
                            "name": "FunctionCall",
                            "src": "3591:21:4"
||||||| merged common ancestors
                            "id": 1293,
                            "name": "IndexAccess",
                            "src": "1413:7:5"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1210,
                              "type": "address",
                              "value": "BUSD"
                            },
                            "id": 1294,
                            "name": "Identifier",
                            "src": "1423:4:5"
=======
                            "id": 1429,
                            "name": "IndexAccess",
                            "src": "1413:7:6"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1346,
                              "type": "address",
                              "value": "BUSD"
                            },
                            "id": 1430,
                            "name": "Identifier",
                            "src": "1423:4:6"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
<<<<<<< HEAD
                        "id": 1228,
||||||| merged common ancestors
                        "id": 1295,
=======
                        "id": 1431,
>>>>>>> origin/ajibigad/token-swap
                        "name": "Assignment",
<<<<<<< HEAD
                        "src": "3581:31:4"
||||||| merged common ancestors
                        "src": "1413:14:5"
=======
                        "src": "1413:14:6"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
<<<<<<< HEAD
                    "id": 1229,
||||||| merged common ancestors
                    "id": 1296,
=======
                    "id": 1432,
>>>>>>> origin/ajibigad/token-swap
                    "name": "ExpressionStatement",
<<<<<<< HEAD
                    "src": "3581:31:4"
||||||| merged common ancestors
                    "src": "1413:14:5"
=======
                    "src": "1413:14:6"
>>>>>>> origin/ajibigad/token-swap
                  },
                  {
<<<<<<< HEAD
||||||| merged common ancestors
                    "attributes": {
                      "assignments": [
                        1298
                      ]
                    },
=======
                    "attributes": {
                      "assignments": [
                        1434
                      ]
                    },
>>>>>>> origin/ajibigad/token-swap
                    "children": [
                      {
                        "attributes": {
<<<<<<< HEAD
||||||| merged common ancestors
                          "constant": false,
                          "mutability": "mutable",
                          "name": "deadline",
                          "scope": 1356,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 1297,
                            "name": "ElementaryTypeName",
                            "src": "1437:4:5"
                          }
                        ],
                        "id": 1298,
                        "name": "VariableDeclaration",
                        "src": "1437:13:5"
                      },
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
=======
                          "constant": false,
                          "mutability": "mutable",
                          "name": "deadline",
                          "scope": 1492,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 1433,
                            "name": "ElementaryTypeName",
                            "src": "1437:4:6"
                          }
                        ],
                        "id": 1434,
                        "name": "VariableDeclaration",
                        "src": "1437:13:6"
                      },
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
>>>>>>> origin/ajibigad/token-swap
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1214,
                                  "type": "address[] memory",
                                  "value": "path"
                                },
<<<<<<< HEAD
                                "id": 1230,
||||||| merged common ancestors
                                "id": 1299,
=======
                                "id": 1435,
>>>>>>> origin/ajibigad/token-swap
                                "name": "Identifier",
<<<<<<< HEAD
                                "src": "3623:4:4"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 1231,
                                "name": "Literal",
                                "src": "3628:1:4"
||||||| merged common ancestors
                                "src": "1453:5:5"
=======
                                "src": "1453:5:6"
>>>>>>> origin/ajibigad/token-swap
                              }
                            ],
<<<<<<< HEAD
                            "id": 1232,
                            "name": "IndexAccess",
                            "src": "3623:7:4"
||||||| merged common ancestors
                            "id": 1300,
                            "name": "MemberAccess",
                            "src": "1453:15:5"
=======
                            "id": 1436,
                            "name": "MemberAccess",
                            "src": "1453:15:6"
>>>>>>> origin/ajibigad/token-swap
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
<<<<<<< HEAD
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Bep20_$18",
                                      "typeString": "contract Bep20"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 1233,
                                    "name": "ElementaryTypeName",
                                    "src": "3633:7:4"
                                  }
                                ],
                                "id": 1234,
                                "name": "ElementaryTypeNameExpression",
                                "src": "3633:7:4"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1164,
                                  "type": "contract Bep20",
                                  "value": "busdContract"
                                },
                                "id": 1235,
                                "name": "Identifier",
                                "src": "3641:12:4"
                              }
                            ],
                            "id": 1236,
                            "name": "FunctionCall",
                            "src": "3633:21:4"
||||||| merged common ancestors
                            "id": 1301,
                            "name": "Literal",
                            "src": "1471:10:5"
=======
                            "id": 1437,
                            "name": "Literal",
                            "src": "1471:10:6"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
<<<<<<< HEAD
                        "id": 1237,
                        "name": "Assignment",
                        "src": "3623:31:4"
||||||| merged common ancestors
                        "id": 1302,
                        "name": "BinaryOperation",
                        "src": "1453:28:5"
=======
                        "id": 1438,
                        "name": "BinaryOperation",
                        "src": "1453:28:6"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
<<<<<<< HEAD
                    "id": 1238,
                    "name": "ExpressionStatement",
                    "src": "3623:31:4"
||||||| merged common ancestors
                    "id": 1303,
                    "name": "VariableDeclarationStatement",
                    "src": "1437:44:5"
=======
                    "id": 1439,
                    "name": "VariableDeclarationStatement",
                    "src": "1437:44:6"
>>>>>>> origin/ajibigad/token-swap
                  },
                  {
                    "attributes": {
                      "assignments": [
<<<<<<< HEAD
                        1240
||||||| merged common ancestors
                        1308
=======
                        1444
>>>>>>> origin/ajibigad/token-swap
                      ]
                    },
                    "children": [
<<<<<<< HEAD
||||||| merged common ancestors
                        "id": 1032,
                        "name": "ElementaryTypeName",
                        "src": "2154:4:3"
                      }
                    ],
                    "id": 1033,
                    "name": "VariableDeclaration",
                    "src": "2154:13:3"
                  }
                ],
                "id": 1034,
                "name": "ParameterList",
                "src": "2041:132:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1035,
                "name": "ParameterList",
                "src": "2183:0:3"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 1036,
                "name": "Block",
                "src": "2183:2:3"
              }
            ],
            "id": 1037,
            "name": "FunctionDefinition",
            "src": "1979:206:3"
          }
        ],
        "id": 1038,
        "name": "ContractDefinition",
        "src": "105:2087:3"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1059
          ],
          "name": "SmartExchange",
          "scope": 1060
        },
        "children": [
          {
            "attributes": {
              "constant": false,
              "functionSelector": "897534a9",
              "mutability": "mutable",
              "name": "totalTreasury",
              "scope": 1059,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 1039,
                "name": "ElementaryTypeName",
                "src": "2277:7:3"
              }
            ],
            "id": 1040,
            "name": "VariableDeclaration",
            "src": "2277:28:3"
          },
          {
            "attributes": {
              "constant": true,
              "functionSelector": "e71efd95",
              "mutability": "constant",
              "name": "pROUTER",
              "scope": 1059,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 1041,
                "name": "ElementaryTypeName",
                "src": "2311:7:3"
              },
              {
                "attributes": {
                  "hexvalue": "307844393944316333334639664333343434663831303137353461424334366335323431363535304431",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "address payable",
                  "value": "0xD99D1c33F9fC3444f8101754aBC46c52416550D1"
                },
                "id": 1042,
                "name": "Literal",
                "src": "2345:42:3"
              }
            ],
            "id": 1043,
            "name": "VariableDeclaration",
            "src": "2311:76:3"
          },
          {
            "attributes": {
              "constant": true,
              "functionSelector": "990cc058",
              "mutability": "constant",
              "name": "pFACTORY",
              "scope": 1059,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 1044,
                "name": "ElementaryTypeName",
                "src": "2429:7:3"
              },
              {
                "attributes": {
                  "hexvalue": "307836373235463330336236353761393435316438424136343133343862363736314136434337613137",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "address payable",
                  "value": "0x6725F303b657a9451d8BA641348b6761A6CC7a17"
                },
                "id": 1045,
                "name": "Literal",
                "src": "2464:42:3"
              }
            ],
            "id": 1046,
            "name": "VariableDeclaration",
            "src": "2429:77:3"
          },
          {
            "attributes": {
              "functionSelector": "2afcf480",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "invest",
              "scope": 1059,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "scope": 1058,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
=======
||||||| merged common ancestors
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "amountOut",
                          "scope": 1356,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "uint256[]",
                          "visibility": "internal"
                        },
=======
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "amountOut",
                          "scope": 1492,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "uint256[]",
                          "visibility": "internal"
                        },
>>>>>>> origin/ajibigad/token-swap
                        "children": [
                          {
                            "attributes": {
                              "type": "uint256[]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint",
                                  "type": "uint256"
                                },
                                "id": 1442,
                                "name": "ElementaryTypeName",
                                "src": "1512:4:6"
                              }
                            ],
                            "id": 1443,
                            "name": "ArrayTypeName",
                            "src": "1512:6:6"
                          }
                        ],
                        "id": 1444,
                        "name": "VariableDeclaration",
                        "src": "1512:23:6"
                      },
>>>>>>> origin/ajibigad/token-swap
                      {
                        "attributes": {
<<<<<<< HEAD
                          "constant": false,
                          "mutability": "mutable",
                          "name": "to",
                          "scope": 1266,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "visibility": "internal"
||||||| merged common ancestors
                          "name": "uint256",
                          "type": "uint256"
=======
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256[] memory",
                          "type_conversion": false
>>>>>>> origin/ajibigad/token-swap
                        },
<<<<<<< HEAD
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "nonpayable",
                              "type": "address"
                            },
                            "id": 1239,
                            "name": "ElementaryTypeName",
                            "src": "3665:7:4"
                          }
                        ],
                        "id": 1240,
                        "name": "VariableDeclaration",
                        "src": "3665:10:4"
                      },
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 1151,
                          "type": "address",
                          "value": "to"
                        },
                        "id": 1241,
                        "name": "Identifier",
                        "src": "3678:2:4"
||||||| merged common ancestors
                        "id": 1047,
                        "name": "ElementaryTypeName",
                        "src": "2570:7:3"
=======
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "swapExactTokensForTokens",
                              "referencedDeclaration": 85,
                              "type": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1355,
                                  "type": "contract HelperPancakeSwapROUTER",
                                  "value": "router"
                                },
                                "id": 1445,
                                "name": "Identifier",
                                "src": "1538:6:6"
                              }
                            ],
                            "id": 1446,
                            "name": "MemberAccess",
                            "src": "1538:31:6"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1385,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 1447,
                            "name": "Identifier",
                            "src": "1570:6:6"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 1448,
                            "name": "Literal",
                            "src": "1578:1:6"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1414,
                              "type": "address[] memory",
                              "value": "path"
                            },
                            "id": 1449,
                            "name": "Identifier",
                            "src": "1581:4:6"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1387,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 1450,
                            "name": "Identifier",
                            "src": "1587:2:6"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1434,
                              "type": "uint256",
                              "value": "deadline"
                            },
                            "id": 1451,
                            "name": "Identifier",
                            "src": "1591:8:6"
                          }
                        ],
                        "id": 1452,
                        "name": "FunctionCall",
<<<<<<< HEAD
                        "src": "1538:62:5"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "1538:62:5"
=======
                        "src": "1538:62:6"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
<<<<<<< HEAD
<<<<<<< HEAD
                    "id": 1242,
                    "name": "VariableDeclarationStatement",
                    "src": "3665:15:4"
                  },
||||||| merged common ancestors
                    "id": 1048,
                    "name": "VariableDeclaration",
                    "src": "2570:14:3"
                  }
                ],
                "id": 1049,
                "name": "ParameterList",
                "src": "2569:16:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1050,
                "name": "ParameterList",
                "src": "2593:0:3"
              },
              {
                "children": [
=======
                    "id": 1317,
||||||| merged common ancestors
                    "id": 1317,
=======
                    "id": 1453,
>>>>>>> origin/ajibigad/token-swap
                    "name": "VariableDeclarationStatement",
                    "src": "1512:88:6"
                  },
>>>>>>> origin/ajibigad/token-swap
                  {
                    "attributes": {
                      "assignments": [
<<<<<<< HEAD
<<<<<<< HEAD
                        1244
||||||| merged common ancestors
                        1052
=======
                        1319
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        1319
=======
                        1455
>>>>>>> origin/ajibigad/token-swap
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
<<<<<<< HEAD
                          "name": "deadline",
                          "scope": 1266,
||||||| merged common ancestors
                          "name": "underlying",
                          "scope": 1057,
=======
                          "name": "balance",
<<<<<<< HEAD
                          "scope": 1356,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                          "scope": 1356,
=======
                          "scope": 1492,
>>>>>>> origin/ajibigad/token-swap
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
<<<<<<< HEAD
                              "name": "uint",
                              "type": "uint256"
||||||| merged common ancestors
                              "name": "HelperPancakeSwap_ROUTER",
                              "referencedDeclaration": 1038,
                              "type": "contract HelperPancakeSwap_ROUTER"
=======
                              "name": "uint256",
                              "type": "uint256"
>>>>>>> origin/ajibigad/token-swap
                            },
<<<<<<< HEAD
<<<<<<< HEAD
                            "id": 1243,
                            "name": "ElementaryTypeName",
                            "src": "3691:4:4"
||||||| merged common ancestors
                            "id": 1051,
                            "name": "UserDefinedTypeName",
                            "src": "2612:24:3"
=======
                            "id": 1318,
||||||| merged common ancestors
                            "id": 1318,
=======
                            "id": 1454,
>>>>>>> origin/ajibigad/token-swap
                            "name": "ElementaryTypeName",
<<<<<<< HEAD
                            "src": "1619:7:5"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "1619:7:5"
=======
                            "src": "1619:7:6"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
<<<<<<< HEAD
<<<<<<< HEAD
                        "id": 1244,
||||||| merged common ancestors
                        "id": 1052,
=======
                        "id": 1319,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "id": 1319,
=======
                        "id": 1455,
>>>>>>> origin/ajibigad/token-swap
                        "name": "VariableDeclaration",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "3691:13:4"
||||||| merged common ancestors
                        "src": "2612:35:3"
=======
                        "src": "1619:15:5"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
<<<<<<< HEAD
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "+",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "timestamp",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967292,
                                  "type": "block",
                                  "value": "block"
                                },
                                "id": 1245,
                                "name": "Identifier",
                                "src": "3707:5:4"
                              }
                            ],
                            "id": 1246,
                            "name": "MemberAccess",
                            "src": "3707:15:4"
                          },
                          {
                            "attributes": {
                              "hexvalue": "3130",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": "minutes",
                              "token": "number",
                              "type": "int_const 600",
                              "value": "10"
                            },
                            "id": 1247,
                            "name": "Literal",
                            "src": "3725:10:4"
                          }
                        ],
                        "id": 1248,
                        "name": "BinaryOperation",
                        "src": "3707:28:4"
                      }
                    ],
                    "id": 1249,
                    "name": "VariableDeclarationStatement",
                    "src": "3691:44:4"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        1254
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "amountOut",
                          "scope": 1266,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "uint256[]",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "type": "uint256[]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint",
                                  "type": "uint256"
                                },
                                "id": 1252,
                                "name": "ElementaryTypeName",
                                "src": "3768:4:4"
                              }
                            ],
                            "id": 1253,
                            "name": "ArrayTypeName",
                            "src": "3768:6:4"
                          }
                        ],
                        "id": 1254,
                        "name": "VariableDeclaration",
                        "src": "3768:23:4"
||||||| merged common ancestors
                        "src": "1619:15:5"
=======
                        "src": "1619:15:6"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
||||||| merged common ancestors
                          "isPure": true,
=======
                          "isPure": false,
>>>>>>> origin/ajibigad/token-swap
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
<<<<<<< HEAD
                          "type": "uint256[] memory",
                          "type_conversion": false
||||||| merged common ancestors
                          "type": "contract HelperPancakeSwap_ROUTER",
                          "type_conversion": true
=======
                          "type": "uint256",
                          "type_conversion": false
>>>>>>> origin/ajibigad/token-swap
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
<<<<<<< HEAD
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
||||||| merged common ancestors
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
=======
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "balanceOf",
                              "referencedDeclaration": 6,
                              "type": "function (address) view external returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1351,
                                  "type": "contract BEP20",
                                  "value": "wBNBToken"
                                },
                                "id": 1456,
                                "name": "Identifier",
                                "src": "1637:9:6"
                              }
                            ],
                            "id": 1457,
                            "name": "MemberAccess",
                            "src": "1637:19:6"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_SmartExchange_$1498",
                                      "typeString": "contract SmartExchange"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 1458,
                                    "name": "ElementaryTypeName",
                                    "src": "1657:7:6"
                                  }
                                ],
                                "id": 1459,
                                "name": "ElementaryTypeNameExpression",
                                "src": "1657:7:6"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967268,
                                  "type": "contract SmartExchange",
                                  "value": "this"
                                },
                                "id": 1460,
                                "name": "Identifier",
                                "src": "1665:4:6"
                              }
                            ],
                            "id": 1461,
                            "name": "FunctionCall",
                            "src": "1657:13:6"
                          }
                        ],
                        "id": 1462,
                        "name": "FunctionCall",
                        "src": "1637:34:6"
                      }
                    ],
                    "id": 1463,
                    "name": "VariableDeclarationStatement",
                    "src": "1619:52:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
>>>>>>> origin/ajibigad/token-swap
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "swapExactTokensForTokens",
                              "referencedDeclaration": 1122,
                              "type": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1158,
                                  "type": "contract HelperPancakeSwap_ROUTER",
                                  "value": "router"
                                },
                                "id": 1255,
                                "name": "Identifier",
                                "src": "3794:6:4"
                              }
                            ],
                            "id": 1256,
                            "name": "MemberAccess",
                            "src": "3794:31:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
<<<<<<< HEAD
                              "referencedDeclaration": 1203,
                              "type": "uint256",
                              "value": "amountIn"
                            },
                            "id": 1257,
                            "name": "Identifier",
                            "src": "3826:8:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1207,
                              "type": "uint256",
                              "value": "amountOutMin"
                            },
                            "id": 1258,
                            "name": "Identifier",
                            "src": "3836:12:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
<<<<<<< HEAD
                              "referencedDeclaration": 1214,
                              "type": "address[] memory",
                              "value": "path"
||||||| merged common ancestors
                              "referencedDeclaration": 1038,
                              "type": "type(contract HelperPancakeSwap_ROUTER)",
                              "value": "HelperPancakeSwap_ROUTER"
=======
                              "referencedDeclaration": 1225,
||||||| merged common ancestors
                              "referencedDeclaration": 1225,
=======
                              "referencedDeclaration": 1361,
>>>>>>> origin/ajibigad/token-swap
                              "type": "function (address,uint256)",
                              "value": "BalanceEvent"
>>>>>>> origin/ajibigad/token-swap
                            },
<<<<<<< HEAD
<<<<<<< HEAD
                            "id": 1259,
||||||| merged common ancestors
                            "id": 1053,
=======
                            "id": 1328,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "id": 1328,
=======
                            "id": 1464,
>>>>>>> origin/ajibigad/token-swap
                            "name": "Identifier",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "3850:4:4"
||||||| merged common ancestors
                            "src": "2650:24:3"
=======
                            "src": "1687:12:5"
||||||| merged common ancestors
                            "src": "1687:12:5"
=======
                            "src": "1687:12:6"
>>>>>>> origin/ajibigad/token-swap
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_SmartExchange_$1498",
                                      "typeString": "contract SmartExchange"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 1465,
                                    "name": "ElementaryTypeName",
                                    "src": "1700:7:6"
                                  }
                                ],
                                "id": 1466,
                                "name": "ElementaryTypeNameExpression",
                                "src": "1700:7:6"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967268,
                                  "type": "contract SmartExchange",
                                  "value": "this"
                                },
                                "id": 1467,
                                "name": "Identifier",
                                "src": "1708:4:6"
                              }
                            ],
                            "id": 1468,
                            "name": "FunctionCall",
<<<<<<< HEAD
                            "src": "1700:13:5"
>>>>>>> origin/ajibigad/token-swap
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
<<<<<<< HEAD
                              "referencedDeclaration": 1240,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 1260,
                            "name": "Identifier",
                            "src": "3856:2:4"
||||||| merged common ancestors
                            "src": "1700:13:5"
=======
                            "src": "1700:13:6"
>>>>>>> origin/ajibigad/token-swap
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
<<<<<<< HEAD
                              "referencedDeclaration": 1244,
                              "type": "uint256",
                              "value": "deadline"
||||||| merged common ancestors
                              "referencedDeclaration": 1046,
                              "type": "address",
                              "value": "pFACTORY"
=======
                              "referencedDeclaration": 1319,
||||||| merged common ancestors
                              "referencedDeclaration": 1319,
=======
                              "referencedDeclaration": 1455,
>>>>>>> origin/ajibigad/token-swap
                              "type": "uint256",
                              "value": "balance"
>>>>>>> origin/ajibigad/token-swap
                            },
<<<<<<< HEAD
<<<<<<< HEAD
                            "id": 1261,
||||||| merged common ancestors
                            "id": 1054,
=======
                            "id": 1333,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "id": 1333,
=======
                            "id": 1469,
>>>>>>> origin/ajibigad/token-swap
                            "name": "Identifier",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "3860:8:4"
||||||| merged common ancestors
                            "src": "2675:8:3"
=======
                            "src": "1715:7:5"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "1715:7:5"
=======
                            "src": "1715:7:6"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
<<<<<<< HEAD
<<<<<<< HEAD
                        "id": 1262,
||||||| merged common ancestors
                        "id": 1055,
=======
                        "id": 1334,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "id": 1334,
=======
                        "id": 1470,
>>>>>>> origin/ajibigad/token-swap
                        "name": "FunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "3794:75:4"
||||||| merged common ancestors
                        "src": "2650:34:3"
=======
                        "src": "1687:36:5"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
<<<<<<< HEAD
                    "id": 1263,
                    "name": "VariableDeclarationStatement",
                    "src": "3768:101:4"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 1156
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 1254,
                          "type": "uint256[] memory",
                          "value": "amountOut"
                        },
                        "id": 1264,
                        "name": "Identifier",
                        "src": "3970:9:4"
||||||| merged common ancestors
                        "src": "1687:36:5"
=======
                        "src": "1687:36:6"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
<<<<<<< HEAD
                    "id": 1265,
                    "name": "Return",
                    "src": "3963:16:4"
||||||| merged common ancestors
                    "id": 1056,
                    "name": "VariableDeclarationStatement",
                    "src": "2612:72:3"
=======
                    "id": 1335,
||||||| merged common ancestors
                    "id": 1335,
=======
                    "id": 1471,
>>>>>>> origin/ajibigad/token-swap
                    "name": "EmitStatement",
                    "src": "1682:41:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1455,
                              "type": "uint256",
                              "value": "balance"
                            },
                            "id": 1472,
                            "name": "Identifier",
                            "src": "1742:7:6"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "balanceOf",
                                  "referencedDeclaration": 6,
                                  "type": "function (address) view external returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1353,
                                      "type": "contract BEP20",
                                      "value": "bUSDToken"
                                    },
                                    "id": 1473,
                                    "name": "Identifier",
                                    "src": "1752:9:6"
                                  }
                                ],
                                "id": 1474,
                                "name": "MemberAccess",
                                "src": "1752:19:6"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_SmartExchange_$1498",
                                          "typeString": "contract SmartExchange"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 1475,
                                        "name": "ElementaryTypeName",
                                        "src": "1772:7:6"
                                      }
                                    ],
                                    "id": 1476,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "1772:7:6"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967268,
                                      "type": "contract SmartExchange",
                                      "value": "this"
                                    },
                                    "id": 1477,
                                    "name": "Identifier",
                                    "src": "1780:4:6"
                                  }
                                ],
                                "id": 1478,
                                "name": "FunctionCall",
                                "src": "1772:13:6"
                              }
                            ],
                            "id": 1479,
                            "name": "FunctionCall",
                            "src": "1752:34:6"
                          }
                        ],
                        "id": 1480,
                        "name": "Assignment",
                        "src": "1742:44:6"
                      }
                    ],
                    "id": 1481,
                    "name": "ExpressionStatement",
                    "src": "1742:44:6"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1361,
                              "type": "function (address,uint256)",
                              "value": "BalanceEvent"
                            },
                            "id": 1482,
                            "name": "Identifier",
                            "src": "1802:12:6"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_SmartExchange_$1498",
                                      "typeString": "contract SmartExchange"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 1483,
                                    "name": "ElementaryTypeName",
                                    "src": "1815:7:6"
                                  }
                                ],
                                "id": 1484,
                                "name": "ElementaryTypeNameExpression",
                                "src": "1815:7:6"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967268,
                                  "type": "contract SmartExchange",
                                  "value": "this"
                                },
                                "id": 1485,
                                "name": "Identifier",
                                "src": "1823:4:6"
                              }
                            ],
                            "id": 1486,
                            "name": "FunctionCall",
                            "src": "1815:13:6"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1455,
                              "type": "uint256",
                              "value": "balance"
                            },
                            "id": 1487,
                            "name": "Identifier",
                            "src": "1830:7:6"
                          }
                        ],
                        "id": 1488,
                        "name": "FunctionCall",
                        "src": "1802:36:6"
                      }
                    ],
                    "id": 1489,
                    "name": "EmitStatement",
                    "src": "1797:41:6"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 1392
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 1444,
                          "type": "uint256[] memory",
                          "value": "amountOut"
                        },
                        "id": 1490,
                        "name": "Identifier",
                        "src": "1856:9:6"
                      }
                    ],
                    "id": 1491,
                    "name": "Return",
<<<<<<< HEAD
                    "src": "1849:16:5"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "1849:16:5"
=======
                    "src": "1849:16:6"
>>>>>>> origin/ajibigad/token-swap
                  }
                ],
<<<<<<< HEAD
<<<<<<< HEAD
                "id": 1266,
||||||| merged common ancestors
                "id": 1057,
=======
                "id": 1356,
||||||| merged common ancestors
                "id": 1356,
=======
                "id": 1492,
>>>>>>> origin/ajibigad/token-swap
                "name": "Block",
                "src": "1167:705:6"
              }
            ],
            "id": 1493,
            "name": "FunctionDefinition",
            "src": "1094:778:6"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": false,
              "kind": "receive",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 1498,
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1494,
                "name": "ParameterList",
                "src": "1887:2:6"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1495,
                "name": "ParameterList",
                "src": "1907:0:6"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
<<<<<<< HEAD
                "id": 1360,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "id": 1360,
=======
                "id": 1496,
>>>>>>> origin/ajibigad/token-swap
                "name": "Block",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "2881:1106:4"
||||||| merged common ancestors
                "src": "2593:423:3"
=======
                "src": "1907:2:5"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "1907:2:5"
=======
                "src": "1907:2:6"
>>>>>>> origin/ajibigad/token-swap
              }
            ],
<<<<<<< HEAD
<<<<<<< HEAD
            "id": 1267,
||||||| merged common ancestors
            "id": 1058,
=======
            "id": 1361,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "id": 1361,
=======
            "id": 1497,
>>>>>>> origin/ajibigad/token-swap
            "name": "FunctionDefinition",
<<<<<<< HEAD
<<<<<<< HEAD
            "src": "2808:1179:4"
||||||| merged common ancestors
            "src": "2554:462:3"
=======
            "src": "1880:29:5"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "src": "1880:29:5"
=======
            "src": "1880:29:6"
>>>>>>> origin/ajibigad/token-swap
          }
        ],
<<<<<<< HEAD
<<<<<<< HEAD
        "id": 1268,
||||||| merged common ancestors
        "id": 1059,
=======
        "id": 1362,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
        "id": 1362,
=======
        "id": 1498,
>>>>>>> origin/ajibigad/token-swap
        "name": "ContractDefinition",
<<<<<<< HEAD
<<<<<<< HEAD
        "src": "2315:1681:4"
||||||| merged common ancestors
        "src": "2243:780:3"
=======
        "src": "170:1745:5"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
        "src": "170:1745:5"
=======
        "src": "170:1745:6"
>>>>>>> origin/ajibigad/token-swap
      }
    ],
<<<<<<< HEAD
<<<<<<< HEAD
    "id": 1269,
||||||| merged common ancestors
    "id": 1060,
=======
    "id": 1363,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
    "id": 1363,
=======
    "id": 1499,
>>>>>>> origin/ajibigad/token-swap
    "name": "SourceUnit",
<<<<<<< HEAD
<<<<<<< HEAD
    "src": "0:3996:4"
||||||| merged common ancestors
    "src": "0:3023:3"
=======
    "src": "0:1915:5"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
    "src": "0:1915:5"
=======
    "src": "0:1915:6"
>>>>>>> origin/ajibigad/token-swap
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
<<<<<<< HEAD
<<<<<<< HEAD
  "updatedAt": "2021-04-11T19:32:08.565Z",
||||||| merged common ancestors
  "updatedAt": "2021-04-10T14:35:58.126Z",
=======
  "updatedAt": "2021-04-13T08:20:22.168Z",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
  "updatedAt": "2021-04-13T08:20:22.168Z",
=======
  "updatedAt": "2021-04-16T17:26:22.505Z",
>>>>>>> origin/ajibigad/token-swap
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}