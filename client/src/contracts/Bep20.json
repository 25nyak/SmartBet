{
  "contractName": "BEP20",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
<<<<<<< HEAD
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
||||||| merged common ancestors
=======
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
>>>>>>> origin/ajibigad/token-swap
    }
  ],
<<<<<<< HEAD
<<<<<<< HEAD
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/USER/Desktop/BLOCKCHAIN/SmartBet/contracts/Bep20.sol\":\"Bep20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/USER/Desktop/BLOCKCHAIN/SmartBet/contracts/Bep20.sol\":{\"keccak256\":\"0x193b23d6594f93f686dd9dd66269f1c3bb8cc2bc333c30e6551cd28e98750409\",\"urls\":[\"bzz-raw://27cea4a0a15831002f1e82417bc9396b2d2fae967f2839c0e31af948fdc1b15f\",\"dweb:/ipfs/QmQk9xS1WG3YsgBtrf8PapKeyD5EvKZFwyPErLRqyCsJYw\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506101bb806100206000396000f3fe6080604052600436106100295760003560e01c8063095ea7b31461002e578063d0e30db01461006b575b600080fd5b34801561003a57600080fd5b50610055600480360381019061005091906100a9565b610075565b60405161006291906100f4565b60405180910390f35b61007361007d565b005b600092915050565b565b60008135905061008e81610157565b92915050565b6000813590506100a38161016e565b92915050565b600080604083850312156100bc57600080fd5b60006100ca8582860161007f565b92505060206100db85828601610094565b9150509250929050565b6100ee81610121565b82525050565b600060208201905061010960008301846100e5565b92915050565b600061011a8261012d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6101608161010f565b811461016b57600080fd5b50565b6101778161014d565b811461018257600080fd5b5056fea264697066735822122081c2b05891da899f32110609394111c72c4d4f679d2e5f6883ae1e5bd37689d564736f6c63430007060033",
  "deployedBytecode": "0x6080604052600436106100295760003560e01c8063095ea7b31461002e578063d0e30db01461006b575b600080fd5b34801561003a57600080fd5b50610055600480360381019061005091906100a9565b610075565b60405161006291906100f4565b60405180910390f35b61007361007d565b005b600092915050565b565b60008135905061008e81610157565b92915050565b6000813590506100a38161016e565b92915050565b600080604083850312156100bc57600080fd5b60006100ca8582860161007f565b92505060206100db85828601610094565b9150509250929050565b6100ee81610121565b82525050565b600060208201905061010960008301846100e5565b92915050565b600061011a8261012d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6101608161010f565b811461016b57600080fd5b50565b6101778161014d565b811461018257600080fd5b5056fea264697066735822122081c2b05891da899f32110609394111c72c4d4f679d2e5f6883ae1e5bd37689d564736f6c63430007060033",
||||||| merged common ancestors
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/ajibigad/crytoproject/SmartBet/contracts/SmartInvestV1.sol\":\"Bep20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/ajibigad/crytoproject/SmartBet/contracts/SmartInvestV1.sol\":{\"keccak256\":\"0x8bc76c5121059ce237ab765ecb45500e0bf400119dc4cde51622a369154b58b3\",\"urls\":[\"bzz-raw://9885e4bfa3a7f8f9cb8f24f4a57e4318a3a6f90f3416248c5f453cbe222b7e3f\",\"dweb:/ipfs/QmZffhhEZcPN59pFb9rDzvGZcFddKCnKRye3Zcw9cxgkWy\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506101a4806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063095ea7b314610030575b600080fd5b61004a60048036038101906100459190610092565b610060565b60405161005791906100dd565b60405180910390f35b600092915050565b60008135905061007781610140565b92915050565b60008135905061008c81610157565b92915050565b600080604083850312156100a557600080fd5b60006100b385828601610068565b92505060206100c48582860161007d565b9150509250929050565b6100d78161010a565b82525050565b60006020820190506100f260008301846100ce565b92915050565b600061010382610116565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610149816100f8565b811461015457600080fd5b50565b61016081610136565b811461016b57600080fd5b5056fea2646970667358221220c75e3925d39f8f0bf559af533896a5a5572833823f48963bbf1377baae52008764736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063095ea7b314610030575b600080fd5b61004a60048036038101906100459190610092565b610060565b60405161005791906100dd565b60405180910390f35b600092915050565b60008135905061007781610140565b92915050565b60008135905061008c81610157565b92915050565b600080604083850312156100a557600080fd5b60006100b385828601610068565b92505060206100c48582860161007d565b9150509250929050565b6100d78161010a565b82525050565b60006020820190506100f260008301846100ce565b92915050565b600061010382610116565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610149816100f8565b811461015457600080fd5b50565b61016081610136565b811461016b57600080fd5b5056fea2646970667358221220c75e3925d39f8f0bf559af533896a5a5572833823f48963bbf1377baae52008764736f6c63430007060033",
=======
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/ajibigad/crytoproject/SmartBet/contracts/BEP20.sol\":\"BEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/ajibigad/crytoproject/SmartBet/contracts/BEP20.sol\":{\"keccak256\":\"0x30e126be87a8e17047281d5fcfef18aa4a8e6f0c9b5cd50a8fb9c91a323cfe99\",\"urls\":[\"bzz-raw://4a545c3e5af6376fe310b86205cff67cc994d07100166c801cd5575450d74a49\",\"dweb:/ipfs/QmPt52YwN1F2QWTQf6VWWbi69wFKWF44UivDTRgnQ51Uih\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506102be806100206000396000f3fe60806040526004361061003f5760003560e01c8063095ea7b31461004457806370a0823114610081578063a9059cbb146100be578063d0e30db0146100fb575b600080fd5b34801561005057600080fd5b5061006b60048036038101906100669190610182565b610105565b60405161007891906101dc565b60405180910390f35b34801561008d57600080fd5b506100a860048036038101906100a39190610159565b61010d565b6040516100b591906101f7565b60405180910390f35b3480156100ca57600080fd5b506100e560048036038101906100e09190610182565b610125565b6040516100f291906101dc565b60405180910390f35b61010361012d565b005b600092915050565b60006020528060005260406000206000915090505481565b600092915050565b565b60008135905061013e8161025a565b92915050565b60008135905061015381610271565b92915050565b60006020828403121561016b57600080fd5b60006101798482850161012f565b91505092915050565b6000806040838503121561019557600080fd5b60006101a38582860161012f565b92505060206101b485828601610144565b9150509250929050565b6101c781610224565b82525050565b6101d681610250565b82525050565b60006020820190506101f160008301846101be565b92915050565b600060208201905061020c60008301846101cd565b92915050565b600061021d82610230565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61026381610212565b811461026e57600080fd5b50565b61027a81610250565b811461028557600080fd5b5056fea2646970667358221220543f911cfe052dbac30a21992d3765615eeebb1abe4754f76812efc4170e49f864736f6c63430007060033",
  "deployedBytecode": "0x60806040526004361061003f5760003560e01c8063095ea7b31461004457806370a0823114610081578063a9059cbb146100be578063d0e30db0146100fb575b600080fd5b34801561005057600080fd5b5061006b60048036038101906100669190610182565b610105565b60405161007891906101dc565b60405180910390f35b34801561008d57600080fd5b506100a860048036038101906100a39190610159565b61010d565b6040516100b591906101f7565b60405180910390f35b3480156100ca57600080fd5b506100e560048036038101906100e09190610182565b610125565b6040516100f291906101dc565b60405180910390f35b61010361012d565b005b600092915050565b60006020528060005260406000206000915090505481565b600092915050565b565b60008135905061013e8161025a565b92915050565b60008135905061015381610271565b92915050565b60006020828403121561016b57600080fd5b60006101798482850161012f565b91505092915050565b6000806040838503121561019557600080fd5b60006101a38582860161012f565b92505060206101b485828601610144565b9150509250929050565b6101c781610224565b82525050565b6101d681610250565b82525050565b60006020820190506101f160008301846101be565b92915050565b600060208201905061020c60008301846101cd565b92915050565b600061021d82610230565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61026381610212565b811461026e57600080fd5b50565b61027a81610250565b811461028557600080fd5b5056fea2646970667358221220543f911cfe052dbac30a21992d3765615eeebb1abe4754f76812efc4170e49f864736f6c63430007060033",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/ajibigad/crytoproject/SmartBet/contracts/BEP20.sol\":\"BEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/ajibigad/crytoproject/SmartBet/contracts/BEP20.sol\":{\"keccak256\":\"0x30e126be87a8e17047281d5fcfef18aa4a8e6f0c9b5cd50a8fb9c91a323cfe99\",\"urls\":[\"bzz-raw://4a545c3e5af6376fe310b86205cff67cc994d07100166c801cd5575450d74a49\",\"dweb:/ipfs/QmPt52YwN1F2QWTQf6VWWbi69wFKWF44UivDTRgnQ51Uih\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506102be806100206000396000f3fe60806040526004361061003f5760003560e01c8063095ea7b31461004457806370a0823114610081578063a9059cbb146100be578063d0e30db0146100fb575b600080fd5b34801561005057600080fd5b5061006b60048036038101906100669190610182565b610105565b60405161007891906101dc565b60405180910390f35b34801561008d57600080fd5b506100a860048036038101906100a39190610159565b61010d565b6040516100b591906101f7565b60405180910390f35b3480156100ca57600080fd5b506100e560048036038101906100e09190610182565b610125565b6040516100f291906101dc565b60405180910390f35b61010361012d565b005b600092915050565b60006020528060005260406000206000915090505481565b600092915050565b565b60008135905061013e8161025a565b92915050565b60008135905061015381610271565b92915050565b60006020828403121561016b57600080fd5b60006101798482850161012f565b91505092915050565b6000806040838503121561019557600080fd5b60006101a38582860161012f565b92505060206101b485828601610144565b9150509250929050565b6101c781610224565b82525050565b6101d681610250565b82525050565b60006020820190506101f160008301846101be565b92915050565b600060208201905061020c60008301846101cd565b92915050565b600061021d82610230565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61026381610212565b811461026e57600080fd5b50565b61027a81610250565b811461028557600080fd5b5056fea2646970667358221220543f911cfe052dbac30a21992d3765615eeebb1abe4754f76812efc4170e49f864736f6c63430007060033",
  "deployedBytecode": "0x60806040526004361061003f5760003560e01c8063095ea7b31461004457806370a0823114610081578063a9059cbb146100be578063d0e30db0146100fb575b600080fd5b34801561005057600080fd5b5061006b60048036038101906100669190610182565b610105565b60405161007891906101dc565b60405180910390f35b34801561008d57600080fd5b506100a860048036038101906100a39190610159565b61010d565b6040516100b591906101f7565b60405180910390f35b3480156100ca57600080fd5b506100e560048036038101906100e09190610182565b610125565b6040516100f291906101dc565b60405180910390f35b61010361012d565b005b600092915050565b60006020528060005260406000206000915090505481565b600092915050565b565b60008135905061013e8161025a565b92915050565b60008135905061015381610271565b92915050565b60006020828403121561016b57600080fd5b60006101798482850161012f565b91505092915050565b6000806040838503121561019557600080fd5b60006101a38582860161012f565b92505060206101b485828601610144565b9150509250929050565b6101c781610224565b82525050565b6101d681610250565b82525050565b60006020820190506101f160008301846101be565b92915050565b600060208201905061020c60008301846101cd565b92915050565b600061021d82610230565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61026381610212565b811461026e57600080fd5b50565b61027a81610250565b811461028557600080fd5b5056fea2646970667358221220543f911cfe052dbac30a21992d3765615eeebb1abe4754f76812efc4170e49f864736f6c63430007060033",
=======
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/ajibigad/crytoproject/SmartBet/contracts/Bep20.sol\":\"BEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/ajibigad/crytoproject/SmartBet/contracts/Bep20.sol\":{\"keccak256\":\"0x30e126be87a8e17047281d5fcfef18aa4a8e6f0c9b5cd50a8fb9c91a323cfe99\",\"urls\":[\"bzz-raw://4a545c3e5af6376fe310b86205cff67cc994d07100166c801cd5575450d74a49\",\"dweb:/ipfs/QmPt52YwN1F2QWTQf6VWWbi69wFKWF44UivDTRgnQ51Uih\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506102be806100206000396000f3fe60806040526004361061003f5760003560e01c8063095ea7b31461004457806370a0823114610081578063a9059cbb146100be578063d0e30db0146100fb575b600080fd5b34801561005057600080fd5b5061006b60048036038101906100669190610182565b610105565b60405161007891906101dc565b60405180910390f35b34801561008d57600080fd5b506100a860048036038101906100a39190610159565b61010d565b6040516100b591906101f7565b60405180910390f35b3480156100ca57600080fd5b506100e560048036038101906100e09190610182565b610125565b6040516100f291906101dc565b60405180910390f35b61010361012d565b005b600092915050565b60006020528060005260406000206000915090505481565b600092915050565b565b60008135905061013e8161025a565b92915050565b60008135905061015381610271565b92915050565b60006020828403121561016b57600080fd5b60006101798482850161012f565b91505092915050565b6000806040838503121561019557600080fd5b60006101a38582860161012f565b92505060206101b485828601610144565b9150509250929050565b6101c781610224565b82525050565b6101d681610250565b82525050565b60006020820190506101f160008301846101be565b92915050565b600060208201905061020c60008301846101cd565b92915050565b600061021d82610230565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61026381610212565b811461026e57600080fd5b50565b61027a81610250565b811461028557600080fd5b5056fea2646970667358221220df1736b9b8dd7dfa3ff8780c2e032deade3922b83be831193af3622a7e94165864736f6c63430007060033",
  "deployedBytecode": "0x60806040526004361061003f5760003560e01c8063095ea7b31461004457806370a0823114610081578063a9059cbb146100be578063d0e30db0146100fb575b600080fd5b34801561005057600080fd5b5061006b60048036038101906100669190610182565b610105565b60405161007891906101dc565b60405180910390f35b34801561008d57600080fd5b506100a860048036038101906100a39190610159565b61010d565b6040516100b591906101f7565b60405180910390f35b3480156100ca57600080fd5b506100e560048036038101906100e09190610182565b610125565b6040516100f291906101dc565b60405180910390f35b61010361012d565b005b600092915050565b60006020528060005260406000206000915090505481565b600092915050565b565b60008135905061013e8161025a565b92915050565b60008135905061015381610271565b92915050565b60006020828403121561016b57600080fd5b60006101798482850161012f565b91505092915050565b6000806040838503121561019557600080fd5b60006101a38582860161012f565b92505060206101b485828601610144565b9150509250929050565b6101c781610224565b82525050565b6101d681610250565b82525050565b60006020820190506101f160008301846101be565b92915050565b600060208201905061020c60008301846101cd565b92915050565b600061021d82610230565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61026381610212565b811461026e57600080fd5b50565b61027a81610250565b811461028557600080fd5b5056fea2646970667358221220df1736b9b8dd7dfa3ff8780c2e032deade3922b83be831193af3622a7e94165864736f6c63430007060033",
>>>>>>> origin/ajibigad/token-swap
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
        "src": "0:1707:2",
||||||| merged common ancestors
        "src": "0:1707:29",
=======
        "src": "0:2327:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
        "src": "0:2327:32",
=======
        "src": "0:2327:33",
>>>>>>> origin/ajibigad/token-swap
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "59:87:2",
||||||| merged common ancestors
              "src": "59:87:29",
=======
              "src": "59:87:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "59:87:32",
=======
              "src": "59:87:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
<<<<<<< HEAD
                  "src": "69:29:2",
||||||| merged common ancestors
                  "src": "69:29:29",
=======
                  "src": "69:29:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "src": "69:29:32",
=======
                  "src": "69:29:33",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "91:6:2"
||||||| merged common ancestors
                        "src": "91:6:29"
=======
                        "src": "91:6:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "91:6:32"
=======
                        "src": "91:6:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "78:12:2"
||||||| merged common ancestors
                      "src": "78:12:29"
=======
                      "src": "78:12:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "78:12:32"
=======
                      "src": "78:12:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "78:20:2"
||||||| merged common ancestors
                    "src": "78:20:29"
=======
                    "src": "78:20:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "78:20:32"
=======
                    "src": "78:20:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "69:5:2"
||||||| merged common ancestors
                      "src": "69:5:29"
=======
                      "src": "69:5:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "69:5:32"
=======
                      "src": "69:5:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "134:5:2"
||||||| merged common ancestors
                        "src": "134:5:29"
=======
                        "src": "134:5:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "134:5:32"
=======
                        "src": "134:5:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "107:26:2"
||||||| merged common ancestors
                      "src": "107:26:29"
=======
                      "src": "107:26:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "107:26:32"
=======
                      "src": "107:26:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "107:33:2"
||||||| merged common ancestors
                    "src": "107:33:29"
=======
                    "src": "107:33:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "107:33:32"
=======
                    "src": "107:33:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "nodeType": "YulExpressionStatement",
<<<<<<< HEAD
<<<<<<< HEAD
                  "src": "107:33:2"
||||||| merged common ancestors
                  "src": "107:33:29"
=======
                  "src": "107:33:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "src": "107:33:32"
=======
                  "src": "107:33:33"
>>>>>>> origin/ajibigad/token-swap
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "37:6:2",
||||||| merged common ancestors
                "src": "37:6:29",
=======
                "src": "37:6:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "37:6:32",
=======
                "src": "37:6:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "45:3:2",
||||||| merged common ancestors
                "src": "45:3:29",
=======
                "src": "45:3:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "45:3:32",
=======
                "src": "45:3:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "53:5:2",
||||||| merged common ancestors
                "src": "53:5:29",
=======
                "src": "53:5:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "53:5:32",
=======
                "src": "53:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
<<<<<<< HEAD
            "src": "7:139:2"
||||||| merged common ancestors
            "src": "7:139:29"
=======
            "src": "7:139:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "src": "7:139:32"
=======
            "src": "7:139:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "204:87:2",
||||||| merged common ancestors
              "src": "204:87:29",
=======
              "src": "204:87:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "204:87:32",
=======
              "src": "204:87:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
<<<<<<< HEAD
                  "src": "214:29:2",
||||||| merged common ancestors
                  "src": "214:29:29",
=======
                  "src": "214:29:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "src": "214:29:32",
=======
                  "src": "214:29:33",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "236:6:2"
||||||| merged common ancestors
                        "src": "236:6:29"
=======
                        "src": "236:6:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "236:6:32"
=======
                        "src": "236:6:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "223:12:2"
||||||| merged common ancestors
                      "src": "223:12:29"
=======
                      "src": "223:12:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "223:12:32"
=======
                      "src": "223:12:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "223:20:2"
||||||| merged common ancestors
                    "src": "223:20:29"
=======
                    "src": "223:20:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "223:20:32"
=======
                    "src": "223:20:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "214:5:2"
||||||| merged common ancestors
                      "src": "214:5:29"
=======
                      "src": "214:5:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "214:5:32"
=======
                      "src": "214:5:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "279:5:2"
||||||| merged common ancestors
                        "src": "279:5:29"
=======
                        "src": "279:5:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "279:5:32"
=======
                        "src": "279:5:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "252:26:2"
||||||| merged common ancestors
                      "src": "252:26:29"
=======
                      "src": "252:26:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "252:26:32"
=======
                      "src": "252:26:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "252:33:2"
||||||| merged common ancestors
                    "src": "252:33:29"
=======
                    "src": "252:33:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "252:33:32"
=======
                    "src": "252:33:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "nodeType": "YulExpressionStatement",
<<<<<<< HEAD
<<<<<<< HEAD
                  "src": "252:33:2"
||||||| merged common ancestors
                  "src": "252:33:29"
=======
                  "src": "252:33:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "src": "252:33:32"
=======
                  "src": "252:33:33"
>>>>>>> origin/ajibigad/token-swap
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "182:6:2",
||||||| merged common ancestors
                "src": "182:6:29",
=======
                "src": "182:6:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "182:6:32",
=======
                "src": "182:6:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "190:3:2",
||||||| merged common ancestors
                "src": "190:3:29",
=======
                "src": "190:3:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "190:3:32",
=======
                "src": "190:3:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "198:5:2",
||||||| merged common ancestors
                "src": "198:5:29",
=======
                "src": "198:5:32",
||||||| merged common ancestors
                "src": "198:5:32",
=======
                "src": "198:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "src": "152:139:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "363:196:33",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "409:16:33",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "418:1:33",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "421:1:33",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "411:6:33"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "411:12:33"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "411:12:33"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "384:7:33"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "393:9:33"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "380:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "380:23:33"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "405:2:33",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "376:3:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "376:32:33"
                  },
                  "nodeType": "YulIf",
                  "src": "373:2:33"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "435:117:33",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "450:15:33",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "464:1:33",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "454:6:33",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "479:63:33",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "514:9:33"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "525:6:33"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "510:3:33"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "510:22:33"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "534:7:33"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "489:20:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "489:53:33"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "479:6:33"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "333:9:33",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "344:7:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "356:6:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "356:6:32",
=======
                "src": "356:6:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
<<<<<<< HEAD
            "src": "152:139:2"
||||||| merged common ancestors
            "src": "152:139:29"
=======
            "src": "297:262:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "src": "297:262:32"
=======
            "src": "297:262:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "380:324:2",
||||||| merged common ancestors
              "src": "380:324:29",
=======
              "src": "648:324:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "648:324:32",
=======
              "src": "648:324:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "426:16:2",
||||||| merged common ancestors
                    "src": "426:16:29",
=======
                    "src": "694:16:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "694:16:32",
=======
                    "src": "694:16:33",
>>>>>>> origin/ajibigad/token-swap
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
<<<<<<< HEAD
                              "src": "435:1:2",
||||||| merged common ancestors
                              "src": "435:1:29",
=======
                              "src": "703:1:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                              "src": "703:1:32",
=======
                              "src": "703:1:33",
>>>>>>> origin/ajibigad/token-swap
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
<<<<<<< HEAD
                              "src": "438:1:2",
||||||| merged common ancestors
                              "src": "438:1:29",
=======
                              "src": "706:1:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                              "src": "706:1:32",
=======
                              "src": "706:1:33",
>>>>>>> origin/ajibigad/token-swap
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "428:6:2"
||||||| merged common ancestors
                            "src": "428:6:29"
=======
                            "src": "696:6:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "696:6:32"
=======
                            "src": "696:6:33"
>>>>>>> origin/ajibigad/token-swap
                          },
                          "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "428:12:2"
||||||| merged common ancestors
                          "src": "428:12:29"
=======
                          "src": "696:12:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                          "src": "696:12:32"
=======
                          "src": "696:12:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulExpressionStatement",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "428:12:2"
||||||| merged common ancestors
                        "src": "428:12:29"
=======
                        "src": "696:12:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "696:12:32"
=======
                        "src": "696:12:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "401:7:2"
||||||| merged common ancestors
                            "src": "401:7:29"
=======
                            "src": "669:7:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "669:7:32"
=======
                            "src": "669:7:33"
>>>>>>> origin/ajibigad/token-swap
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "410:9:2"
||||||| merged common ancestors
                            "src": "410:9:29"
=======
                            "src": "678:9:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "678:9:32"
=======
                            "src": "678:9:33"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "397:3:2"
||||||| merged common ancestors
                          "src": "397:3:29"
=======
                          "src": "665:3:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                          "src": "665:3:32"
=======
                          "src": "665:3:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "397:23:2"
||||||| merged common ancestors
                        "src": "397:23:29"
=======
                        "src": "665:23:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "665:23:32"
=======
                        "src": "665:23:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "422:2:2",
||||||| merged common ancestors
                        "src": "422:2:29",
=======
                        "src": "690:2:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "690:2:32",
=======
                        "src": "690:2:33",
>>>>>>> origin/ajibigad/token-swap
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "393:3:2"
||||||| merged common ancestors
                      "src": "393:3:29"
=======
                      "src": "661:3:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "661:3:32"
=======
                      "src": "661:3:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "393:32:2"
||||||| merged common ancestors
                    "src": "393:32:29"
=======
                    "src": "661:32:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "661:32:32"
=======
                    "src": "661:32:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "nodeType": "YulIf",
<<<<<<< HEAD
<<<<<<< HEAD
                  "src": "390:2:2"
||||||| merged common ancestors
                  "src": "390:2:29"
=======
                  "src": "658:2:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "src": "658:2:32"
=======
                  "src": "658:2:33"
>>>>>>> origin/ajibigad/token-swap
                },
                {
                  "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
                  "src": "452:117:2",
||||||| merged common ancestors
                  "src": "452:117:29",
=======
                  "src": "720:117:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "src": "720:117:32",
=======
                  "src": "720:117:33",
>>>>>>> origin/ajibigad/token-swap
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "467:15:2",
||||||| merged common ancestors
                      "src": "467:15:29",
=======
                      "src": "735:15:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "735:15:32",
=======
                      "src": "735:15:33",
>>>>>>> origin/ajibigad/token-swap
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "481:1:2",
||||||| merged common ancestors
                        "src": "481:1:29",
=======
                        "src": "749:1:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "749:1:32",
=======
                        "src": "749:1:33",
>>>>>>> origin/ajibigad/token-swap
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "471:6:2",
||||||| merged common ancestors
                          "src": "471:6:29",
=======
                          "src": "739:6:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                          "src": "739:6:32",
=======
                          "src": "739:6:33",
>>>>>>> origin/ajibigad/token-swap
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "496:63:2",
||||||| merged common ancestors
                      "src": "496:63:29",
=======
                      "src": "764:63:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "764:63:32",
=======
                      "src": "764:63:33",
>>>>>>> origin/ajibigad/token-swap
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                                "src": "531:9:2"
||||||| merged common ancestors
                                "src": "531:9:29"
=======
                                "src": "799:9:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                                "src": "799:9:32"
=======
                                "src": "799:9:33"
>>>>>>> origin/ajibigad/token-swap
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                                "src": "542:6:2"
||||||| merged common ancestors
                                "src": "542:6:29"
=======
                                "src": "810:6:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                                "src": "810:6:32"
=======
                                "src": "810:6:33"
>>>>>>> origin/ajibigad/token-swap
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                              "src": "527:3:2"
||||||| merged common ancestors
                              "src": "527:3:29"
=======
                              "src": "795:3:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                              "src": "795:3:32"
=======
                              "src": "795:3:33"
>>>>>>> origin/ajibigad/token-swap
                            },
                            "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "527:22:2"
||||||| merged common ancestors
                            "src": "527:22:29"
=======
                            "src": "795:22:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "795:22:32"
=======
                            "src": "795:22:33"
>>>>>>> origin/ajibigad/token-swap
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "551:7:2"
||||||| merged common ancestors
                            "src": "551:7:29"
=======
                            "src": "819:7:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "819:7:32"
=======
                            "src": "819:7:33"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "506:20:2"
||||||| merged common ancestors
                          "src": "506:20:29"
=======
                          "src": "774:20:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                          "src": "774:20:32"
=======
                          "src": "774:20:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "506:53:2"
||||||| merged common ancestors
                        "src": "506:53:29"
=======
                        "src": "774:53:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "774:53:32"
=======
                        "src": "774:53:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "496:6:2"
||||||| merged common ancestors
                          "src": "496:6:29"
=======
                          "src": "764:6:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                          "src": "764:6:32"
=======
                          "src": "764:6:33"
>>>>>>> origin/ajibigad/token-swap
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
                  "src": "579:118:2",
||||||| merged common ancestors
                  "src": "579:118:29",
=======
                  "src": "847:118:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "src": "847:118:32",
=======
                  "src": "847:118:33",
>>>>>>> origin/ajibigad/token-swap
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "594:16:2",
||||||| merged common ancestors
                      "src": "594:16:29",
=======
                      "src": "862:16:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "862:16:32",
=======
                      "src": "862:16:33",
>>>>>>> origin/ajibigad/token-swap
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "608:2:2",
||||||| merged common ancestors
                        "src": "608:2:29",
=======
                        "src": "876:2:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "876:2:32",
=======
                        "src": "876:2:33",
>>>>>>> origin/ajibigad/token-swap
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "598:6:2",
||||||| merged common ancestors
                          "src": "598:6:29",
=======
                          "src": "866:6:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                          "src": "866:6:32",
=======
                          "src": "866:6:33",
>>>>>>> origin/ajibigad/token-swap
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "624:63:2",
||||||| merged common ancestors
                      "src": "624:63:29",
=======
                      "src": "892:63:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "892:63:32",
=======
                      "src": "892:63:33",
>>>>>>> origin/ajibigad/token-swap
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                                "src": "659:9:2"
||||||| merged common ancestors
                                "src": "659:9:29"
=======
                                "src": "927:9:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                                "src": "927:9:32"
=======
                                "src": "927:9:33"
>>>>>>> origin/ajibigad/token-swap
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                                "src": "670:6:2"
||||||| merged common ancestors
                                "src": "670:6:29"
=======
                                "src": "938:6:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                                "src": "938:6:32"
=======
                                "src": "938:6:33"
>>>>>>> origin/ajibigad/token-swap
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                              "src": "655:3:2"
||||||| merged common ancestors
                              "src": "655:3:29"
=======
                              "src": "923:3:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                              "src": "923:3:32"
=======
                              "src": "923:3:33"
>>>>>>> origin/ajibigad/token-swap
                            },
                            "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "655:22:2"
||||||| merged common ancestors
                            "src": "655:22:29"
=======
                            "src": "923:22:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "923:22:32"
=======
                            "src": "923:22:33"
>>>>>>> origin/ajibigad/token-swap
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "679:7:2"
||||||| merged common ancestors
                            "src": "679:7:29"
=======
                            "src": "947:7:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "947:7:32"
=======
                            "src": "947:7:33"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "634:20:2"
||||||| merged common ancestors
                          "src": "634:20:29"
=======
                          "src": "902:20:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                          "src": "902:20:32"
=======
                          "src": "902:20:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "634:53:2"
||||||| merged common ancestors
                        "src": "634:53:29"
=======
                        "src": "902:53:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "902:53:32"
=======
                        "src": "902:53:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "624:6:2"
||||||| merged common ancestors
                          "src": "624:6:29"
=======
                          "src": "892:6:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                          "src": "892:6:32"
=======
                          "src": "892:6:33"
>>>>>>> origin/ajibigad/token-swap
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "342:9:2",
||||||| merged common ancestors
                "src": "342:9:29",
=======
                "src": "610:9:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "610:9:32",
=======
                "src": "610:9:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "353:7:2",
||||||| merged common ancestors
                "src": "353:7:29",
=======
                "src": "621:7:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "621:7:32",
=======
                "src": "621:7:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "365:6:2",
||||||| merged common ancestors
                "src": "365:6:29",
=======
                "src": "633:6:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "633:6:32",
=======
                "src": "633:6:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "373:6:2",
||||||| merged common ancestors
                "src": "373:6:29",
=======
                "src": "641:6:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "641:6:32",
=======
                "src": "641:6:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
<<<<<<< HEAD
            "src": "297:407:2"
||||||| merged common ancestors
            "src": "297:407:29"
=======
            "src": "565:407:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "src": "565:407:32"
=======
            "src": "565:407:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "769:50:2",
||||||| merged common ancestors
              "src": "769:50:29",
=======
              "src": "1037:50:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "1037:50:32",
=======
              "src": "1037:50:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "786:3:2"
||||||| merged common ancestors
                        "src": "786:3:29"
=======
                        "src": "1054:3:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "1054:3:32"
=======
                        "src": "1054:3:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "806:5:2"
||||||| merged common ancestors
                            "src": "806:5:29"
=======
                            "src": "1074:5:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "1074:5:32"
=======
                            "src": "1074:5:33"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "791:14:2"
||||||| merged common ancestors
                          "src": "791:14:29"
=======
                          "src": "1059:14:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                          "src": "1059:14:32"
=======
                          "src": "1059:14:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "791:21:2"
||||||| merged common ancestors
                        "src": "791:21:29"
=======
                        "src": "1059:21:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "1059:21:32"
=======
                        "src": "1059:21:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "779:6:2"
||||||| merged common ancestors
                      "src": "779:6:29"
=======
                      "src": "1047:6:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "1047:6:32"
=======
                      "src": "1047:6:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "779:34:2"
||||||| merged common ancestors
                    "src": "779:34:29"
=======
                    "src": "1047:34:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "1047:34:32"
=======
                    "src": "1047:34:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "nodeType": "YulExpressionStatement",
<<<<<<< HEAD
<<<<<<< HEAD
                  "src": "779:34:2"
||||||| merged common ancestors
                  "src": "779:34:29"
=======
                  "src": "1047:34:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "src": "1047:34:32"
=======
                  "src": "1047:34:33"
>>>>>>> origin/ajibigad/token-swap
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "757:5:2",
||||||| merged common ancestors
                "src": "757:5:29",
=======
                "src": "1025:5:32",
||||||| merged common ancestors
                "src": "1025:5:32",
=======
                "src": "1025:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1032:3:33",
                "type": ""
              }
            ],
            "src": "978:109:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1158:53:33",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1175:3:33"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1198:5:33"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1180:17:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1180:24:33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1168:6:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1168:37:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1168:37:33"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
                "src": "1146:5:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "1146:5:32",
=======
                "src": "1146:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "764:3:2",
||||||| merged common ancestors
                "src": "764:3:29",
=======
                "src": "1153:3:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "1153:3:32",
=======
                "src": "1153:3:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
<<<<<<< HEAD
            "src": "710:109:2"
||||||| merged common ancestors
            "src": "710:109:29"
=======
            "src": "1093:118:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "src": "1093:118:32"
=======
            "src": "1093:118:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "917:118:2",
||||||| merged common ancestors
              "src": "917:118:29",
=======
              "src": "1309:118:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "1309:118:32",
=======
              "src": "1309:118:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
<<<<<<< HEAD
                  "src": "927:26:2",
||||||| merged common ancestors
                  "src": "927:26:29",
=======
                  "src": "1319:26:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "src": "1319:26:32",
=======
                  "src": "1319:26:33",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "939:9:2"
||||||| merged common ancestors
                        "src": "939:9:29"
=======
                        "src": "1331:9:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "1331:9:32"
=======
                        "src": "1331:9:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "950:2:2",
||||||| merged common ancestors
                        "src": "950:2:29",
=======
                        "src": "1342:2:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "1342:2:32",
=======
                        "src": "1342:2:33",
>>>>>>> origin/ajibigad/token-swap
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "935:3:2"
||||||| merged common ancestors
                      "src": "935:3:29"
=======
                      "src": "1327:3:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "1327:3:32"
=======
                      "src": "1327:3:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "935:18:2"
||||||| merged common ancestors
                    "src": "935:18:29"
=======
                    "src": "1327:18:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "1327:18:32"
=======
                    "src": "1327:18:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "927:4:2"
||||||| merged common ancestors
                      "src": "927:4:29"
=======
                      "src": "1319:4:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "1319:4:32"
=======
                      "src": "1319:4:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "1001:6:2"
||||||| merged common ancestors
                        "src": "1001:6:29"
=======
                        "src": "1393:6:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "1393:6:32"
=======
                        "src": "1393:6:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "1014:9:2"
||||||| merged common ancestors
                            "src": "1014:9:29"
=======
                            "src": "1406:9:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "1406:9:32"
=======
                            "src": "1406:9:33"
>>>>>>> origin/ajibigad/token-swap
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "1025:1:2",
||||||| merged common ancestors
                            "src": "1025:1:29",
=======
                            "src": "1417:1:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "1417:1:32",
=======
                            "src": "1417:1:33",
>>>>>>> origin/ajibigad/token-swap
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "1010:3:2"
||||||| merged common ancestors
                          "src": "1010:3:29"
=======
                          "src": "1402:3:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                          "src": "1402:3:32"
=======
                          "src": "1402:3:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "1010:17:2"
||||||| merged common ancestors
                        "src": "1010:17:29"
=======
                        "src": "1402:17:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "1402:17:32"
=======
                        "src": "1402:17:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "963:37:2"
||||||| merged common ancestors
                      "src": "963:37:29"
=======
                      "src": "1355:37:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "1355:37:32"
=======
                      "src": "1355:37:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "963:65:2"
||||||| merged common ancestors
                    "src": "963:65:29"
=======
                    "src": "1355:65:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "1355:65:32"
=======
                    "src": "1355:65:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "nodeType": "YulExpressionStatement",
<<<<<<< HEAD
<<<<<<< HEAD
                  "src": "963:65:2"
||||||| merged common ancestors
                  "src": "963:65:29"
=======
                  "src": "1355:65:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "src": "1355:65:32"
=======
                  "src": "1355:65:33"
>>>>>>> origin/ajibigad/token-swap
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "889:9:2",
||||||| merged common ancestors
                "src": "889:9:29",
=======
                "src": "1281:9:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "1281:9:32",
=======
                "src": "1281:9:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "901:6:2",
||||||| merged common ancestors
                "src": "901:6:29",
=======
                "src": "1293:6:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "1293:6:32",
=======
                "src": "1293:6:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "912:4:2",
||||||| merged common ancestors
                "src": "912:4:29",
=======
                "src": "1304:4:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "1304:4:32",
=======
                "src": "1304:4:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
<<<<<<< HEAD
            "src": "825:210:2"
||||||| merged common ancestors
            "src": "825:210:29"
=======
            "src": "1217:210:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "src": "1217:210:32"
=======
            "src": "1217:210:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "1086:51:2",
||||||| merged common ancestors
              "src": "1086:51:29",
=======
              "src": "1531:124:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "1531:124:32",
=======
              "src": "1531:124:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
<<<<<<< HEAD
                  "src": "1096:35:2",
||||||| merged common ancestors
                  "src": "1096:35:29",
=======
                  "src": "1541:26:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "src": "1541:26:32",
=======
                  "src": "1541:26:33",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "1125:5:2"
||||||| merged common ancestors
                        "src": "1125:5:29"
=======
                        "src": "1553:9:32"
||||||| merged common ancestors
                        "src": "1553:9:32"
=======
                        "src": "1553:9:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1564:2:33",
                        "type": "",
                        "value": "32"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "1107:17:2"
||||||| merged common ancestors
                      "src": "1107:17:29"
=======
                      "src": "1549:3:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "1549:3:32"
=======
                      "src": "1549:3:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "1107:24:2"
||||||| merged common ancestors
                    "src": "1107:24:29"
=======
                    "src": "1549:18:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "1549:18:32"
=======
                    "src": "1549:18:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "1096:7:2"
||||||| merged common ancestors
                      "src": "1096:7:29"
=======
                      "src": "1541:4:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "1541:4:32"
=======
                      "src": "1541:4:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1621:6:33"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1634:9:33"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1645:1:33",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1630:3:33"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1630:17:33"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1577:43:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1577:71:33"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1577:71:33"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1503:9:33",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1515:6:33",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1526:4:33",
                "type": ""
              }
            ],
            "src": "1433:222:33"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1706:51:33",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1716:35:33",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1745:5:33"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1727:17:33"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1727:24:33"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1716:7:33"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "1068:5:2",
||||||| merged common ancestors
                "src": "1068:5:29",
=======
                "src": "1688:5:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "1688:5:32",
=======
                "src": "1688:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "1078:7:2",
||||||| merged common ancestors
                "src": "1078:7:29",
=======
                "src": "1698:7:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "1698:7:32",
=======
                "src": "1698:7:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
<<<<<<< HEAD
            "src": "1041:96:2"
||||||| merged common ancestors
            "src": "1041:96:29"
=======
            "src": "1661:96:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "src": "1661:96:32"
=======
            "src": "1661:96:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "1185:48:2",
||||||| merged common ancestors
              "src": "1185:48:29",
=======
              "src": "1805:48:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "1805:48:32",
=======
              "src": "1805:48:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
<<<<<<< HEAD
                  "src": "1195:32:2",
||||||| merged common ancestors
                  "src": "1195:32:29",
=======
                  "src": "1815:32:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "src": "1815:32:32",
=======
                  "src": "1815:32:33",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "1220:5:2"
||||||| merged common ancestors
                            "src": "1220:5:29"
=======
                            "src": "1840:5:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "1840:5:32"
=======
                            "src": "1840:5:33"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "1213:6:2"
||||||| merged common ancestors
                          "src": "1213:6:29"
=======
                          "src": "1833:6:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                          "src": "1833:6:32"
=======
                          "src": "1833:6:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "1213:13:2"
||||||| merged common ancestors
                        "src": "1213:13:29"
=======
                        "src": "1833:13:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "1833:13:32"
=======
                        "src": "1833:13:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "1206:6:2"
||||||| merged common ancestors
                      "src": "1206:6:29"
=======
                      "src": "1826:6:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "1826:6:32"
=======
                      "src": "1826:6:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "1206:21:2"
||||||| merged common ancestors
                    "src": "1206:21:29"
=======
                    "src": "1826:21:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "1826:21:32"
=======
                    "src": "1826:21:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "1195:7:2"
||||||| merged common ancestors
                      "src": "1195:7:29"
=======
                      "src": "1815:7:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "1815:7:32"
=======
                      "src": "1815:7:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "1167:5:2",
||||||| merged common ancestors
                "src": "1167:5:29",
=======
                "src": "1787:5:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "1787:5:32",
=======
                "src": "1787:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "1177:7:2",
||||||| merged common ancestors
                "src": "1177:7:29",
=======
                "src": "1797:7:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "1797:7:32",
=======
                "src": "1797:7:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
<<<<<<< HEAD
            "src": "1143:90:2"
||||||| merged common ancestors
            "src": "1143:90:29"
=======
            "src": "1763:90:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "src": "1763:90:32"
=======
            "src": "1763:90:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "1284:81:2",
||||||| merged common ancestors
              "src": "1284:81:29",
=======
              "src": "1904:81:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "1904:81:32",
=======
              "src": "1904:81:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
<<<<<<< HEAD
                  "src": "1294:65:2",
||||||| merged common ancestors
                  "src": "1294:65:29",
=======
                  "src": "1914:65:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "src": "1914:65:32",
=======
                  "src": "1914:65:33",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "1309:5:2"
||||||| merged common ancestors
                        "src": "1309:5:29"
=======
                        "src": "1929:5:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "1929:5:32"
=======
                        "src": "1929:5:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "1316:42:2",
||||||| merged common ancestors
                        "src": "1316:42:29",
=======
                        "src": "1936:42:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "1936:42:32",
=======
                        "src": "1936:42:33",
>>>>>>> origin/ajibigad/token-swap
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "1305:3:2"
||||||| merged common ancestors
                      "src": "1305:3:29"
=======
                      "src": "1925:3:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "1925:3:32"
=======
                      "src": "1925:3:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "1305:54:2"
||||||| merged common ancestors
                    "src": "1305:54:29"
=======
                    "src": "1925:54:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "1925:54:32"
=======
                    "src": "1925:54:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "1294:7:2"
||||||| merged common ancestors
                      "src": "1294:7:29"
=======
                      "src": "1914:7:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "1914:7:32"
=======
                      "src": "1914:7:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "1266:5:2",
||||||| merged common ancestors
                "src": "1266:5:29",
=======
                "src": "1886:5:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "1886:5:32",
=======
                "src": "1886:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "1276:7:2",
||||||| merged common ancestors
                "src": "1276:7:29",
=======
                "src": "1896:7:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "1896:7:32",
=======
                "src": "1896:7:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
<<<<<<< HEAD
            "src": "1239:126:2"
||||||| merged common ancestors
            "src": "1239:126:29"
=======
            "src": "1859:126:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "src": "1859:126:32"
=======
            "src": "1859:126:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "1416:32:2",
||||||| merged common ancestors
              "src": "1416:32:29",
=======
              "src": "2036:32:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "2036:32:32",
=======
              "src": "2036:32:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
<<<<<<< HEAD
                  "src": "1426:16:2",
||||||| merged common ancestors
                  "src": "1426:16:29",
=======
                  "src": "2046:16:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "src": "2046:16:32",
=======
                  "src": "2046:16:33",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "1437:5:2"
||||||| merged common ancestors
                    "src": "1437:5:29"
=======
                    "src": "2057:5:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "2057:5:32"
=======
                    "src": "2057:5:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "1426:7:2"
||||||| merged common ancestors
                      "src": "1426:7:29"
=======
                      "src": "2046:7:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "2046:7:32"
=======
                      "src": "2046:7:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "1398:5:2",
||||||| merged common ancestors
                "src": "1398:5:29",
=======
                "src": "2018:5:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "2018:5:32",
=======
                "src": "2018:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "1408:7:2",
||||||| merged common ancestors
                "src": "1408:7:29",
=======
                "src": "2028:7:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "2028:7:32",
=======
                "src": "2028:7:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
<<<<<<< HEAD
            "src": "1371:77:2"
||||||| merged common ancestors
            "src": "1371:77:29"
=======
            "src": "1991:77:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "src": "1991:77:32"
=======
            "src": "1991:77:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "1497:79:2",
||||||| merged common ancestors
              "src": "1497:79:29",
=======
              "src": "2117:79:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "2117:79:32",
=======
              "src": "2117:79:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "1554:16:2",
||||||| merged common ancestors
                    "src": "1554:16:29",
=======
                    "src": "2174:16:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "2174:16:32",
=======
                    "src": "2174:16:33",
>>>>>>> origin/ajibigad/token-swap
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
<<<<<<< HEAD
                              "src": "1563:1:2",
||||||| merged common ancestors
                              "src": "1563:1:29",
=======
                              "src": "2183:1:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                              "src": "2183:1:32",
=======
                              "src": "2183:1:33",
>>>>>>> origin/ajibigad/token-swap
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
<<<<<<< HEAD
                              "src": "1566:1:2",
||||||| merged common ancestors
                              "src": "1566:1:29",
=======
                              "src": "2186:1:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                              "src": "2186:1:32",
=======
                              "src": "2186:1:33",
>>>>>>> origin/ajibigad/token-swap
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "1556:6:2"
||||||| merged common ancestors
                            "src": "1556:6:29"
=======
                            "src": "2176:6:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "2176:6:32"
=======
                            "src": "2176:6:33"
>>>>>>> origin/ajibigad/token-swap
                          },
                          "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "1556:12:2"
||||||| merged common ancestors
                          "src": "1556:12:29"
=======
                          "src": "2176:12:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                          "src": "2176:12:32"
=======
                          "src": "2176:12:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulExpressionStatement",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "1556:12:2"
||||||| merged common ancestors
                        "src": "1556:12:29"
=======
                        "src": "2176:12:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "2176:12:32"
=======
                        "src": "2176:12:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "1520:5:2"
||||||| merged common ancestors
                            "src": "1520:5:29"
=======
                            "src": "2140:5:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "2140:5:32"
=======
                            "src": "2140:5:33"
>>>>>>> origin/ajibigad/token-swap
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                                "src": "1545:5:2"
||||||| merged common ancestors
                                "src": "1545:5:29"
=======
                                "src": "2165:5:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                                "src": "2165:5:32"
=======
                                "src": "2165:5:33"
>>>>>>> origin/ajibigad/token-swap
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                              "src": "1527:17:2"
||||||| merged common ancestors
                              "src": "1527:17:29"
=======
                              "src": "2147:17:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                              "src": "2147:17:32"
=======
                              "src": "2147:17:33"
>>>>>>> origin/ajibigad/token-swap
                            },
                            "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "1527:24:2"
||||||| merged common ancestors
                            "src": "1527:24:29"
=======
                            "src": "2147:24:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "2147:24:32"
=======
                            "src": "2147:24:33"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "1517:2:2"
||||||| merged common ancestors
                          "src": "1517:2:29"
=======
                          "src": "2137:2:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                          "src": "2137:2:32"
=======
                          "src": "2137:2:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "1517:35:2"
||||||| merged common ancestors
                        "src": "1517:35:29"
=======
                        "src": "2137:35:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "2137:35:32"
=======
                        "src": "2137:35:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "1510:6:2"
||||||| merged common ancestors
                      "src": "1510:6:29"
=======
                      "src": "2130:6:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "2130:6:32"
=======
                      "src": "2130:6:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "1510:43:2"
||||||| merged common ancestors
                    "src": "1510:43:29"
=======
                    "src": "2130:43:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "2130:43:32"
=======
                    "src": "2130:43:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "nodeType": "YulIf",
<<<<<<< HEAD
<<<<<<< HEAD
                  "src": "1507:2:2"
||||||| merged common ancestors
                  "src": "1507:2:29"
=======
                  "src": "2127:2:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "src": "2127:2:32"
=======
                  "src": "2127:2:33"
>>>>>>> origin/ajibigad/token-swap
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "1490:5:2",
||||||| merged common ancestors
                "src": "1490:5:29",
=======
                "src": "2110:5:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "2110:5:32",
=======
                "src": "2110:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
<<<<<<< HEAD
            "src": "1454:122:2"
||||||| merged common ancestors
            "src": "1454:122:29"
=======
            "src": "2074:122:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "src": "2074:122:32"
=======
            "src": "2074:122:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "1625:79:2",
||||||| merged common ancestors
              "src": "1625:79:29",
=======
              "src": "2245:79:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "2245:79:32",
=======
              "src": "2245:79:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "1682:16:2",
||||||| merged common ancestors
                    "src": "1682:16:29",
=======
                    "src": "2302:16:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "2302:16:32",
=======
                    "src": "2302:16:33",
>>>>>>> origin/ajibigad/token-swap
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
<<<<<<< HEAD
                              "src": "1691:1:2",
||||||| merged common ancestors
                              "src": "1691:1:29",
=======
                              "src": "2311:1:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                              "src": "2311:1:32",
=======
                              "src": "2311:1:33",
>>>>>>> origin/ajibigad/token-swap
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
<<<<<<< HEAD
                              "src": "1694:1:2",
||||||| merged common ancestors
                              "src": "1694:1:29",
=======
                              "src": "2314:1:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                              "src": "2314:1:32",
=======
                              "src": "2314:1:33",
>>>>>>> origin/ajibigad/token-swap
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "1684:6:2"
||||||| merged common ancestors
                            "src": "1684:6:29"
=======
                            "src": "2304:6:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "2304:6:32"
=======
                            "src": "2304:6:33"
>>>>>>> origin/ajibigad/token-swap
                          },
                          "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "1684:12:2"
||||||| merged common ancestors
                          "src": "1684:12:29"
=======
                          "src": "2304:12:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                          "src": "2304:12:32"
=======
                          "src": "2304:12:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulExpressionStatement",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "1684:12:2"
||||||| merged common ancestors
                        "src": "1684:12:29"
=======
                        "src": "2304:12:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "2304:12:32"
=======
                        "src": "2304:12:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "1648:5:2"
||||||| merged common ancestors
                            "src": "1648:5:29"
=======
                            "src": "2268:5:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "2268:5:32"
=======
                            "src": "2268:5:33"
>>>>>>> origin/ajibigad/token-swap
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                                "src": "1673:5:2"
||||||| merged common ancestors
                                "src": "1673:5:29"
=======
                                "src": "2293:5:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                                "src": "2293:5:32"
=======
                                "src": "2293:5:33"
>>>>>>> origin/ajibigad/token-swap
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                              "src": "1655:17:2"
||||||| merged common ancestors
                              "src": "1655:17:29"
=======
                              "src": "2275:17:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                              "src": "2275:17:32"
=======
                              "src": "2275:17:33"
>>>>>>> origin/ajibigad/token-swap
                            },
                            "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "1655:24:2"
||||||| merged common ancestors
                            "src": "1655:24:29"
=======
                            "src": "2275:24:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "2275:24:32"
=======
                            "src": "2275:24:33"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "1645:2:2"
||||||| merged common ancestors
                          "src": "1645:2:29"
=======
                          "src": "2265:2:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                          "src": "2265:2:32"
=======
                          "src": "2265:2:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "1645:35:2"
||||||| merged common ancestors
                        "src": "1645:35:29"
=======
                        "src": "2265:35:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "2265:35:32"
=======
                        "src": "2265:35:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "1638:6:2"
||||||| merged common ancestors
                      "src": "1638:6:29"
=======
                      "src": "2258:6:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "2258:6:32"
=======
                      "src": "2258:6:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "1638:43:2"
||||||| merged common ancestors
                    "src": "1638:43:29"
=======
                    "src": "2258:43:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "2258:43:32"
=======
                    "src": "2258:43:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "nodeType": "YulIf",
<<<<<<< HEAD
<<<<<<< HEAD
                  "src": "1635:2:2"
||||||| merged common ancestors
                  "src": "1635:2:29"
=======
                  "src": "2255:2:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "src": "2255:2:32"
=======
                  "src": "2255:2:33"
>>>>>>> origin/ajibigad/token-swap
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "1618:5:2",
||||||| merged common ancestors
                "src": "1618:5:29",
=======
                "src": "2238:5:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "2238:5:32",
=======
                "src": "2238:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
<<<<<<< HEAD
            "src": "1582:122:2"
||||||| merged common ancestors
            "src": "1582:122:29"
=======
            "src": "2202:122:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "src": "2202:122:32"
=======
            "src": "2202:122:33"
>>>>>>> origin/ajibigad/token-swap
          }
        ]
      },
<<<<<<< HEAD
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 2,
||||||| merged common ancestors
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 29,
=======
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
<<<<<<< HEAD
      "id": 32,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
      "id": 32,
=======
      "id": 33,
>>>>>>> origin/ajibigad/token-swap
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
<<<<<<< HEAD
<<<<<<< HEAD
  "sourceMap": "62:825:0:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "62:825:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;732:74;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;848:36;;;:::i;:::-;;732:74;798:4;732:74;;;;:::o;848:36::-;:::o;7:139:2:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:407::-;;;422:2;410:9;401:7;397:23;393:32;390:2;;;438:1;435;428:12;390:2;481:1;506:53;551:7;542:6;531:9;527:22;506:53;:::i;:::-;496:63;;452:117;608:2;634:53;679:7;670:6;659:9;655:22;634:53;:::i;:::-;624:63;;579:118;380:324;;;;;:::o;710:109::-;791:21;806:5;791:21;:::i;:::-;786:3;779:34;769:50;;:::o;825:210::-;;950:2;939:9;935:18;927:26;;963:65;1025:1;1014:9;1010:17;1001:6;963:65;:::i;:::-;917:118;;;;:::o;1041:96::-;;1107:24;1125:5;1107:24;:::i;:::-;1096:35;;1086:51;;;:::o;1143:90::-;;1220:5;1213:13;1206:21;1195:32;;1185:48;;;:::o;1239:126::-;;1316:42;1309:5;1305:54;1294:65;;1284:81;;;:::o;1371:77::-;;1437:5;1426:16;;1416:32;;;:::o;1454:122::-;1527:24;1545:5;1527:24;:::i;:::-;1520:5;1517:35;1507:2;;1566:1;1563;1556:12;1507:2;1497:79;:::o;1582:122::-;1655:24;1673:5;1655:24;:::i;:::-;1648:5;1645:35;1635:2;;1694:1;1691;1684:12;1635:2;1625:79;:::o",
  "source": "pragma solidity ^0.7.0;\r\npragma experimental ABIEncoderV2;\r\n\r\ncontract Bep20 {\r\n    /**\r\n    * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n    *\r\n    * Returns a boolean value indicating whether the operation succeeded.\r\n    *\r\n    * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n    * that someone may use both the old and the new allowance by unfortunate\r\n    * transaction ordering. One possible solution to mitigate this race\r\n    * condition is to first reduce the spender's allowance to 0 and set the\r\n    * desired value afterwards:\r\n    * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n    *\r\n    * Emits an {Approval} event.\r\n    */\r\n    function approve(address spender, uint256 amount) public returns (bool) {}\r\n\r\n    // funds goes as `msg.value`\r\n    function deposit() public payable {}\r\n}",
  "sourcePath": "C:/Users/USER/Desktop/BLOCKCHAIN/SmartBet/contracts/Bep20.sol",
||||||| merged common ancestors
  "sourceMap": "2104:716:4:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "2104:716:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2744:74;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;2810:4;2744:74;;;;:::o;7:139:29:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:407::-;;;422:2;410:9;401:7;397:23;393:32;390:2;;;438:1;435;428:12;390:2;481:1;506:53;551:7;542:6;531:9;527:22;506:53;:::i;:::-;496:63;;452:117;608:2;634:53;679:7;670:6;659:9;655:22;634:53;:::i;:::-;624:63;;579:118;380:324;;;;;:::o;710:109::-;791:21;806:5;791:21;:::i;:::-;786:3;779:34;769:50;;:::o;825:210::-;;950:2;939:9;935:18;927:26;;963:65;1025:1;1014:9;1010:17;1001:6;963:65;:::i;:::-;917:118;;;;:::o;1041:96::-;;1107:24;1125:5;1107:24;:::i;:::-;1096:35;;1086:51;;;:::o;1143:90::-;;1220:5;1213:13;1206:21;1195:32;;1185:48;;;:::o;1239:126::-;;1316:42;1309:5;1305:54;1294:65;;1284:81;;;:::o;1371:77::-;;1437:5;1426:16;;1416:32;;;:::o;1454:122::-;1527:24;1545:5;1527:24;:::i;:::-;1520:5;1517:35;1507:2;;1566:1;1563;1556:12;1507:2;1497:79;:::o;1582:122::-;1655:24;1673:5;1655:24;:::i;:::-;1648:5;1645:35;1635:2;;1694:1;1691;1684:12;1635:2;1625:79;:::o",
  "source": "pragma solidity ^0.7.0;\npragma experimental ABIEncoderV2;\n\n\n//TODO: move to VToken.sol\ncontract VToken {\n    // No implementation, just the function signature. This is just so Solidity can work out how to call it.\n    \n    /*\n    * @notice   The mint function transfers an asset into the protocol, which begins accumulating interest\n    * based on the current Supply Rate for The user receives a quantity of vTokens equal to the\n    * underlying tokens tokens supplied, divided by the current Exchange Rate.\n    * msg.sender: The account which shall supply the asset, and own the minted vTokens.\n    * @param    mintAmount The amount of the asset to be supplied, in units of the underlying asset.\n    * @return   status 0 on success, otherwise an Error code\n    */\n    function mint(uint mintAmount) public returns (uint) {}\n    \n    /*\n    * @notice   The redeem underlying function converts vTokens into a specified quantity of the underlying asset, \n    * and returns them to the user. The amount of vTokens redeemed is equal to the quantity of underlying tokens received, \n    * divided by the current Exchange Rate. The amount redeemed must be less than the user's Account Liquidity \n    * and the market's available liquidity.\n    * msg.sender: The account to which redeemed funds shall be transferred.\n    * @param    redeemAmount The amount of underlying to be redeemed.\n    * @return   status 0 on success, otherwise an Error code\n    */\n    function redeemUnderlying(uint redeemAmount) public returns (uint) {}\n    \n    /*\n    * @notice   The user's underlying balance, representing their assets in the protocol,\n    * is equal to the user's vToken balance multiplied by the Exchange Rate.\n    * @param    account The account to get the underlying balance of.\n    * @return   The amount of underlying currently owned by the account.\n    */\n    function balanceOfUnderlying(address account) public returns (uint) {}\n    \n    \n    // function exchangeRateCurrent() returns (uint) {}\n    //exchangeRate = (getCash() + totalBorrows() - totalReserves()) / totalSupply()\n}\n\n//TODO: move to Bep20.sol\ncontract Bep20 {\n    /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) public returns (bool) {}\n}\n\n/*\n* @notice Integrates with Venus lending protocol\n*/\ncontract SmartInvestV1 {\n    \n    uint256 public totalTreasury;\n    address public constant vTOKEN_ADDRESS = 0x08e0A5575De71037aE36AbfAfb516595fE68e5e4; // BSC testnet Venus vTokens (vBUSD)\n    address public constant BASE_BEP20 = 0x8301F2213c0eeD49a7E28Ae4c3e91722919B8B47; //underlying asset: BUSD\n    \n    function invest(uint256 amount) public {\n        \n        Bep20 underlying = Bep20(BASE_BEP20);     // get a handle for the underlying asset\n        VToken vToken = VToken(vTOKEN_ADDRESS);   // get a handle for the corresponding vToken Contract\n        underlying.approve(address(vToken), amount); // approve the transfer\n        assert(vToken.mint(amount) == 0);            // mint the vTokens and assert there is no error\n    }\n    \n    function redeem(uint256 amount) public {\n        VToken vToken = VToken(vTOKEN_ADDRESS);\n        require(vToken.redeemUnderlying(amount) == 0, \"something went wrong\");\n    }\n    \n    function getBalance() public {\n        VToken vToken = VToken(vTOKEN_ADDRESS);\n        uint tokens = vToken.balanceOfUnderlying(msg.sender);\n    }\n    \n    // function exchangeRateCurrent() public {\n    //     VBep20 vToken = VToken(vTOKEN_ADDRESS);\n    //     uint exchangeRateMantissa = vToken.exchangeRateCurrent();\n    // }\n    \n}\n\n\n// const vTokenDecimals = 8; // all vTokens have 8 decimal places\n// const underlying = new web3.eth.Contract(bep20Abi, busdAddress);\n// const vToken = new web3.eth.Contract(vTokenAbi, vBusdAddress);\n// const underlyingDecimals = await underlying.methods.decimals().call();\n// const exchangeRateCurrent = await vToken.methods.exchangeRateCurrent().call();\n// const mantissa = 18 + parseInt(underlyingDecimals) - vTokenDecimals;\n// const onevTokenInUnderlying = exchangeRateCurrent / Math.pow(10, mantissa);\n// console.log('1 vBUSD can be redeemed for', oneVTokenInUnderlying, 'BUSD');",
  "sourcePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/SmartInvestV1.sol",
=======
  "sourceMap": "59:930:0:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "59:930:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;764:74;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;81:43;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;919:68;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;877:36;;;:::i;:::-;;764:74;830:4;764:74;;;;:::o;81:43::-;;;;;;;;;;;;;;;;;:::o;919:68::-;979:4;919:68;;;;:::o;877:36::-;:::o;7:139:32:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:407::-;;;690:2;678:9;669:7;665:23;661:32;658:2;;;706:1;703;696:12;658:2;749:1;774:53;819:7;810:6;799:9;795:22;774:53;:::i;:::-;764:63;;720:117;876:2;902:53;947:7;938:6;927:9;923:22;902:53;:::i;:::-;892:63;;847:118;648:324;;;;;:::o;978:109::-;1059:21;1074:5;1059:21;:::i;:::-;1054:3;1047:34;1037:50;;:::o;1093:118::-;1180:24;1198:5;1180:24;:::i;:::-;1175:3;1168:37;1158:53;;:::o;1217:210::-;;1342:2;1331:9;1327:18;1319:26;;1355:65;1417:1;1406:9;1402:17;1393:6;1355:65;:::i;:::-;1309:118;;;;:::o;1433:222::-;;1564:2;1553:9;1549:18;1541:26;;1577:71;1645:1;1634:9;1630:17;1621:6;1577:71;:::i;:::-;1531:124;;;;:::o;1661:96::-;;1727:24;1745:5;1727:24;:::i;:::-;1716:35;;1706:51;;;:::o;1763:90::-;;1840:5;1833:13;1826:21;1815:32;;1805:48;;;:::o;1859:126::-;;1936:42;1929:5;1925:54;1914:65;;1904:81;;;:::o;1991:77::-;;2057:5;2046:16;;2036:32;;;:::o;2074:122::-;2147:24;2165:5;2147:24;:::i;:::-;2140:5;2137:35;2127:2;;2186:1;2183;2176:12;2127:2;2117:79;:::o;2202:122::-;2275:24;2293:5;2275:24;:::i;:::-;2268:5;2265:35;2255:2;;2314:1;2311;2304:12;2255:2;2245:79;:::o",
||||||| merged common ancestors
  "sourceMap": "59:930:0:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "59:930:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;764:74;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;81:43;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;919:68;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;877:36;;;:::i;:::-;;764:74;830:4;764:74;;;;:::o;81:43::-;;;;;;;;;;;;;;;;;:::o;919:68::-;979:4;919:68;;;;:::o;877:36::-;:::o;7:139:32:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:407::-;;;690:2;678:9;669:7;665:23;661:32;658:2;;;706:1;703;696:12;658:2;749:1;774:53;819:7;810:6;799:9;795:22;774:53;:::i;:::-;764:63;;720:117;876:2;902:53;947:7;938:6;927:9;923:22;902:53;:::i;:::-;892:63;;847:118;648:324;;;;;:::o;978:109::-;1059:21;1074:5;1059:21;:::i;:::-;1054:3;1047:34;1037:50;;:::o;1093:118::-;1180:24;1198:5;1180:24;:::i;:::-;1175:3;1168:37;1158:53;;:::o;1217:210::-;;1342:2;1331:9;1327:18;1319:26;;1355:65;1417:1;1406:9;1402:17;1393:6;1355:65;:::i;:::-;1309:118;;;;:::o;1433:222::-;;1564:2;1553:9;1549:18;1541:26;;1577:71;1645:1;1634:9;1630:17;1621:6;1577:71;:::i;:::-;1531:124;;;;:::o;1661:96::-;;1727:24;1745:5;1727:24;:::i;:::-;1716:35;;1706:51;;;:::o;1763:90::-;;1840:5;1833:13;1826:21;1815:32;;1805:48;;;:::o;1859:126::-;;1936:42;1929:5;1925:54;1914:65;;1904:81;;;:::o;1991:77::-;;2057:5;2046:16;;2036:32;;;:::o;2074:122::-;2147:24;2165:5;2147:24;:::i;:::-;2140:5;2137:35;2127:2;;2186:1;2183;2176:12;2127:2;2117:79;:::o;2202:122::-;2275:24;2293:5;2275:24;:::i;:::-;2268:5;2265:35;2255:2;;2314:1;2311;2304:12;2255:2;2245:79;:::o",
=======
  "sourceMap": "59:930:1:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "59:930:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;764:74;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;81:43;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;919:68;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;877:36;;;:::i;:::-;;764:74;830:4;764:74;;;;:::o;81:43::-;;;;;;;;;;;;;;;;;:::o;919:68::-;979:4;919:68;;;;:::o;877:36::-;:::o;7:139:33:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:407::-;;;690:2;678:9;669:7;665:23;661:32;658:2;;;706:1;703;696:12;658:2;749:1;774:53;819:7;810:6;799:9;795:22;774:53;:::i;:::-;764:63;;720:117;876:2;902:53;947:7;938:6;927:9;923:22;902:53;:::i;:::-;892:63;;847:118;648:324;;;;;:::o;978:109::-;1059:21;1074:5;1059:21;:::i;:::-;1054:3;1047:34;1037:50;;:::o;1093:118::-;1180:24;1198:5;1180:24;:::i;:::-;1175:3;1168:37;1158:53;;:::o;1217:210::-;;1342:2;1331:9;1327:18;1319:26;;1355:65;1417:1;1406:9;1402:17;1393:6;1355:65;:::i;:::-;1309:118;;;;:::o;1433:222::-;;1564:2;1553:9;1549:18;1541:26;;1577:71;1645:1;1634:9;1630:17;1621:6;1577:71;:::i;:::-;1531:124;;;;:::o;1661:96::-;;1727:24;1745:5;1727:24;:::i;:::-;1716:35;;1706:51;;;:::o;1763:90::-;;1840:5;1833:13;1826:21;1815:32;;1805:48;;;:::o;1859:126::-;;1936:42;1929:5;1925:54;1914:65;;1904:81;;;:::o;1991:77::-;;2057:5;2046:16;;2036:32;;;:::o;2074:122::-;2147:24;2165:5;2147:24;:::i;:::-;2140:5;2137:35;2127:2;;2186:1;2183;2176:12;2127:2;2117:79;:::o;2202:122::-;2275:24;2293:5;2275:24;:::i;:::-;2268:5;2265:35;2255:2;;2314:1;2311;2304:12;2255:2;2245:79;:::o",
>>>>>>> origin/ajibigad/token-swap
  "source": "pragma solidity ^0.7.0;\npragma experimental ABIEncoderV2;\n\ncontract BEP20 {\n\n    mapping (address => uint) public  balanceOf;\n    /**\n    * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n    *\n    * Returns a boolean value indicating whether the operation succeeded.\n    *\n    * IMPORTANT: Beware that changing an allowance with this method brings the risk\n    * that someone may use both the old and the new allowance by unfortunate\n    * transaction ordering. One possible solution to mitigate this race\n    * condition is to first reduce the spender's allowance to 0 and set the\n    * desired value afterwards:\n    * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n    *\n    * Emits an {Approval} event.\n    */\n    function approve(address spender, uint256 amount) public returns (bool) {}\n\n    // funds goes as `msg.value`\n    function deposit() public payable {}\n\n    function transfer(address dst, uint amount) public returns (bool) {}\n}",
<<<<<<< HEAD
  "sourcePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/BEP20.sol",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
  "sourcePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/BEP20.sol",
=======
  "sourcePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/Bep20.sol",
>>>>>>> origin/ajibigad/token-swap
  "ast": {
<<<<<<< HEAD
<<<<<<< HEAD
    "absolutePath": "/C/Users/USER/Desktop/BLOCKCHAIN/SmartBet/contracts/Bep20.sol",
||||||| merged common ancestors
    "absolutePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/SmartInvestV1.sol",
=======
    "absolutePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/BEP20.sol",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
    "absolutePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/BEP20.sol",
=======
    "absolutePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/Bep20.sol",
>>>>>>> origin/ajibigad/token-swap
    "exportedSymbols": {
<<<<<<< HEAD
      "Bep20": [
        18
||||||| merged common ancestors
      "Bep20": [
        1099
      ],
      "SmartInvestV1": [
        1185
      ],
      "VToken": [
        1087
=======
      "BEP20": [
<<<<<<< HEAD
        32
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
        32
=======
        65
>>>>>>> origin/ajibigad/token-swap
      ]
    },
<<<<<<< HEAD
<<<<<<< HEAD
    "id": 19,
||||||| merged common ancestors
    "id": 1186,
=======
    "id": 33,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
    "id": 33,
=======
    "id": 66,
>>>>>>> origin/ajibigad/token-swap
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "id": 35,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
<<<<<<< HEAD
<<<<<<< HEAD
        "src": "25:33:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 18,
        "linearizedBaseContracts": [
          18
        ],
        "name": "Bep20",
        "nodeType": "ContractDefinition",
        "nodes": [
||||||| merged common ancestors
        "src": "24:33:4"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1087,
        "linearizedBaseContracts": [
          1087
        ],
        "name": "VToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1069,
              "nodeType": "Block",
              "src": "822:2:4",
              "statements": []
            },
            "functionSelector": "a0712d68",
            "id": 1070,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1064,
                  "mutability": "mutable",
                  "name": "mintAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1070,
                  "src": "783:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1063,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "783:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "782:17:4"
            },
            "returnParameters": {
              "id": 1068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1067,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1070,
                  "src": "816:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1066,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "816:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "815:6:4"
            },
            "scope": 1087,
            "src": "769:55:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1077,
              "nodeType": "Block",
              "src": "1518:2:4",
              "statements": []
            },
            "functionSelector": "852a12e3",
            "id": 1078,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemUnderlying",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1072,
                  "mutability": "mutable",
                  "name": "redeemAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1078,
                  "src": "1477:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1071,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1477:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1476:19:4"
            },
            "returnParameters": {
              "id": 1076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1075,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1078,
                  "src": "1512:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1074,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1512:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1511:6:4"
            },
            "scope": 1087,
            "src": "1451:69:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1085,
              "nodeType": "Block",
              "src": "1922:2:4",
              "statements": []
            },
            "functionSelector": "3af9e669",
            "id": 1086,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOfUnderlying",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1080,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 1086,
                  "src": "1883:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1079,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1883:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1882:17:4"
            },
            "returnParameters": {
              "id": 1084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1083,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1086,
                  "src": "1916:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1082,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1916:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1915:6:4"
            },
            "scope": 1087,
            "src": "1854:70:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1186,
        "src": "87:1989:4"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1099,
        "linearizedBaseContracts": [
          1099
        ],
        "name": "Bep20",
        "nodeType": "ContractDefinition",
        "nodes": [
=======
        "src": "24:33:0"
||||||| merged common ancestors
        "src": "24:33:0"
=======
        "src": "24:33:1"
>>>>>>> origin/ajibigad/token-swap
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 65,
        "linearizedBaseContracts": [
          65
        ],
        "name": "BEP20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "70a08231",
            "id": 39,
            "mutability": "mutable",
            "name": "balanceOf",
            "nodeType": "VariableDeclaration",
            "scope": 65,
            "src": "81:43:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 38,
              "keyType": {
                "id": 36,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "90:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "81:25:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 37,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "101:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 49,
              "nodeType": "Block",
              "src": "836:2:1",
              "statements": []
            },
            "documentation": {
              "id": 40,
              "nodeType": "StructuredDocumentation",
              "src": "130:629:1",
              "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
            },
            "functionSelector": "095ea7b3",
            "id": 50,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "781:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "781:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "798:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "798:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "780:33:1"
            },
            "returnParameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "830:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "830:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "829:6:1"
            },
            "scope": 65,
            "src": "764:74:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 53,
              "nodeType": "Block",
              "src": "911:2:1",
              "statements": []
            },
            "functionSelector": "d0e30db0",
            "id": 54,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "893:2:1"
            },
            "returnParameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "911:0:1"
            },
            "scope": 65,
            "src": "877:36:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
>>>>>>> origin/ajibigad/token-swap
          {
            "body": {
<<<<<<< HEAD
<<<<<<< HEAD
              "id": 12,
||||||| merged common ancestors
              "id": 1097,
=======
              "id": 30,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "id": 30,
=======
              "id": 63,
>>>>>>> origin/ajibigad/token-swap
              "nodeType": "Block",
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "804:2:0",
||||||| merged common ancestors
              "src": "2816:2:4",
=======
              "src": "985:2:0",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "985:2:0",
=======
              "src": "985:2:1",
>>>>>>> origin/ajibigad/token-swap
              "statements": []
            },
<<<<<<< HEAD
            "documentation": {
              "id": 3,
              "nodeType": "StructuredDocumentation",
              "src": "84:642:0",
              "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
            },
            "functionSelector": "095ea7b3",
            "id": 13,
||||||| merged common ancestors
            "documentation": {
              "id": 1088,
              "nodeType": "StructuredDocumentation",
              "src": "2125:616:4",
              "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
            },
            "functionSelector": "095ea7b3",
            "id": 1098,
=======
            "functionSelector": "a9059cbb",
<<<<<<< HEAD
            "id": 31,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "id": 31,
=======
            "id": 64,
>>>>>>> origin/ajibigad/token-swap
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
<<<<<<< HEAD
              "id": 8,
||||||| merged common ancestors
              "id": 1093,
=======
              "id": 26,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "id": 26,
=======
              "id": 59,
>>>>>>> origin/ajibigad/token-swap
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
<<<<<<< HEAD
                  "id": 5,
||||||| merged common ancestors
                  "id": 1090,
=======
                  "id": 23,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "id": 23,
=======
                  "id": 56,
>>>>>>> origin/ajibigad/token-swap
                  "mutability": "mutable",
                  "name": "dst",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
<<<<<<< HEAD
                  "scope": 13,
                  "src": "749:15:0",
||||||| merged common ancestors
                  "scope": 1098,
                  "src": "2761:15:4",
=======
                  "scope": 31,
                  "src": "937:11:0",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "scope": 31,
                  "src": "937:11:0",
=======
                  "scope": 64,
                  "src": "937:11:1",
>>>>>>> origin/ajibigad/token-swap
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
<<<<<<< HEAD
                    "id": 4,
||||||| merged common ancestors
                    "id": 1089,
=======
                    "id": 22,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "id": 22,
=======
                    "id": 55,
>>>>>>> origin/ajibigad/token-swap
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "749:7:0",
||||||| merged common ancestors
                    "src": "2761:7:4",
=======
                    "src": "937:7:0",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "937:7:0",
=======
                    "src": "937:7:1",
>>>>>>> origin/ajibigad/token-swap
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
<<<<<<< HEAD
                  "id": 7,
||||||| merged common ancestors
                  "id": 1092,
=======
                  "id": 25,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "id": 25,
=======
                  "id": 58,
>>>>>>> origin/ajibigad/token-swap
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
<<<<<<< HEAD
                  "scope": 13,
                  "src": "766:14:0",
||||||| merged common ancestors
                  "scope": 1098,
                  "src": "2778:14:4",
=======
                  "scope": 31,
                  "src": "950:11:0",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "scope": 31,
                  "src": "950:11:0",
=======
                  "scope": 64,
                  "src": "950:11:1",
>>>>>>> origin/ajibigad/token-swap
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
<<<<<<< HEAD
                    "id": 6,
                    "name": "uint256",
||||||| merged common ancestors
                    "id": 1091,
                    "name": "uint256",
=======
                    "id": 24,
||||||| merged common ancestors
                    "id": 24,
=======
                    "id": 57,
>>>>>>> origin/ajibigad/token-swap
                    "name": "uint",
>>>>>>> origin/ajibigad/token-swap
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "766:7:0",
||||||| merged common ancestors
                    "src": "2778:7:4",
=======
                    "src": "950:4:0",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "950:4:0",
=======
                    "src": "950:4:1",
>>>>>>> origin/ajibigad/token-swap
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "748:33:0"
||||||| merged common ancestors
              "src": "2760:33:4"
=======
              "src": "936:26:0"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "936:26:0"
=======
              "src": "936:26:1"
>>>>>>> origin/ajibigad/token-swap
            },
            "returnParameters": {
<<<<<<< HEAD
<<<<<<< HEAD
              "id": 11,
||||||| merged common ancestors
              "id": 1096,
=======
              "id": 29,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "id": 29,
=======
              "id": 62,
>>>>>>> origin/ajibigad/token-swap
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
<<<<<<< HEAD
                  "id": 10,
||||||| merged common ancestors
                  "id": 1095,
=======
                  "id": 28,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "id": 28,
=======
                  "id": 61,
>>>>>>> origin/ajibigad/token-swap
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
<<<<<<< HEAD
                  "scope": 13,
                  "src": "798:4:0",
||||||| merged common ancestors
                  "scope": 1098,
                  "src": "2810:4:4",
=======
                  "scope": 31,
                  "src": "979:4:0",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "scope": 31,
                  "src": "979:4:0",
=======
                  "scope": 64,
                  "src": "979:4:1",
>>>>>>> origin/ajibigad/token-swap
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
<<<<<<< HEAD
                    "id": 9,
||||||| merged common ancestors
                    "id": 1094,
=======
                    "id": 27,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "id": 27,
=======
                    "id": 60,
>>>>>>> origin/ajibigad/token-swap
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "798:4:0",
||||||| merged common ancestors
                    "src": "2810:4:4",
=======
                    "src": "979:4:0",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "979:4:0",
=======
                    "src": "979:4:1",
>>>>>>> origin/ajibigad/token-swap
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "797:6:0"
||||||| merged common ancestors
              "src": "2809:6:4"
=======
              "src": "978:6:0"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "978:6:0"
=======
              "src": "978:6:1"
>>>>>>> origin/ajibigad/token-swap
            },
<<<<<<< HEAD
<<<<<<< HEAD
            "scope": 18,
            "src": "732:74:0",
||||||| merged common ancestors
            "scope": 1099,
            "src": "2744:74:4",
=======
            "scope": 32,
            "src": "919:68:0",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "scope": 32,
            "src": "919:68:0",
=======
            "scope": 65,
            "src": "919:68:1",
>>>>>>> origin/ajibigad/token-swap
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
<<<<<<< HEAD
<<<<<<< HEAD
          },
          {
            "body": {
              "id": 16,
              "nodeType": "Block",
              "src": "882:2:0",
              "statements": []
            },
            "functionSelector": "d0e30db0",
            "id": 17,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "864:2:0"
            },
            "returnParameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "882:0:0"
            },
            "scope": 18,
            "src": "848:36:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 19,
        "src": "62:825:0"
      }
    ],
    "src": "0:887:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/C/Users/USER/Desktop/BLOCKCHAIN/SmartBet/contracts/Bep20.sol",
      "exportedSymbols": {
        "Bep20": [
          18
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".0"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 2,
        "name": "PragmaDirective",
        "src": "25:33:0"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            18
          ],
          "name": "Bep20",
          "scope": 19
        },
        "children": [
||||||| merged common ancestors
          }
        ],
        "scope": 1186,
        "src": "2104:716:4"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1185,
        "linearizedBaseContracts": [
          1185
        ],
        "name": "SmartInvestV1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "897534a9",
            "id": 1101,
            "mutability": "mutable",
            "name": "totalTreasury",
            "nodeType": "VariableDeclaration",
            "scope": 1185,
            "src": "2911:28:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1100,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2911:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "1876ed4f",
            "id": 1104,
            "mutability": "constant",
            "name": "vTOKEN_ADDRESS",
            "nodeType": "VariableDeclaration",
            "scope": 1185,
            "src": "2945:83:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1102,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2945:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830386530413535373544653731303337614533364162664166623531363539356645363865356534",
              "id": 1103,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2986:42:4",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x08e0A5575De71037aE36AbfAfb516595fE68e5e4"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "9b3c25a5",
            "id": 1107,
            "mutability": "constant",
            "name": "BASE_BEP20",
            "nodeType": "VariableDeclaration",
            "scope": 1185,
            "src": "3071:79:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1105,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3071:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307838333031463232313363306565443439613745323841653463336539313732323931394238423437",
              "id": 1106,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3108:42:4",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x8301F2213c0eeD49a7E28Ae4c3e91722919B8B47"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1143,
              "nodeType": "Block",
              "src": "3225:390:4",
              "statements": [
                {
                  "assignments": [
                    1113
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1113,
                      "mutability": "mutable",
                      "name": "underlying",
                      "nodeType": "VariableDeclaration",
                      "scope": 1143,
                      "src": "3244:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Bep20_$1099",
                        "typeString": "contract Bep20"
                      },
                      "typeName": {
                        "id": 1112,
                        "name": "Bep20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1099,
                        "src": "3244:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Bep20_$1099",
                          "typeString": "contract Bep20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1117,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1115,
                        "name": "BASE_BEP20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1107,
                        "src": "3269:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1114,
                      "name": "Bep20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1099,
                      "src": "3263:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Bep20_$1099_$",
                        "typeString": "type(contract Bep20)"
                      }
                    },
                    "id": 1116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3263:17:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Bep20_$1099",
                      "typeString": "contract Bep20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3244:36:4"
                },
                {
                  "assignments": [
                    1119
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1119,
                      "mutability": "mutable",
                      "name": "vToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 1143,
                      "src": "3335:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VToken_$1087",
                        "typeString": "contract VToken"
                      },
                      "typeName": {
                        "id": 1118,
                        "name": "VToken",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1087,
                        "src": "3335:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VToken_$1087",
                          "typeString": "contract VToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1123,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1121,
                        "name": "vTOKEN_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1104,
                        "src": "3358:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1120,
                      "name": "VToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1087,
                      "src": "3351:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_VToken_$1087_$",
                        "typeString": "type(contract VToken)"
                      }
                    },
                    "id": 1122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3351:22:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VToken_$1087",
                      "typeString": "contract VToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3335:38:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1129,
                            "name": "vToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1119,
                            "src": "3466:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VToken_$1087",
                              "typeString": "contract VToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VToken_$1087",
                              "typeString": "contract VToken"
                            }
                          ],
                          "id": 1128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3458:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1127,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3458:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3458:15:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1131,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1109,
                        "src": "3475:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1124,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1113,
                        "src": "3439:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Bep20_$1099",
                          "typeString": "contract Bep20"
                        }
                      },
                      "id": 1126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1098,
                      "src": "3439:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3439:43:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1133,
                  "nodeType": "ExpressionStatement",
                  "src": "3439:43:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1137,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1109,
                              "src": "3535:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1135,
                              "name": "vToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1119,
                              "src": "3523:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_VToken_$1087",
                                "typeString": "contract VToken"
                              }
                            },
                            "id": 1136,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1070,
                            "src": "3523:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) external returns (uint256)"
                            }
                          },
                          "id": 1138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3523:19:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3546:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3523:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1134,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "3516:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3516:32:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1142,
                  "nodeType": "ExpressionStatement",
                  "src": "3516:32:4"
                }
              ]
            },
            "functionSelector": "2afcf480",
            "id": 1144,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "invest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1109,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1144,
                  "src": "3202:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1108,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3202:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3201:16:4"
            },
            "returnParameters": {
              "id": 1111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3225:0:4"
            },
            "scope": 1185,
            "src": "3186:429:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1165,
              "nodeType": "Block",
              "src": "3664:134:4",
              "statements": [
                {
                  "assignments": [
                    1150
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1150,
                      "mutability": "mutable",
                      "name": "vToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 1165,
                      "src": "3674:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VToken_$1087",
                        "typeString": "contract VToken"
                      },
                      "typeName": {
                        "id": 1149,
                        "name": "VToken",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1087,
                        "src": "3674:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VToken_$1087",
                          "typeString": "contract VToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1154,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1152,
                        "name": "vTOKEN_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1104,
                        "src": "3697:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1151,
                      "name": "VToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1087,
                      "src": "3690:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_VToken_$1087_$",
                        "typeString": "type(contract VToken)"
                      }
                    },
                    "id": 1153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3690:22:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VToken_$1087",
                      "typeString": "contract VToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3674:38:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1158,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1146,
                              "src": "3754:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1156,
                              "name": "vToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1150,
                              "src": "3730:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_VToken_$1087",
                                "typeString": "contract VToken"
                              }
                            },
                            "id": 1157,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "redeemUnderlying",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1078,
                            "src": "3730:23:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) external returns (uint256)"
                            }
                          },
                          "id": 1159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3730:31:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3765:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3730:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "736f6d657468696e672077656e742077726f6e67",
                        "id": 1162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3768:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f43bf56badfe6ff82d1cf3b32f384dd5aa20c66e5e2ef1990ae19705d02f4f09",
                          "typeString": "literal_string \"something went wrong\""
                        },
                        "value": "something went wrong"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f43bf56badfe6ff82d1cf3b32f384dd5aa20c66e5e2ef1990ae19705d02f4f09",
                          "typeString": "literal_string \"something went wrong\""
                        }
                      ],
                      "id": 1155,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3722:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3722:69:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1164,
                  "nodeType": "ExpressionStatement",
                  "src": "3722:69:4"
                }
              ]
            },
            "functionSelector": "db006a75",
            "id": 1166,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1146,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1166,
                  "src": "3641:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1145,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3641:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3640:16:4"
            },
            "returnParameters": {
              "id": 1148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3664:0:4"
            },
            "scope": 1185,
            "src": "3625:173:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1183,
              "nodeType": "Block",
              "src": "3837:117:4",
              "statements": [
                {
                  "assignments": [
                    1170
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1170,
                      "mutability": "mutable",
                      "name": "vToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 1183,
                      "src": "3847:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VToken_$1087",
                        "typeString": "contract VToken"
                      },
                      "typeName": {
                        "id": 1169,
                        "name": "VToken",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1087,
                        "src": "3847:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VToken_$1087",
                          "typeString": "contract VToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1174,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1172,
                        "name": "vTOKEN_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1104,
                        "src": "3870:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1171,
                      "name": "VToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1087,
                      "src": "3863:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_VToken_$1087_$",
                        "typeString": "type(contract VToken)"
                      }
                    },
                    "id": 1173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3863:22:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VToken_$1087",
                      "typeString": "contract VToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3847:38:4"
                },
                {
                  "assignments": [
                    1176
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1176,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nodeType": "VariableDeclaration",
                      "scope": 1183,
                      "src": "3895:11:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1175,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3895:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1182,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1179,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3936:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3936:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 1177,
                        "name": "vToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1170,
                        "src": "3909:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VToken_$1087",
                          "typeString": "contract VToken"
                        }
                      },
                      "id": 1178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOfUnderlying",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1086,
                      "src": "3909:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) external returns (uint256)"
                      }
                    },
                    "id": 1181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3909:38:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3895:52:4"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 1184,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3827:2:4"
            },
            "returnParameters": {
              "id": 1168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3837:0:4"
            },
            "scope": 1185,
            "src": "3808:146:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1186,
        "src": "2877:1265:4"
      }
    ],
    "src": "0:4729:4"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/SmartInvestV1.sol",
      "exportedSymbols": {
        "Bep20": [
          1099
        ],
        "SmartInvestV1": [
          1185
        ],
        "VToken": [
          1087
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".0"
          ]
        },
        "id": 1061,
        "name": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 1062,
        "name": "PragmaDirective",
        "src": "24:33:4"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1087
          ],
          "name": "VToken",
          "scope": 1186
        },
        "children": [
          {
            "attributes": {
              "functionSelector": "a0712d68",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mint",
              "scope": 1087,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "mintAmount",
                      "scope": 1070,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 1063,
                        "name": "ElementaryTypeName",
                        "src": "783:4:4"
                      }
                    ],
                    "id": 1064,
                    "name": "VariableDeclaration",
                    "src": "783:15:4"
                  }
                ],
                "id": 1065,
                "name": "ParameterList",
                "src": "782:17:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1070,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 1066,
                        "name": "ElementaryTypeName",
                        "src": "816:4:4"
                      }
                    ],
                    "id": 1067,
                    "name": "VariableDeclaration",
                    "src": "816:4:4"
                  }
                ],
                "id": 1068,
                "name": "ParameterList",
                "src": "815:6:4"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 1069,
                "name": "Block",
                "src": "822:2:4"
              }
            ],
            "id": 1070,
            "name": "FunctionDefinition",
            "src": "769:55:4"
          },
          {
            "attributes": {
              "functionSelector": "852a12e3",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "redeemUnderlying",
              "scope": 1087,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "redeemAmount",
                      "scope": 1078,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 1071,
                        "name": "ElementaryTypeName",
                        "src": "1477:4:4"
                      }
                    ],
                    "id": 1072,
                    "name": "VariableDeclaration",
                    "src": "1477:17:4"
                  }
                ],
                "id": 1073,
                "name": "ParameterList",
                "src": "1476:19:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1078,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 1074,
                        "name": "ElementaryTypeName",
                        "src": "1512:4:4"
                      }
                    ],
                    "id": 1075,
                    "name": "VariableDeclaration",
                    "src": "1512:4:4"
                  }
                ],
                "id": 1076,
                "name": "ParameterList",
                "src": "1511:6:4"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 1077,
                "name": "Block",
                "src": "1518:2:4"
              }
            ],
            "id": 1078,
            "name": "FunctionDefinition",
            "src": "1451:69:4"
          },
          {
            "attributes": {
              "functionSelector": "3af9e669",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "balanceOfUnderlying",
              "scope": 1087,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "account",
                      "scope": 1086,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1079,
                        "name": "ElementaryTypeName",
                        "src": "1883:7:4"
                      }
                    ],
                    "id": 1080,
                    "name": "VariableDeclaration",
                    "src": "1883:15:4"
                  }
                ],
                "id": 1081,
                "name": "ParameterList",
                "src": "1882:17:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1086,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 1082,
                        "name": "ElementaryTypeName",
                        "src": "1916:4:4"
                      }
                    ],
                    "id": 1083,
                    "name": "VariableDeclaration",
                    "src": "1916:4:4"
                  }
                ],
                "id": 1084,
                "name": "ParameterList",
                "src": "1915:6:4"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 1085,
                "name": "Block",
                "src": "1922:2:4"
              }
            ],
            "id": 1086,
            "name": "FunctionDefinition",
            "src": "1854:70:4"
          }
        ],
        "id": 1087,
        "name": "ContractDefinition",
        "src": "87:1989:4"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1099
          ],
          "name": "Bep20",
          "scope": 1186
        },
        "children": [
          {
            "attributes": {
              "functionSelector": "095ea7b3",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "approve",
              "scope": 1099,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                },
                "id": 1088,
                "name": "StructuredDocumentation",
                "src": "2125:616:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "spender",
                      "scope": 1098,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1089,
                        "name": "ElementaryTypeName",
                        "src": "2761:7:4"
                      }
                    ],
                    "id": 1090,
                    "name": "VariableDeclaration",
                    "src": "2761:15:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "scope": 1098,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1091,
                        "name": "ElementaryTypeName",
                        "src": "2778:7:4"
                      }
                    ],
                    "id": 1092,
                    "name": "VariableDeclaration",
                    "src": "2778:14:4"
                  }
                ],
                "id": 1093,
                "name": "ParameterList",
                "src": "2760:33:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1098,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 1094,
                        "name": "ElementaryTypeName",
                        "src": "2810:4:4"
                      }
                    ],
                    "id": 1095,
                    "name": "VariableDeclaration",
                    "src": "2810:4:4"
                  }
                ],
                "id": 1096,
                "name": "ParameterList",
                "src": "2809:6:4"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 1097,
                "name": "Block",
                "src": "2816:2:4"
              }
            ],
            "id": 1098,
            "name": "FunctionDefinition",
            "src": "2744:74:4"
          }
        ],
        "id": 1099,
        "name": "ContractDefinition",
        "src": "2104:716:4"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1185
          ],
          "name": "SmartInvestV1",
          "scope": 1186
        },
        "children": [
          {
            "attributes": {
              "constant": false,
              "functionSelector": "897534a9",
              "mutability": "mutable",
              "name": "totalTreasury",
              "scope": 1185,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 1100,
                "name": "ElementaryTypeName",
                "src": "2911:7:4"
              }
            ],
            "id": 1101,
            "name": "VariableDeclaration",
            "src": "2911:28:4"
          },
          {
            "attributes": {
              "constant": true,
              "functionSelector": "1876ed4f",
              "mutability": "constant",
              "name": "vTOKEN_ADDRESS",
              "scope": 1185,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 1102,
                "name": "ElementaryTypeName",
                "src": "2945:7:4"
              },
              {
                "attributes": {
                  "hexvalue": "307830386530413535373544653731303337614533364162664166623531363539356645363865356534",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "address payable",
                  "value": "0x08e0A5575De71037aE36AbfAfb516595fE68e5e4"
                },
                "id": 1103,
                "name": "Literal",
                "src": "2986:42:4"
              }
            ],
            "id": 1104,
            "name": "VariableDeclaration",
            "src": "2945:83:4"
          },
          {
            "attributes": {
              "constant": true,
              "functionSelector": "9b3c25a5",
              "mutability": "constant",
              "name": "BASE_BEP20",
              "scope": 1185,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 1105,
                "name": "ElementaryTypeName",
                "src": "3071:7:4"
              },
              {
                "attributes": {
                  "hexvalue": "307838333031463232313363306565443439613745323841653463336539313732323931394238423437",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "address payable",
                  "value": "0x8301F2213c0eeD49a7E28Ae4c3e91722919B8B47"
                },
                "id": 1106,
                "name": "Literal",
                "src": "3108:42:4"
              }
            ],
            "id": 1107,
            "name": "VariableDeclaration",
            "src": "3071:79:4"
          },
          {
            "attributes": {
              "functionSelector": "2afcf480",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "invest",
              "scope": 1185,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "scope": 1144,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1108,
                        "name": "ElementaryTypeName",
                        "src": "3202:7:4"
                      }
                    ],
                    "id": 1109,
                    "name": "VariableDeclaration",
                    "src": "3202:14:4"
                  }
                ],
                "id": 1110,
                "name": "ParameterList",
                "src": "3201:16:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1111,
                "name": "ParameterList",
                "src": "3225:0:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        1113
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "underlying",
                          "scope": 1143,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "contract Bep20",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "Bep20",
                              "referencedDeclaration": 1099,
                              "type": "contract Bep20"
                            },
                            "id": 1112,
                            "name": "UserDefinedTypeName",
                            "src": "3244:5:4"
                          }
                        ],
                        "id": 1113,
                        "name": "VariableDeclaration",
                        "src": "3244:16:4"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "contract Bep20",
                          "type_conversion": true
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1099,
                              "type": "type(contract Bep20)",
                              "value": "Bep20"
                            },
                            "id": 1114,
                            "name": "Identifier",
                            "src": "3263:5:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1107,
                              "type": "address",
                              "value": "BASE_BEP20"
                            },
                            "id": 1115,
                            "name": "Identifier",
                            "src": "3269:10:4"
                          }
                        ],
                        "id": 1116,
                        "name": "FunctionCall",
                        "src": "3263:17:4"
                      }
                    ],
                    "id": 1117,
                    "name": "VariableDeclarationStatement",
                    "src": "3244:36:4"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        1119
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "vToken",
                          "scope": 1143,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "contract VToken",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "VToken",
                              "referencedDeclaration": 1087,
                              "type": "contract VToken"
                            },
                            "id": 1118,
                            "name": "UserDefinedTypeName",
                            "src": "3335:6:4"
                          }
                        ],
                        "id": 1119,
                        "name": "VariableDeclaration",
                        "src": "3335:13:4"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "contract VToken",
                          "type_conversion": true
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1087,
                              "type": "type(contract VToken)",
                              "value": "VToken"
                            },
                            "id": 1120,
                            "name": "Identifier",
                            "src": "3351:6:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1104,
                              "type": "address",
                              "value": "vTOKEN_ADDRESS"
                            },
                            "id": 1121,
                            "name": "Identifier",
                            "src": "3358:14:4"
                          }
                        ],
                        "id": 1122,
                        "name": "FunctionCall",
                        "src": "3351:22:4"
                      }
                    ],
                    "id": 1123,
                    "name": "VariableDeclarationStatement",
                    "src": "3335:38:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "approve",
                              "referencedDeclaration": 1098,
                              "type": "function (address,uint256) external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1113,
                                  "type": "contract Bep20",
                                  "value": "underlying"
                                },
                                "id": 1124,
                                "name": "Identifier",
                                "src": "3439:10:4"
                              }
                            ],
                            "id": 1126,
                            "name": "MemberAccess",
                            "src": "3439:18:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_VToken_$1087",
                                      "typeString": "contract VToken"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 1127,
                                    "name": "ElementaryTypeName",
                                    "src": "3458:7:4"
                                  }
                                ],
                                "id": 1128,
                                "name": "ElementaryTypeNameExpression",
                                "src": "3458:7:4"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1119,
                                  "type": "contract VToken",
                                  "value": "vToken"
                                },
                                "id": 1129,
                                "name": "Identifier",
                                "src": "3466:6:4"
                              }
                            ],
                            "id": 1130,
                            "name": "FunctionCall",
                            "src": "3458:15:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1109,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 1131,
                            "name": "Identifier",
                            "src": "3475:6:4"
                          }
                        ],
                        "id": 1132,
                        "name": "FunctionCall",
                        "src": "3439:43:4"
                      }
                    ],
                    "id": 1133,
                    "name": "ExpressionStatement",
                    "src": "3439:43:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 4294967293,
                              "type": "function (bool) pure",
                              "value": "assert"
                            },
                            "id": 1134,
                            "name": "Identifier",
                            "src": "3516:6:4"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "mint",
                                      "referencedDeclaration": 1070,
                                      "type": "function (uint256) external returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1119,
                                          "type": "contract VToken",
                                          "value": "vToken"
                                        },
                                        "id": 1135,
                                        "name": "Identifier",
                                        "src": "3523:6:4"
                                      }
                                    ],
                                    "id": 1136,
                                    "name": "MemberAccess",
                                    "src": "3523:11:4"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1109,
                                      "type": "uint256",
                                      "value": "amount"
                                    },
                                    "id": 1137,
                                    "name": "Identifier",
                                    "src": "3535:6:4"
                                  }
                                ],
                                "id": 1138,
                                "name": "FunctionCall",
                                "src": "3523:19:4"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 1139,
                                "name": "Literal",
                                "src": "3546:1:4"
                              }
                            ],
                            "id": 1140,
                            "name": "BinaryOperation",
                            "src": "3523:24:4"
                          }
                        ],
                        "id": 1141,
                        "name": "FunctionCall",
                        "src": "3516:32:4"
                      }
                    ],
                    "id": 1142,
                    "name": "ExpressionStatement",
                    "src": "3516:32:4"
                  }
                ],
                "id": 1143,
                "name": "Block",
                "src": "3225:390:4"
              }
            ],
            "id": 1144,
            "name": "FunctionDefinition",
            "src": "3186:429:4"
          },
=======
          }
        ],
        "scope": 33,
        "src": "59:930:0"
      }
||||||| merged common ancestors
          }
        ],
        "scope": 33,
        "src": "59:930:0"
      }
=======
          }
        ],
        "scope": 66,
        "src": "59:930:1"
      }
>>>>>>> origin/ajibigad/token-swap
    ],
    "src": "0:989:1"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/Bep20.sol",
      "exportedSymbols": {
        "BEP20": [
          65
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".0"
          ]
        },
        "id": 34,
        "name": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 35,
        "name": "PragmaDirective",
        "src": "24:33:1"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            65
          ],
          "name": "BEP20",
          "scope": 66
        },
        "children": [
          {
            "attributes": {
              "constant": false,
              "functionSelector": "70a08231",
              "mutability": "mutable",
              "name": "balanceOf",
              "scope": 65,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => uint256)",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => uint256)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 36,
                    "name": "ElementaryTypeName",
                    "src": "90:7:1"
                  },
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 37,
                    "name": "ElementaryTypeName",
                    "src": "101:4:1"
                  }
                ],
                "id": 38,
                "name": "Mapping",
                "src": "81:25:1"
              }
            ],
            "id": 39,
            "name": "VariableDeclaration",
            "src": "81:43:1"
          },
>>>>>>> origin/ajibigad/token-swap
          {
            "attributes": {
              "functionSelector": "095ea7b3",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
<<<<<<< HEAD
              "name": "approve",
              "scope": 18,
||||||| merged common ancestors
              "name": "redeem",
              "scope": 1185,
=======
              "name": "approve",
<<<<<<< HEAD
              "scope": 32,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "scope": 32,
=======
              "scope": 65,
>>>>>>> origin/ajibigad/token-swap
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
<<<<<<< HEAD
                "attributes": {
                  "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                },
                "id": 3,
                "name": "StructuredDocumentation",
                "src": "84:642:0"
              },
              {
||||||| merged common ancestors
=======
                "attributes": {
                  "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                },
                "id": 40,
                "name": "StructuredDocumentation",
                "src": "130:629:1"
              },
              {
>>>>>>> origin/ajibigad/token-swap
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
<<<<<<< HEAD
                      "name": "spender",
                      "scope": 13,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 4,
                        "name": "ElementaryTypeName",
                        "src": "749:7:0"
                      }
                    ],
                    "id": 5,
                    "name": "VariableDeclaration",
                    "src": "749:15:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
||||||| merged common ancestors
=======
                      "name": "spender",
                      "scope": 50,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 41,
                        "name": "ElementaryTypeName",
                        "src": "781:7:1"
                      }
                    ],
                    "id": 42,
                    "name": "VariableDeclaration",
                    "src": "781:15:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
>>>>>>> origin/ajibigad/token-swap
                      "name": "amount",
<<<<<<< HEAD
<<<<<<< HEAD
                      "scope": 13,
||||||| merged common ancestors
                      "scope": 1166,
=======
                      "scope": 17,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "scope": 17,
=======
                      "scope": 50,
>>>>>>> origin/ajibigad/token-swap
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
<<<<<<< HEAD
<<<<<<< HEAD
                        "id": 6,
||||||| merged common ancestors
                        "id": 1145,
=======
                        "id": 10,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "id": 10,
=======
                        "id": 43,
>>>>>>> origin/ajibigad/token-swap
                        "name": "ElementaryTypeName",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "766:7:0"
||||||| merged common ancestors
                        "src": "3641:7:4"
=======
                        "src": "798:7:0"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "798:7:0"
=======
                        "src": "798:7:1"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
<<<<<<< HEAD
<<<<<<< HEAD
                    "id": 7,
||||||| merged common ancestors
                    "id": 1146,
=======
                    "id": 11,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "id": 11,
=======
                    "id": 44,
>>>>>>> origin/ajibigad/token-swap
                    "name": "VariableDeclaration",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "766:14:0"
||||||| merged common ancestors
                    "src": "3641:14:4"
=======
                    "src": "798:14:0"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "798:14:0"
=======
                    "src": "798:14:1"
>>>>>>> origin/ajibigad/token-swap
                  }
                ],
<<<<<<< HEAD
<<<<<<< HEAD
                "id": 8,
||||||| merged common ancestors
                "id": 1147,
                "name": "ParameterList",
                "src": "3640:16:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1148,
=======
                "id": 12,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "id": 12,
=======
                "id": 45,
>>>>>>> origin/ajibigad/token-swap
                "name": "ParameterList",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "748:33:0"
||||||| merged common ancestors
                "src": "3664:0:4"
=======
                "src": "780:33:0"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "780:33:0"
=======
                "src": "780:33:1"
>>>>>>> origin/ajibigad/token-swap
              },
              {
                "children": [
                  {
                    "attributes": {
<<<<<<< HEAD
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 13,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
||||||| merged common ancestors
                      "assignments": [
                        1150
                      ]
=======
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 50,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
<<<<<<< HEAD
<<<<<<< HEAD
                        "id": 9,
                        "name": "ElementaryTypeName",
                        "src": "798:4:0"
||||||| merged common ancestors
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_f43bf56badfe6ff82d1cf3b32f384dd5aa20c66e5e2ef1990ae19705d02f4f09",
                                  "typeString": "literal_string \"something went wrong\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1155,
                            "name": "Identifier",
                            "src": "3722:7:4"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "redeemUnderlying",
                                      "referencedDeclaration": 1078,
                                      "type": "function (uint256) external returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1150,
                                          "type": "contract VToken",
                                          "value": "vToken"
                                        },
                                        "id": 1156,
                                        "name": "Identifier",
                                        "src": "3730:6:4"
                                      }
                                    ],
                                    "id": 1157,
                                    "name": "MemberAccess",
                                    "src": "3730:23:4"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1146,
                                      "type": "uint256",
                                      "value": "amount"
                                    },
                                    "id": 1158,
                                    "name": "Identifier",
                                    "src": "3754:6:4"
                                  }
                                ],
                                "id": 1159,
                                "name": "FunctionCall",
                                "src": "3730:31:4"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 1160,
                                "name": "Literal",
                                "src": "3765:1:4"
                              }
                            ],
                            "id": 1161,
                            "name": "BinaryOperation",
                            "src": "3730:36:4"
                          },
                          {
                            "attributes": {
                              "hexvalue": "736f6d657468696e672077656e742077726f6e67",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"something went wrong\"",
                              "value": "something went wrong"
                            },
                            "id": 1162,
                            "name": "Literal",
                            "src": "3768:22:4"
                          }
                        ],
                        "id": 1163,
                        "name": "FunctionCall",
                        "src": "3722:69:4"
=======
                        "id": 13,
||||||| merged common ancestors
                        "id": 13,
=======
                        "id": 46,
>>>>>>> origin/ajibigad/token-swap
                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "830:4:0"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "830:4:0"
=======
                        "src": "830:4:1"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
<<<<<<< HEAD
<<<<<<< HEAD
                    "id": 10,
                    "name": "VariableDeclaration",
                    "src": "798:4:0"
||||||| merged common ancestors
                    "id": 1164,
                    "name": "ExpressionStatement",
                    "src": "3722:69:4"
=======
                    "id": 14,
||||||| merged common ancestors
                    "id": 14,
=======
                    "id": 47,
>>>>>>> origin/ajibigad/token-swap
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "830:4:0"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "830:4:0"
=======
                    "src": "830:4:1"
>>>>>>> origin/ajibigad/token-swap
                  }
                ],
<<<<<<< HEAD
<<<<<<< HEAD
                "id": 11,
                "name": "ParameterList",
                "src": "797:6:0"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 12,
||||||| merged common ancestors
                "id": 1165,
=======
                "id": 15,
||||||| merged common ancestors
                "id": 15,
=======
                "id": 48,
>>>>>>> origin/ajibigad/token-swap
                "name": "ParameterList",
                "src": "829:6:1"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
<<<<<<< HEAD
                "id": 16,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "id": 16,
=======
                "id": 49,
>>>>>>> origin/ajibigad/token-swap
                "name": "Block",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "804:2:0"
||||||| merged common ancestors
                "src": "3664:134:4"
=======
                "src": "836:2:0"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "836:2:0"
=======
                "src": "836:2:1"
>>>>>>> origin/ajibigad/token-swap
              }
            ],
<<<<<<< HEAD
<<<<<<< HEAD
            "id": 13,
||||||| merged common ancestors
            "id": 1166,
=======
            "id": 17,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "id": 17,
=======
            "id": 50,
>>>>>>> origin/ajibigad/token-swap
            "name": "FunctionDefinition",
<<<<<<< HEAD
<<<<<<< HEAD
            "src": "732:74:0"
||||||| merged common ancestors
            "src": "3625:173:4"
=======
            "src": "764:74:0"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "src": "764:74:0"
=======
            "src": "764:74:1"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "attributes": {
              "functionSelector": "d0e30db0",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
<<<<<<< HEAD
              "name": "deposit",
              "scope": 18,
              "stateMutability": "payable",
||||||| merged common ancestors
              "name": "getBalance",
              "scope": 1185,
              "stateMutability": "nonpayable",
=======
              "name": "deposit",
              "scope": 65,
              "stateMutability": "payable",
>>>>>>> origin/ajibigad/token-swap
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
<<<<<<< HEAD
<<<<<<< HEAD
                "id": 14,
||||||| merged common ancestors
                "id": 1167,
=======
                "id": 18,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "id": 18,
=======
                "id": 51,
>>>>>>> origin/ajibigad/token-swap
                "name": "ParameterList",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "864:2:0"
||||||| merged common ancestors
                "src": "3827:2:4"
=======
                "src": "893:2:0"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "893:2:0"
=======
                "src": "893:2:1"
>>>>>>> origin/ajibigad/token-swap
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
<<<<<<< HEAD
<<<<<<< HEAD
                "id": 15,
||||||| merged common ancestors
                "id": 1168,
=======
                "id": 19,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "id": 19,
=======
                "id": 52,
>>>>>>> origin/ajibigad/token-swap
                "name": "ParameterList",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "882:0:0"
||||||| merged common ancestors
                "src": "3837:0:4"
=======
                "src": "911:0:0"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "911:0:0"
=======
                "src": "911:0:1"
>>>>>>> origin/ajibigad/token-swap
              },
              {
<<<<<<< HEAD
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 16,
||||||| merged common ancestors
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        1170
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "vToken",
                          "scope": 1183,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "contract VToken",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "VToken",
                              "referencedDeclaration": 1087,
                              "type": "contract VToken"
                            },
                            "id": 1169,
                            "name": "UserDefinedTypeName",
                            "src": "3847:6:4"
                          }
                        ],
                        "id": 1170,
                        "name": "VariableDeclaration",
                        "src": "3847:13:4"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "contract VToken",
                          "type_conversion": true
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1087,
                              "type": "type(contract VToken)",
                              "value": "VToken"
                            },
                            "id": 1171,
                            "name": "Identifier",
                            "src": "3863:6:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1104,
                              "type": "address",
                              "value": "vTOKEN_ADDRESS"
                            },
                            "id": 1172,
                            "name": "Identifier",
                            "src": "3870:14:4"
                          }
                        ],
                        "id": 1173,
                        "name": "FunctionCall",
                        "src": "3863:22:4"
                      }
                    ],
                    "id": 1174,
                    "name": "VariableDeclarationStatement",
                    "src": "3847:38:4"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        1176
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "tokens",
                          "scope": 1183,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 1175,
                            "name": "ElementaryTypeName",
                            "src": "3895:4:4"
                          }
                        ],
                        "id": 1176,
                        "name": "VariableDeclaration",
                        "src": "3895:11:4"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "balanceOfUnderlying",
                              "referencedDeclaration": 1086,
                              "type": "function (address) external returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1170,
                                  "type": "contract VToken",
                                  "value": "vToken"
                                },
                                "id": 1177,
                                "name": "Identifier",
                                "src": "3909:6:4"
                              }
                            ],
                            "id": 1178,
                            "name": "MemberAccess",
                            "src": "3909:26:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 1179,
                                "name": "Identifier",
                                "src": "3936:3:4"
                              }
                            ],
                            "id": 1180,
                            "name": "MemberAccess",
                            "src": "3936:10:4"
                          }
                        ],
                        "id": 1181,
                        "name": "FunctionCall",
                        "src": "3909:38:4"
                      }
                    ],
                    "id": 1182,
                    "name": "VariableDeclarationStatement",
                    "src": "3895:52:4"
                  }
                ],
                "id": 1183,
=======
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 53,
                "name": "Block",
                "src": "911:2:1"
              }
            ],
            "id": 54,
            "name": "FunctionDefinition",
            "src": "877:36:1"
          },
          {
            "attributes": {
              "functionSelector": "a9059cbb",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "transfer",
              "scope": 65,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "dst",
                      "scope": 64,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 55,
                        "name": "ElementaryTypeName",
                        "src": "937:7:1"
                      }
                    ],
                    "id": 56,
                    "name": "VariableDeclaration",
                    "src": "937:11:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "scope": 64,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 57,
                        "name": "ElementaryTypeName",
                        "src": "950:4:1"
                      }
                    ],
                    "id": 58,
                    "name": "VariableDeclaration",
                    "src": "950:11:1"
                  }
                ],
                "id": 59,
                "name": "ParameterList",
                "src": "936:26:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 64,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 60,
                        "name": "ElementaryTypeName",
                        "src": "979:4:1"
                      }
                    ],
                    "id": 61,
                    "name": "VariableDeclaration",
                    "src": "979:4:1"
                  }
                ],
                "id": 62,
                "name": "ParameterList",
                "src": "978:6:1"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
<<<<<<< HEAD
                "id": 30,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "id": 30,
=======
                "id": 63,
>>>>>>> origin/ajibigad/token-swap
                "name": "Block",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "882:2:0"
||||||| merged common ancestors
                "src": "3837:117:4"
=======
                "src": "985:2:0"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "985:2:0"
=======
                "src": "985:2:1"
>>>>>>> origin/ajibigad/token-swap
              }
            ],
<<<<<<< HEAD
<<<<<<< HEAD
            "id": 17,
||||||| merged common ancestors
            "id": 1184,
=======
            "id": 31,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "id": 31,
=======
            "id": 64,
>>>>>>> origin/ajibigad/token-swap
            "name": "FunctionDefinition",
<<<<<<< HEAD
<<<<<<< HEAD
            "src": "848:36:0"
||||||| merged common ancestors
            "src": "3808:146:4"
=======
            "src": "919:68:0"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "src": "919:68:0"
=======
            "src": "919:68:1"
>>>>>>> origin/ajibigad/token-swap
          }
        ],
<<<<<<< HEAD
<<<<<<< HEAD
        "id": 18,
||||||| merged common ancestors
        "id": 1185,
=======
        "id": 32,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
        "id": 32,
=======
        "id": 65,
>>>>>>> origin/ajibigad/token-swap
        "name": "ContractDefinition",
<<<<<<< HEAD
<<<<<<< HEAD
        "src": "62:825:0"
||||||| merged common ancestors
        "src": "2877:1265:4"
=======
        "src": "59:930:0"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
        "src": "59:930:0"
=======
        "src": "59:930:1"
>>>>>>> origin/ajibigad/token-swap
      }
    ],
<<<<<<< HEAD
<<<<<<< HEAD
    "id": 19,
||||||| merged common ancestors
    "id": 1186,
=======
    "id": 33,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
    "id": 33,
=======
    "id": 66,
>>>>>>> origin/ajibigad/token-swap
    "name": "SourceUnit",
<<<<<<< HEAD
<<<<<<< HEAD
    "src": "0:887:0"
||||||| merged common ancestors
    "src": "0:4729:4"
=======
    "src": "0:989:0"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
    "src": "0:989:0"
=======
    "src": "0:989:1"
>>>>>>> origin/ajibigad/token-swap
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
<<<<<<< HEAD
<<<<<<< HEAD
  "updatedAt": "2021-04-11T19:33:47.445Z",
||||||| merged common ancestors
  "updatedAt": "2021-04-10T14:35:58.128Z",
=======
  "updatedAt": "2021-04-13T08:20:22.129Z",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
  "updatedAt": "2021-04-13T08:20:22.129Z",
=======
  "updatedAt": "2021-04-16T17:26:22.471Z",
>>>>>>> origin/ajibigad/token-swap
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}