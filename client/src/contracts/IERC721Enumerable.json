{
  "contractName": "IERC721Enumerable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xd2f30fad5b24c4120f96dbac83aacdb7993ee610a9092bc23c44463da292bf8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3d4e72409e392c7694b6405a0136cf073d8da016df33ef8f9ad195f724ebfea\",\"dweb:/ipfs/QmPGcddKq6CgsiKnxUUif2q76wRqP3dmdQ6bKuHCLmb8Wa\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xa2f854d4fa26273a137c95cfefc08bc5cefec7d01b01758a15ba5ed29acca7c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d493dc2ceb51ff0f1439ad3085f95b148fb71c4b686dedad5438987a94c65ada\",\"dweb:/ipfs/QmP8JX9wqps3ZUEdK2zgEusua3TxcWh9HpqKmifjkDSTpP\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x2789dfea2d73182683d637db5729201f6730dae6113030a94c828f8688f38f2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36374eaa68c0737bf7e1ae13d55327b4868fb0825e971ee729f4b8d355ededb4\",\"dweb:/ipfs/QmYN9yuzz4P5SumiT6rgYgTEY8MhnPQapMwx2LHxRKju7r\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\nimport \"./IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256 tokenId);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n",
  "sourcePath": "@openzeppelin\\contracts\\token\\ERC721\\IERC721Enumerable.sol",
  "ast": {
    "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol",
    "exportedSymbols": {
      "IERC165": [
<<<<<<< HEAD
        3385
||||||| merged common ancestors
        3169
=======
        3469
>>>>>>> origin/ajibigad/token-swap
      ],
      "IERC721": [
<<<<<<< HEAD
        4628
||||||| merged common ancestors
        4412
=======
        4712
>>>>>>> origin/ajibigad/token-swap
      ],
      "IERC721Enumerable": [
<<<<<<< HEAD
        4659
||||||| merged common ancestors
        4443
=======
        4743
>>>>>>> origin/ajibigad/token-swap
      ]
    },
<<<<<<< HEAD
    "id": 4660,
||||||| merged common ancestors
    "id": 4444,
=======
    "id": 4744,
>>>>>>> origin/ajibigad/token-swap
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
<<<<<<< HEAD
        "id": 4630,
||||||| merged common ancestors
        "id": 4414,
=======
        "id": 4714,
>>>>>>> origin/ajibigad/token-swap
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
<<<<<<< HEAD
        "src": "33:23:23"
||||||| merged common ancestors
        "src": "33:23:21"
=======
        "src": "33:23:24"
>>>>>>> origin/ajibigad/token-swap
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "./IERC721.sol",
<<<<<<< HEAD
        "id": 4631,
||||||| merged common ancestors
        "id": 4415,
=======
        "id": 4715,
>>>>>>> origin/ajibigad/token-swap
        "nodeType": "ImportDirective",
<<<<<<< HEAD
        "scope": 4660,
        "sourceUnit": 4629,
        "src": "58:23:23",
||||||| merged common ancestors
        "scope": 4444,
        "sourceUnit": 4413,
        "src": "58:23:21",
=======
        "scope": 4744,
        "sourceUnit": 4713,
        "src": "58:23:24",
>>>>>>> origin/ajibigad/token-swap
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
<<<<<<< HEAD
              "id": 4633,
||||||| merged common ancestors
              "id": 4417,
=======
              "id": 4717,
>>>>>>> origin/ajibigad/token-swap
              "name": "IERC721",
              "nodeType": "UserDefinedTypeName",
<<<<<<< HEAD
              "referencedDeclaration": 4628,
              "src": "251:7:23",
||||||| merged common ancestors
              "referencedDeclaration": 4412,
              "src": "251:7:21",
=======
              "referencedDeclaration": 4712,
              "src": "251:7:24",
>>>>>>> origin/ajibigad/token-swap
              "typeDescriptions": {
<<<<<<< HEAD
                "typeIdentifier": "t_contract$_IERC721_$4628",
||||||| merged common ancestors
                "typeIdentifier": "t_contract$_IERC721_$4412",
=======
                "typeIdentifier": "t_contract$_IERC721_$4712",
>>>>>>> origin/ajibigad/token-swap
                "typeString": "contract IERC721"
              }
            },
<<<<<<< HEAD
            "id": 4634,
||||||| merged common ancestors
            "id": 4418,
=======
            "id": 4718,
>>>>>>> origin/ajibigad/token-swap
            "nodeType": "InheritanceSpecifier",
<<<<<<< HEAD
            "src": "251:7:23"
||||||| merged common ancestors
            "src": "251:7:21"
=======
            "src": "251:7:24"
>>>>>>> origin/ajibigad/token-swap
          }
        ],
        "contractDependencies": [
<<<<<<< HEAD
          3385,
          4628
||||||| merged common ancestors
          3169,
          4412
=======
          3469,
          4712
>>>>>>> origin/ajibigad/token-swap
        ],
        "contractKind": "interface",
        "documentation": {
<<<<<<< HEAD
          "id": 4632,
||||||| merged common ancestors
          "id": 4416,
=======
          "id": 4716,
>>>>>>> origin/ajibigad/token-swap
          "nodeType": "StructuredDocumentation",
<<<<<<< HEAD
          "src": "83:136:23",
||||||| merged common ancestors
          "src": "83:136:21",
=======
          "src": "83:136:24",
>>>>>>> origin/ajibigad/token-swap
          "text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
        },
        "fullyImplemented": false,
<<<<<<< HEAD
        "id": 4659,
||||||| merged common ancestors
        "id": 4443,
=======
        "id": 4743,
>>>>>>> origin/ajibigad/token-swap
        "linearizedBaseContracts": [
<<<<<<< HEAD
          4659,
          4628,
          3385
||||||| merged common ancestors
          4443,
          4412,
          3169
=======
          4743,
          4712,
          3469
>>>>>>> origin/ajibigad/token-swap
        ],
        "name": "IERC721Enumerable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
<<<<<<< HEAD
              "id": 4635,
||||||| merged common ancestors
              "id": 4419,
=======
              "id": 4719,
>>>>>>> origin/ajibigad/token-swap
              "nodeType": "StructuredDocumentation",
<<<<<<< HEAD
              "src": "266:82:23",
||||||| merged common ancestors
              "src": "266:82:21",
=======
              "src": "266:82:24",
>>>>>>> origin/ajibigad/token-swap
              "text": " @dev Returns the total amount of tokens stored by the contract."
            },
            "functionSelector": "18160ddd",
<<<<<<< HEAD
            "id": 4640,
||||||| merged common ancestors
            "id": 4424,
=======
            "id": 4724,
>>>>>>> origin/ajibigad/token-swap
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 4636,
||||||| merged common ancestors
              "id": 4420,
=======
              "id": 4720,
>>>>>>> origin/ajibigad/token-swap
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
              "src": "373:2:23"
||||||| merged common ancestors
              "src": "373:2:21"
=======
              "src": "373:2:24"
>>>>>>> origin/ajibigad/token-swap
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 4639,
||||||| merged common ancestors
              "id": 4423,
=======
              "id": 4723,
>>>>>>> origin/ajibigad/token-swap
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 4638,
||||||| merged common ancestors
                  "id": 4422,
=======
                  "id": 4722,
>>>>>>> origin/ajibigad/token-swap
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 4640,
                  "src": "399:7:23",
||||||| merged common ancestors
                  "scope": 4424,
                  "src": "399:7:21",
=======
                  "scope": 4724,
                  "src": "399:7:24",
>>>>>>> origin/ajibigad/token-swap
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 4637,
||||||| merged common ancestors
                    "id": 4421,
=======
                    "id": 4721,
>>>>>>> origin/ajibigad/token-swap
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "399:7:23",
||||||| merged common ancestors
                    "src": "399:7:21",
=======
                    "src": "399:7:24",
>>>>>>> origin/ajibigad/token-swap
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "398:9:23"
||||||| merged common ancestors
              "src": "398:9:21"
=======
              "src": "398:9:24"
>>>>>>> origin/ajibigad/token-swap
            },
<<<<<<< HEAD
            "scope": 4659,
            "src": "353:55:23",
||||||| merged common ancestors
            "scope": 4443,
            "src": "353:55:21",
=======
            "scope": 4743,
            "src": "353:55:24",
>>>>>>> origin/ajibigad/token-swap
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
<<<<<<< HEAD
              "id": 4641,
||||||| merged common ancestors
              "id": 4425,
=======
              "id": 4725,
>>>>>>> origin/ajibigad/token-swap
              "nodeType": "StructuredDocumentation",
<<<<<<< HEAD
              "src": "414:171:23",
||||||| merged common ancestors
              "src": "414:171:21",
=======
              "src": "414:171:24",
>>>>>>> origin/ajibigad/token-swap
              "text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
            },
            "functionSelector": "2f745c59",
<<<<<<< HEAD
            "id": 4650,
||||||| merged common ancestors
            "id": 4434,
=======
            "id": 4734,
>>>>>>> origin/ajibigad/token-swap
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokenOfOwnerByIndex",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 4646,
||||||| merged common ancestors
              "id": 4430,
=======
              "id": 4730,
>>>>>>> origin/ajibigad/token-swap
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 4643,
||||||| merged common ancestors
                  "id": 4427,
=======
                  "id": 4727,
>>>>>>> origin/ajibigad/token-swap
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 4650,
                  "src": "619:13:23",
||||||| merged common ancestors
                  "scope": 4434,
                  "src": "619:13:21",
=======
                  "scope": 4734,
                  "src": "619:13:24",
>>>>>>> origin/ajibigad/token-swap
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 4642,
||||||| merged common ancestors
                    "id": 4426,
=======
                    "id": 4726,
>>>>>>> origin/ajibigad/token-swap
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "619:7:23",
||||||| merged common ancestors
                    "src": "619:7:21",
=======
                    "src": "619:7:24",
>>>>>>> origin/ajibigad/token-swap
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 4645,
||||||| merged common ancestors
                  "id": 4429,
=======
                  "id": 4729,
>>>>>>> origin/ajibigad/token-swap
                  "mutability": "mutable",
                  "name": "index",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 4650,
                  "src": "634:13:23",
||||||| merged common ancestors
                  "scope": 4434,
                  "src": "634:13:21",
=======
                  "scope": 4734,
                  "src": "634:13:24",
>>>>>>> origin/ajibigad/token-swap
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 4644,
||||||| merged common ancestors
                    "id": 4428,
=======
                    "id": 4728,
>>>>>>> origin/ajibigad/token-swap
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "634:7:23",
||||||| merged common ancestors
                    "src": "634:7:21",
=======
                    "src": "634:7:24",
>>>>>>> origin/ajibigad/token-swap
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "618:30:23"
||||||| merged common ancestors
              "src": "618:30:21"
=======
              "src": "618:30:24"
>>>>>>> origin/ajibigad/token-swap
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 4649,
||||||| merged common ancestors
              "id": 4433,
=======
              "id": 4733,
>>>>>>> origin/ajibigad/token-swap
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 4648,
||||||| merged common ancestors
                  "id": 4432,
=======
                  "id": 4732,
>>>>>>> origin/ajibigad/token-swap
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 4650,
                  "src": "672:15:23",
||||||| merged common ancestors
                  "scope": 4434,
                  "src": "672:15:21",
=======
                  "scope": 4734,
                  "src": "672:15:24",
>>>>>>> origin/ajibigad/token-swap
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 4647,
||||||| merged common ancestors
                    "id": 4431,
=======
                    "id": 4731,
>>>>>>> origin/ajibigad/token-swap
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "672:7:23",
||||||| merged common ancestors
                    "src": "672:7:21",
=======
                    "src": "672:7:24",
>>>>>>> origin/ajibigad/token-swap
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "671:17:23"
||||||| merged common ancestors
              "src": "671:17:21"
=======
              "src": "671:17:24"
>>>>>>> origin/ajibigad/token-swap
            },
<<<<<<< HEAD
            "scope": 4659,
            "src": "590:99:23",
||||||| merged common ancestors
            "scope": 4443,
            "src": "590:99:21",
=======
            "scope": 4743,
            "src": "590:99:24",
>>>>>>> origin/ajibigad/token-swap
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
<<<<<<< HEAD
              "id": 4651,
||||||| merged common ancestors
              "id": 4435,
=======
              "id": 4735,
>>>>>>> origin/ajibigad/token-swap
              "nodeType": "StructuredDocumentation",
<<<<<<< HEAD
              "src": "695:164:23",
||||||| merged common ancestors
              "src": "695:164:21",
=======
              "src": "695:164:24",
>>>>>>> origin/ajibigad/token-swap
              "text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
            },
            "functionSelector": "4f6ccce7",
<<<<<<< HEAD
            "id": 4658,
||||||| merged common ancestors
            "id": 4442,
=======
            "id": 4742,
>>>>>>> origin/ajibigad/token-swap
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokenByIndex",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 4654,
||||||| merged common ancestors
              "id": 4438,
=======
              "id": 4738,
>>>>>>> origin/ajibigad/token-swap
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 4653,
||||||| merged common ancestors
                  "id": 4437,
=======
                  "id": 4737,
>>>>>>> origin/ajibigad/token-swap
                  "mutability": "mutable",
                  "name": "index",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 4658,
                  "src": "886:13:23",
||||||| merged common ancestors
                  "scope": 4442,
                  "src": "886:13:21",
=======
                  "scope": 4742,
                  "src": "886:13:24",
>>>>>>> origin/ajibigad/token-swap
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 4652,
||||||| merged common ancestors
                    "id": 4436,
=======
                    "id": 4736,
>>>>>>> origin/ajibigad/token-swap
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "886:7:23",
||||||| merged common ancestors
                    "src": "886:7:21",
=======
                    "src": "886:7:24",
>>>>>>> origin/ajibigad/token-swap
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "885:15:23"
||||||| merged common ancestors
              "src": "885:15:21"
=======
              "src": "885:15:24"
>>>>>>> origin/ajibigad/token-swap
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 4657,
||||||| merged common ancestors
              "id": 4441,
=======
              "id": 4741,
>>>>>>> origin/ajibigad/token-swap
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 4656,
||||||| merged common ancestors
                  "id": 4440,
=======
                  "id": 4740,
>>>>>>> origin/ajibigad/token-swap
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 4658,
                  "src": "924:7:23",
||||||| merged common ancestors
                  "scope": 4442,
                  "src": "924:7:21",
=======
                  "scope": 4742,
                  "src": "924:7:24",
>>>>>>> origin/ajibigad/token-swap
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 4655,
||||||| merged common ancestors
                    "id": 4439,
=======
                    "id": 4739,
>>>>>>> origin/ajibigad/token-swap
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                    "src": "924:7:23",
||||||| merged common ancestors
                    "src": "924:7:21",
=======
                    "src": "924:7:24",
>>>>>>> origin/ajibigad/token-swap
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "923:9:23"
||||||| merged common ancestors
              "src": "923:9:21"
=======
              "src": "923:9:24"
>>>>>>> origin/ajibigad/token-swap
            },
<<<<<<< HEAD
            "scope": 4659,
            "src": "864:69:23",
||||||| merged common ancestors
            "scope": 4443,
            "src": "864:69:21",
=======
            "scope": 4743,
            "src": "864:69:24",
>>>>>>> origin/ajibigad/token-swap
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
<<<<<<< HEAD
        "scope": 4660,
        "src": "220:715:23"
||||||| merged common ancestors
        "scope": 4444,
        "src": "220:715:21"
=======
        "scope": 4744,
        "src": "220:715:24"
>>>>>>> origin/ajibigad/token-swap
      }
    ],
<<<<<<< HEAD
    "src": "33:903:23"
||||||| merged common ancestors
    "src": "33:903:21"
=======
    "src": "33:903:24"
>>>>>>> origin/ajibigad/token-swap
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol",
      "exportedSymbols": {
        "IERC165": [
<<<<<<< HEAD
          3385
||||||| merged common ancestors
          3169
=======
          3469
>>>>>>> origin/ajibigad/token-swap
        ],
        "IERC721": [
<<<<<<< HEAD
          4628
||||||| merged common ancestors
          4412
=======
          4712
>>>>>>> origin/ajibigad/token-swap
        ],
        "IERC721Enumerable": [
<<<<<<< HEAD
          4659
||||||| merged common ancestors
          4443
=======
          4743
>>>>>>> origin/ajibigad/token-swap
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".0"
          ]
        },
<<<<<<< HEAD
        "id": 4630,
||||||| merged common ancestors
        "id": 4414,
=======
        "id": 4714,
>>>>>>> origin/ajibigad/token-swap
        "name": "PragmaDirective",
<<<<<<< HEAD
        "src": "33:23:23"
||||||| merged common ancestors
        "src": "33:23:21"
=======
        "src": "33:23:24"
>>>>>>> origin/ajibigad/token-swap
      },
      {
        "attributes": {
<<<<<<< HEAD
          "SourceUnit": 4629,
||||||| merged common ancestors
          "SourceUnit": 4413,
=======
          "SourceUnit": 4713,
>>>>>>> origin/ajibigad/token-swap
          "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
          "file": "./IERC721.sol",
<<<<<<< HEAD
          "scope": 4660,
||||||| merged common ancestors
          "scope": 4444,
=======
          "scope": 4744,
>>>>>>> origin/ajibigad/token-swap
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
<<<<<<< HEAD
        "id": 4631,
||||||| merged common ancestors
        "id": 4415,
=======
        "id": 4715,
>>>>>>> origin/ajibigad/token-swap
        "name": "ImportDirective",
<<<<<<< HEAD
        "src": "58:23:23"
||||||| merged common ancestors
        "src": "58:23:21"
=======
        "src": "58:23:24"
>>>>>>> origin/ajibigad/token-swap
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
<<<<<<< HEAD
            3385,
            4628
||||||| merged common ancestors
            3169,
            4412
=======
            3469,
            4712
>>>>>>> origin/ajibigad/token-swap
          ],
          "contractKind": "interface",
          "fullyImplemented": false,
          "linearizedBaseContracts": [
<<<<<<< HEAD
            4659,
            4628,
            3385
||||||| merged common ancestors
            4443,
            4412,
            3169
=======
            4743,
            4712,
            3469
>>>>>>> origin/ajibigad/token-swap
          ],
          "name": "IERC721Enumerable",
<<<<<<< HEAD
          "scope": 4660
||||||| merged common ancestors
          "scope": 4444
=======
          "scope": 4744
>>>>>>> origin/ajibigad/token-swap
        },
        "children": [
          {
            "attributes": {
              "text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
            },
<<<<<<< HEAD
            "id": 4632,
||||||| merged common ancestors
            "id": 4416,
=======
            "id": 4716,
>>>>>>> origin/ajibigad/token-swap
            "name": "StructuredDocumentation",
<<<<<<< HEAD
            "src": "83:136:23"
||||||| merged common ancestors
            "src": "83:136:21"
=======
            "src": "83:136:24"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "IERC721",
<<<<<<< HEAD
                  "referencedDeclaration": 4628,
||||||| merged common ancestors
                  "referencedDeclaration": 4412,
=======
                  "referencedDeclaration": 4712,
>>>>>>> origin/ajibigad/token-swap
                  "type": "contract IERC721"
                },
<<<<<<< HEAD
                "id": 4633,
||||||| merged common ancestors
                "id": 4417,
=======
                "id": 4717,
>>>>>>> origin/ajibigad/token-swap
                "name": "UserDefinedTypeName",
<<<<<<< HEAD
                "src": "251:7:23"
||||||| merged common ancestors
                "src": "251:7:21"
=======
                "src": "251:7:24"
>>>>>>> origin/ajibigad/token-swap
              }
            ],
<<<<<<< HEAD
            "id": 4634,
||||||| merged common ancestors
            "id": 4418,
=======
            "id": 4718,
>>>>>>> origin/ajibigad/token-swap
            "name": "InheritanceSpecifier",
<<<<<<< HEAD
            "src": "251:7:23"
||||||| merged common ancestors
            "src": "251:7:21"
=======
            "src": "251:7:24"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "attributes": {
              "functionSelector": "18160ddd",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "totalSupply",
<<<<<<< HEAD
              "scope": 4659,
||||||| merged common ancestors
              "scope": 4443,
=======
              "scope": 4743,
>>>>>>> origin/ajibigad/token-swap
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Returns the total amount of tokens stored by the contract."
                },
<<<<<<< HEAD
                "id": 4635,
||||||| merged common ancestors
                "id": 4419,
=======
                "id": 4719,
>>>>>>> origin/ajibigad/token-swap
                "name": "StructuredDocumentation",
<<<<<<< HEAD
                "src": "266:82:23"
||||||| merged common ancestors
                "src": "266:82:21"
=======
                "src": "266:82:24"
>>>>>>> origin/ajibigad/token-swap
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
<<<<<<< HEAD
                "id": 4636,
||||||| merged common ancestors
                "id": 4420,
=======
                "id": 4720,
>>>>>>> origin/ajibigad/token-swap
                "name": "ParameterList",
<<<<<<< HEAD
                "src": "373:2:23"
||||||| merged common ancestors
                "src": "373:2:21"
=======
                "src": "373:2:24"
>>>>>>> origin/ajibigad/token-swap
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
<<<<<<< HEAD
                      "scope": 4640,
||||||| merged common ancestors
                      "scope": 4424,
=======
                      "scope": 4724,
>>>>>>> origin/ajibigad/token-swap
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
<<<<<<< HEAD
                        "id": 4637,
||||||| merged common ancestors
                        "id": 4421,
=======
                        "id": 4721,
>>>>>>> origin/ajibigad/token-swap
                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "399:7:23"
||||||| merged common ancestors
                        "src": "399:7:21"
=======
                        "src": "399:7:24"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
<<<<<<< HEAD
                    "id": 4638,
||||||| merged common ancestors
                    "id": 4422,
=======
                    "id": 4722,
>>>>>>> origin/ajibigad/token-swap
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "399:7:23"
||||||| merged common ancestors
                    "src": "399:7:21"
=======
                    "src": "399:7:24"
>>>>>>> origin/ajibigad/token-swap
                  }
                ],
<<<<<<< HEAD
                "id": 4639,
||||||| merged common ancestors
                "id": 4423,
=======
                "id": 4723,
>>>>>>> origin/ajibigad/token-swap
                "name": "ParameterList",
<<<<<<< HEAD
                "src": "398:9:23"
||||||| merged common ancestors
                "src": "398:9:21"
=======
                "src": "398:9:24"
>>>>>>> origin/ajibigad/token-swap
              }
            ],
<<<<<<< HEAD
            "id": 4640,
||||||| merged common ancestors
            "id": 4424,
=======
            "id": 4724,
>>>>>>> origin/ajibigad/token-swap
            "name": "FunctionDefinition",
<<<<<<< HEAD
            "src": "353:55:23"
||||||| merged common ancestors
            "src": "353:55:21"
=======
            "src": "353:55:24"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "attributes": {
              "functionSelector": "2f745c59",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "tokenOfOwnerByIndex",
<<<<<<< HEAD
              "scope": 4659,
||||||| merged common ancestors
              "scope": 4443,
=======
              "scope": 4743,
>>>>>>> origin/ajibigad/token-swap
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
                },
<<<<<<< HEAD
                "id": 4641,
||||||| merged common ancestors
                "id": 4425,
=======
                "id": 4725,
>>>>>>> origin/ajibigad/token-swap
                "name": "StructuredDocumentation",
<<<<<<< HEAD
                "src": "414:171:23"
||||||| merged common ancestors
                "src": "414:171:21"
=======
                "src": "414:171:24"
>>>>>>> origin/ajibigad/token-swap
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "owner",
<<<<<<< HEAD
                      "scope": 4650,
||||||| merged common ancestors
                      "scope": 4434,
=======
                      "scope": 4734,
>>>>>>> origin/ajibigad/token-swap
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
<<<<<<< HEAD
                        "id": 4642,
||||||| merged common ancestors
                        "id": 4426,
=======
                        "id": 4726,
>>>>>>> origin/ajibigad/token-swap
                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "619:7:23"
||||||| merged common ancestors
                        "src": "619:7:21"
=======
                        "src": "619:7:24"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
<<<<<<< HEAD
                    "id": 4643,
||||||| merged common ancestors
                    "id": 4427,
=======
                    "id": 4727,
>>>>>>> origin/ajibigad/token-swap
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "619:13:23"
||||||| merged common ancestors
                    "src": "619:13:21"
=======
                    "src": "619:13:24"
>>>>>>> origin/ajibigad/token-swap
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "index",
<<<<<<< HEAD
                      "scope": 4650,
||||||| merged common ancestors
                      "scope": 4434,
=======
                      "scope": 4734,
>>>>>>> origin/ajibigad/token-swap
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
<<<<<<< HEAD
                        "id": 4644,
||||||| merged common ancestors
                        "id": 4428,
=======
                        "id": 4728,
>>>>>>> origin/ajibigad/token-swap
                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "634:7:23"
||||||| merged common ancestors
                        "src": "634:7:21"
=======
                        "src": "634:7:24"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
<<<<<<< HEAD
                    "id": 4645,
||||||| merged common ancestors
                    "id": 4429,
=======
                    "id": 4729,
>>>>>>> origin/ajibigad/token-swap
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "634:13:23"
||||||| merged common ancestors
                    "src": "634:13:21"
=======
                    "src": "634:13:24"
>>>>>>> origin/ajibigad/token-swap
                  }
                ],
<<<<<<< HEAD
                "id": 4646,
||||||| merged common ancestors
                "id": 4430,
=======
                "id": 4730,
>>>>>>> origin/ajibigad/token-swap
                "name": "ParameterList",
<<<<<<< HEAD
                "src": "618:30:23"
||||||| merged common ancestors
                "src": "618:30:21"
=======
                "src": "618:30:24"
>>>>>>> origin/ajibigad/token-swap
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "tokenId",
<<<<<<< HEAD
                      "scope": 4650,
||||||| merged common ancestors
                      "scope": 4434,
=======
                      "scope": 4734,
>>>>>>> origin/ajibigad/token-swap
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
<<<<<<< HEAD
                        "id": 4647,
||||||| merged common ancestors
                        "id": 4431,
=======
                        "id": 4731,
>>>>>>> origin/ajibigad/token-swap
                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "672:7:23"
||||||| merged common ancestors
                        "src": "672:7:21"
=======
                        "src": "672:7:24"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
<<<<<<< HEAD
                    "id": 4648,
||||||| merged common ancestors
                    "id": 4432,
=======
                    "id": 4732,
>>>>>>> origin/ajibigad/token-swap
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "672:15:23"
||||||| merged common ancestors
                    "src": "672:15:21"
=======
                    "src": "672:15:24"
>>>>>>> origin/ajibigad/token-swap
                  }
                ],
<<<<<<< HEAD
                "id": 4649,
||||||| merged common ancestors
                "id": 4433,
=======
                "id": 4733,
>>>>>>> origin/ajibigad/token-swap
                "name": "ParameterList",
<<<<<<< HEAD
                "src": "671:17:23"
||||||| merged common ancestors
                "src": "671:17:21"
=======
                "src": "671:17:24"
>>>>>>> origin/ajibigad/token-swap
              }
            ],
<<<<<<< HEAD
            "id": 4650,
||||||| merged common ancestors
            "id": 4434,
=======
            "id": 4734,
>>>>>>> origin/ajibigad/token-swap
            "name": "FunctionDefinition",
<<<<<<< HEAD
            "src": "590:99:23"
||||||| merged common ancestors
            "src": "590:99:21"
=======
            "src": "590:99:24"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "attributes": {
              "functionSelector": "4f6ccce7",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "tokenByIndex",
<<<<<<< HEAD
              "scope": 4659,
||||||| merged common ancestors
              "scope": 4443,
=======
              "scope": 4743,
>>>>>>> origin/ajibigad/token-swap
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
                },
<<<<<<< HEAD
                "id": 4651,
||||||| merged common ancestors
                "id": 4435,
=======
                "id": 4735,
>>>>>>> origin/ajibigad/token-swap
                "name": "StructuredDocumentation",
<<<<<<< HEAD
                "src": "695:164:23"
||||||| merged common ancestors
                "src": "695:164:21"
=======
                "src": "695:164:24"
>>>>>>> origin/ajibigad/token-swap
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "index",
<<<<<<< HEAD
                      "scope": 4658,
||||||| merged common ancestors
                      "scope": 4442,
=======
                      "scope": 4742,
>>>>>>> origin/ajibigad/token-swap
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
<<<<<<< HEAD
                        "id": 4652,
||||||| merged common ancestors
                        "id": 4436,
=======
                        "id": 4736,
>>>>>>> origin/ajibigad/token-swap
                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "886:7:23"
||||||| merged common ancestors
                        "src": "886:7:21"
=======
                        "src": "886:7:24"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
<<<<<<< HEAD
                    "id": 4653,
||||||| merged common ancestors
                    "id": 4437,
=======
                    "id": 4737,
>>>>>>> origin/ajibigad/token-swap
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "886:13:23"
||||||| merged common ancestors
                    "src": "886:13:21"
=======
                    "src": "886:13:24"
>>>>>>> origin/ajibigad/token-swap
                  }
                ],
<<<<<<< HEAD
                "id": 4654,
||||||| merged common ancestors
                "id": 4438,
=======
                "id": 4738,
>>>>>>> origin/ajibigad/token-swap
                "name": "ParameterList",
<<<<<<< HEAD
                "src": "885:15:23"
||||||| merged common ancestors
                "src": "885:15:21"
=======
                "src": "885:15:24"
>>>>>>> origin/ajibigad/token-swap
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
<<<<<<< HEAD
                      "scope": 4658,
||||||| merged common ancestors
                      "scope": 4442,
=======
                      "scope": 4742,
>>>>>>> origin/ajibigad/token-swap
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
<<<<<<< HEAD
                        "id": 4655,
||||||| merged common ancestors
                        "id": 4439,
=======
                        "id": 4739,
>>>>>>> origin/ajibigad/token-swap
                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "924:7:23"
||||||| merged common ancestors
                        "src": "924:7:21"
=======
                        "src": "924:7:24"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
<<<<<<< HEAD
                    "id": 4656,
||||||| merged common ancestors
                    "id": 4440,
=======
                    "id": 4740,
>>>>>>> origin/ajibigad/token-swap
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "924:7:23"
||||||| merged common ancestors
                    "src": "924:7:21"
=======
                    "src": "924:7:24"
>>>>>>> origin/ajibigad/token-swap
                  }
                ],
<<<<<<< HEAD
                "id": 4657,
||||||| merged common ancestors
                "id": 4441,
=======
                "id": 4741,
>>>>>>> origin/ajibigad/token-swap
                "name": "ParameterList",
<<<<<<< HEAD
                "src": "923:9:23"
||||||| merged common ancestors
                "src": "923:9:21"
=======
                "src": "923:9:24"
>>>>>>> origin/ajibigad/token-swap
              }
            ],
<<<<<<< HEAD
            "id": 4658,
||||||| merged common ancestors
            "id": 4442,
=======
            "id": 4742,
>>>>>>> origin/ajibigad/token-swap
            "name": "FunctionDefinition",
<<<<<<< HEAD
            "src": "864:69:23"
||||||| merged common ancestors
            "src": "864:69:21"
=======
            "src": "864:69:24"
>>>>>>> origin/ajibigad/token-swap
          }
        ],
<<<<<<< HEAD
        "id": 4659,
||||||| merged common ancestors
        "id": 4443,
=======
        "id": 4743,
>>>>>>> origin/ajibigad/token-swap
        "name": "ContractDefinition",
<<<<<<< HEAD
        "src": "220:715:23"
||||||| merged common ancestors
        "src": "220:715:21"
=======
        "src": "220:715:24"
>>>>>>> origin/ajibigad/token-swap
      }
    ],
<<<<<<< HEAD
    "id": 4660,
||||||| merged common ancestors
    "id": 4444,
=======
    "id": 4744,
>>>>>>> origin/ajibigad/token-swap
    "name": "SourceUnit",
<<<<<<< HEAD
    "src": "33:903:23"
||||||| merged common ancestors
    "src": "33:903:21"
=======
    "src": "33:903:24"
>>>>>>> origin/ajibigad/token-swap
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
<<<<<<< HEAD
  "updatedAt": "2021-04-11T19:32:10.843Z",
||||||| merged common ancestors
  "updatedAt": "2021-04-10T14:35:58.189Z",
=======
  "updatedAt": "2021-04-13T08:20:22.247Z",
>>>>>>> origin/ajibigad/token-swap
  "devdoc": {
    "details": "See https://eips.ethereum.org/EIPS/eip-721",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
      },
      "balanceOf(address)": {
        "details": "Returns the number of tokens in ``owner``'s account."
      },
      "getApproved(uint256)": {
        "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
      },
      "isApprovedForAll(address,address)": {
        "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
      },
      "ownerOf(uint256)": {
        "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
      },
      "setApprovalForAll(address,bool)": {
        "details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
      },
      "supportsInterface(bytes4)": {
        "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
      },
      "tokenByIndex(uint256)": {
        "details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
      },
      "totalSupply()": {
        "details": "Returns the total amount of tokens stored by the contract."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
      }
    },
    "title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}