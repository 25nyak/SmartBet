{
  "contractName": "VToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "mintAmount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "redeemAmount",
          "type": "uint256"
        }
      ],
      "name": "redeemUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOfUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
<<<<<<< HEAD
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOfUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"redeemAmount\",\"type\":\"uint256\"}],\"name\":\"redeemUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/USER/Desktop/BLOCKCHAIN/SmartBet/contracts/VToken.sol\":\"VToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/USER/Desktop/BLOCKCHAIN/SmartBet/contracts/VToken.sol\":{\"keccak256\":\"0x4262d91d110588c64e2f9af38cc85539267a38d4530c7ba2f6eec51438aeb6e3\",\"urls\":[\"bzz-raw://9cc1ab85177994ab5f01231b0a87559087af1aaf33053b172a7501b1a12676c3\",\"dweb:/ipfs/QmVk6BubWyc4rW7AVAg8B2tY6sbw4PoQuXgLx7hZ7kuqUy\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610231806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633af9e66914610046578063852a12e314610076578063a0712d68146100a6575b600080fd5b610060600480360381019061005b9190610115565b6100d6565b60405161006d9190610176565b60405180910390f35b610090600480360381019061008b919061013e565b6100dd565b60405161009d9190610176565b60405180910390f35b6100c060048036038101906100bb919061013e565b6100e4565b6040516100cd9190610176565b60405180910390f35b6000919050565b6000919050565b6000919050565b6000813590506100fa816101cd565b92915050565b60008135905061010f816101e4565b92915050565b60006020828403121561012757600080fd5b6000610135848285016100eb565b91505092915050565b60006020828403121561015057600080fd5b600061015e84828501610100565b91505092915050565b610170816101c3565b82525050565b600060208201905061018b6000830184610167565b92915050565b600061019c826101a3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6101d681610191565b81146101e157600080fd5b50565b6101ed816101c3565b81146101f857600080fd5b5056fea26469706673582212203bbad127fb7e0247585cabb395a05b3bff642df82dd46006b73c7eac42af2b5564736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80633af9e66914610046578063852a12e314610076578063a0712d68146100a6575b600080fd5b610060600480360381019061005b9190610115565b6100d6565b60405161006d9190610176565b60405180910390f35b610090600480360381019061008b919061013e565b6100dd565b60405161009d9190610176565b60405180910390f35b6100c060048036038101906100bb919061013e565b6100e4565b6040516100cd9190610176565b60405180910390f35b6000919050565b6000919050565b6000919050565b6000813590506100fa816101cd565b92915050565b60008135905061010f816101e4565b92915050565b60006020828403121561012757600080fd5b6000610135848285016100eb565b91505092915050565b60006020828403121561015057600080fd5b600061015e84828501610100565b91505092915050565b610170816101c3565b82525050565b600060208201905061018b6000830184610167565b92915050565b600061019c826101a3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6101d681610191565b81146101e157600080fd5b50565b6101ed816101c3565b81146101f857600080fd5b5056fea26469706673582212203bbad127fb7e0247585cabb395a05b3bff642df82dd46006b73c7eac42af2b5564736f6c63430007060033",
||||||| merged common ancestors
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOfUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"redeemAmount\",\"type\":\"uint256\"}],\"name\":\"redeemUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/ajibigad/crytoproject/SmartBet/contracts/SmartInvestV1.sol\":\"VToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/ajibigad/crytoproject/SmartBet/contracts/SmartInvestV1.sol\":{\"keccak256\":\"0x8bc76c5121059ce237ab765ecb45500e0bf400119dc4cde51622a369154b58b3\",\"urls\":[\"bzz-raw://9885e4bfa3a7f8f9cb8f24f4a57e4318a3a6f90f3416248c5f453cbe222b7e3f\",\"dweb:/ipfs/QmZffhhEZcPN59pFb9rDzvGZcFddKCnKRye3Zcw9cxgkWy\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610231806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633af9e66914610046578063852a12e314610076578063a0712d68146100a6575b600080fd5b610060600480360381019061005b9190610115565b6100d6565b60405161006d9190610176565b60405180910390f35b610090600480360381019061008b919061013e565b6100dd565b60405161009d9190610176565b60405180910390f35b6100c060048036038101906100bb919061013e565b6100e4565b6040516100cd9190610176565b60405180910390f35b6000919050565b6000919050565b6000919050565b6000813590506100fa816101cd565b92915050565b60008135905061010f816101e4565b92915050565b60006020828403121561012757600080fd5b6000610135848285016100eb565b91505092915050565b60006020828403121561015057600080fd5b600061015e84828501610100565b91505092915050565b610170816101c3565b82525050565b600060208201905061018b6000830184610167565b92915050565b600061019c826101a3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6101d681610191565b81146101e157600080fd5b50565b6101ed816101c3565b81146101f857600080fd5b5056fea26469706673582212205a35484173968681168a803f21663b692798627084530fe1c28743487ec14d3864736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80633af9e66914610046578063852a12e314610076578063a0712d68146100a6575b600080fd5b610060600480360381019061005b9190610115565b6100d6565b60405161006d9190610176565b60405180910390f35b610090600480360381019061008b919061013e565b6100dd565b60405161009d9190610176565b60405180910390f35b6100c060048036038101906100bb919061013e565b6100e4565b6040516100cd9190610176565b60405180910390f35b6000919050565b6000919050565b6000919050565b6000813590506100fa816101cd565b92915050565b60008135905061010f816101e4565b92915050565b60006020828403121561012757600080fd5b6000610135848285016100eb565b91505092915050565b60006020828403121561015057600080fd5b600061015e84828501610100565b91505092915050565b610170816101c3565b82525050565b600060208201905061018b6000830184610167565b92915050565b600061019c826101a3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6101d681610191565b81146101e157600080fd5b50565b6101ed816101c3565b81146101f857600080fd5b5056fea26469706673582212205a35484173968681168a803f21663b692798627084530fe1c28743487ec14d3864736f6c63430007060033",
=======
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOfUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"redeemAmount\",\"type\":\"uint256\"}],\"name\":\"redeemUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/ajibigad/crytoproject/SmartBet/contracts/VToken.sol\":\"VToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/ajibigad/crytoproject/SmartBet/contracts/VToken.sol\":{\"keccak256\":\"0x1ebfa91abe32a0aa714fcebdbe98945891fba891b95bea36adbf3a42431a53d0\",\"urls\":[\"bzz-raw://9c14ca48bffc752d903543cab1be5d854d321d98bf36dd06db130eeee7f7057b\",\"dweb:/ipfs/QmNuj5RUdfAfGjNgTrG1JqFBoxKCv3zH2rHsgJ6KC1gaJa\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610231806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633af9e66914610046578063852a12e314610076578063a0712d68146100a6575b600080fd5b610060600480360381019061005b9190610115565b6100d6565b60405161006d9190610176565b60405180910390f35b610090600480360381019061008b919061013e565b6100dd565b60405161009d9190610176565b60405180910390f35b6100c060048036038101906100bb919061013e565b6100e4565b6040516100cd9190610176565b60405180910390f35b6000919050565b6000919050565b6000919050565b6000813590506100fa816101cd565b92915050565b60008135905061010f816101e4565b92915050565b60006020828403121561012757600080fd5b6000610135848285016100eb565b91505092915050565b60006020828403121561015057600080fd5b600061015e84828501610100565b91505092915050565b610170816101c3565b82525050565b600060208201905061018b6000830184610167565b92915050565b600061019c826101a3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6101d681610191565b81146101e157600080fd5b50565b6101ed816101c3565b81146101f857600080fd5b5056fea264697066735822122082d5c85941dc90e3eff3bfe2cd77a1e49a93b17bb54a6aa409ab1135b405557864736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80633af9e66914610046578063852a12e314610076578063a0712d68146100a6575b600080fd5b610060600480360381019061005b9190610115565b6100d6565b60405161006d9190610176565b60405180910390f35b610090600480360381019061008b919061013e565b6100dd565b60405161009d9190610176565b60405180910390f35b6100c060048036038101906100bb919061013e565b6100e4565b6040516100cd9190610176565b60405180910390f35b6000919050565b6000919050565b6000919050565b6000813590506100fa816101cd565b92915050565b60008135905061010f816101e4565b92915050565b60006020828403121561012757600080fd5b6000610135848285016100eb565b91505092915050565b60006020828403121561015057600080fd5b600061015e84828501610100565b91505092915050565b610170816101c3565b82525050565b600060208201905061018b6000830184610167565b92915050565b600061019c826101a3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6101d681610191565b81146101e157600080fd5b50565b6101ed816101c3565b81146101f857600080fd5b5056fea264697066735822122082d5c85941dc90e3eff3bfe2cd77a1e49a93b17bb54a6aa409ab1135b405557864736f6c63430007060033",
>>>>>>> origin/ajibigad/token-swap
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
        "src": "0:1755:2",
||||||| merged common ancestors
        "src": "0:1755:29",
=======
        "src": "0:1755:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
        "src": "0:1755:32",
=======
        "src": "0:1755:33",
>>>>>>> origin/ajibigad/token-swap
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "59:87:2",
||||||| merged common ancestors
              "src": "59:87:29",
=======
              "src": "59:87:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "59:87:32",
=======
              "src": "59:87:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
<<<<<<< HEAD
                  "src": "69:29:2",
||||||| merged common ancestors
                  "src": "69:29:29",
=======
                  "src": "69:29:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "src": "69:29:32",
=======
                  "src": "69:29:33",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "91:6:2"
||||||| merged common ancestors
                        "src": "91:6:29"
=======
                        "src": "91:6:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "91:6:32"
=======
                        "src": "91:6:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "78:12:2"
||||||| merged common ancestors
                      "src": "78:12:29"
=======
                      "src": "78:12:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "78:12:32"
=======
                      "src": "78:12:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "78:20:2"
||||||| merged common ancestors
                    "src": "78:20:29"
=======
                    "src": "78:20:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "78:20:32"
=======
                    "src": "78:20:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "69:5:2"
||||||| merged common ancestors
                      "src": "69:5:29"
=======
                      "src": "69:5:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "69:5:32"
=======
                      "src": "69:5:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "134:5:2"
||||||| merged common ancestors
                        "src": "134:5:29"
=======
                        "src": "134:5:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "134:5:32"
=======
                        "src": "134:5:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "107:26:2"
||||||| merged common ancestors
                      "src": "107:26:29"
=======
                      "src": "107:26:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "107:26:32"
=======
                      "src": "107:26:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "107:33:2"
||||||| merged common ancestors
                    "src": "107:33:29"
=======
                    "src": "107:33:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "107:33:32"
=======
                    "src": "107:33:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "nodeType": "YulExpressionStatement",
<<<<<<< HEAD
<<<<<<< HEAD
                  "src": "107:33:2"
||||||| merged common ancestors
                  "src": "107:33:29"
=======
                  "src": "107:33:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "src": "107:33:32"
=======
                  "src": "107:33:33"
>>>>>>> origin/ajibigad/token-swap
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "37:6:2",
||||||| merged common ancestors
                "src": "37:6:29",
=======
                "src": "37:6:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "37:6:32",
=======
                "src": "37:6:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "45:3:2",
||||||| merged common ancestors
                "src": "45:3:29",
=======
                "src": "45:3:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "45:3:32",
=======
                "src": "45:3:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "53:5:2",
||||||| merged common ancestors
                "src": "53:5:29",
=======
                "src": "53:5:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "53:5:32",
=======
                "src": "53:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
<<<<<<< HEAD
            "src": "7:139:2"
||||||| merged common ancestors
            "src": "7:139:29"
=======
            "src": "7:139:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "src": "7:139:32"
=======
            "src": "7:139:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "204:87:2",
||||||| merged common ancestors
              "src": "204:87:29",
=======
              "src": "204:87:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "204:87:32",
=======
              "src": "204:87:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
<<<<<<< HEAD
                  "src": "214:29:2",
||||||| merged common ancestors
                  "src": "214:29:29",
=======
                  "src": "214:29:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "src": "214:29:32",
=======
                  "src": "214:29:33",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "236:6:2"
||||||| merged common ancestors
                        "src": "236:6:29"
=======
                        "src": "236:6:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "236:6:32"
=======
                        "src": "236:6:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "223:12:2"
||||||| merged common ancestors
                      "src": "223:12:29"
=======
                      "src": "223:12:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "223:12:32"
=======
                      "src": "223:12:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "223:20:2"
||||||| merged common ancestors
                    "src": "223:20:29"
=======
                    "src": "223:20:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "223:20:32"
=======
                    "src": "223:20:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "214:5:2"
||||||| merged common ancestors
                      "src": "214:5:29"
=======
                      "src": "214:5:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "214:5:32"
=======
                      "src": "214:5:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "279:5:2"
||||||| merged common ancestors
                        "src": "279:5:29"
=======
                        "src": "279:5:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "279:5:32"
=======
                        "src": "279:5:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "252:26:2"
||||||| merged common ancestors
                      "src": "252:26:29"
=======
                      "src": "252:26:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "252:26:32"
=======
                      "src": "252:26:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "252:33:2"
||||||| merged common ancestors
                    "src": "252:33:29"
=======
                    "src": "252:33:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "252:33:32"
=======
                    "src": "252:33:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "nodeType": "YulExpressionStatement",
<<<<<<< HEAD
<<<<<<< HEAD
                  "src": "252:33:2"
||||||| merged common ancestors
                  "src": "252:33:29"
=======
                  "src": "252:33:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "src": "252:33:32"
=======
                  "src": "252:33:33"
>>>>>>> origin/ajibigad/token-swap
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "182:6:2",
||||||| merged common ancestors
                "src": "182:6:29",
=======
                "src": "182:6:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "182:6:32",
=======
                "src": "182:6:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "190:3:2",
||||||| merged common ancestors
                "src": "190:3:29",
=======
                "src": "190:3:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "190:3:32",
=======
                "src": "190:3:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "198:5:2",
||||||| merged common ancestors
                "src": "198:5:29",
=======
                "src": "198:5:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "198:5:32",
=======
                "src": "198:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
<<<<<<< HEAD
            "src": "152:139:2"
||||||| merged common ancestors
            "src": "152:139:29"
=======
            "src": "152:139:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "src": "152:139:32"
=======
            "src": "152:139:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "363:196:2",
||||||| merged common ancestors
              "src": "363:196:29",
=======
              "src": "363:196:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "363:196:32",
=======
              "src": "363:196:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "409:16:2",
||||||| merged common ancestors
                    "src": "409:16:29",
=======
                    "src": "409:16:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "409:16:32",
=======
                    "src": "409:16:33",
>>>>>>> origin/ajibigad/token-swap
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
<<<<<<< HEAD
                              "src": "418:1:2",
||||||| merged common ancestors
                              "src": "418:1:29",
=======
                              "src": "418:1:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                              "src": "418:1:32",
=======
                              "src": "418:1:33",
>>>>>>> origin/ajibigad/token-swap
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
<<<<<<< HEAD
                              "src": "421:1:2",
||||||| merged common ancestors
                              "src": "421:1:29",
=======
                              "src": "421:1:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                              "src": "421:1:32",
=======
                              "src": "421:1:33",
>>>>>>> origin/ajibigad/token-swap
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "411:6:2"
||||||| merged common ancestors
                            "src": "411:6:29"
=======
                            "src": "411:6:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "411:6:32"
=======
                            "src": "411:6:33"
>>>>>>> origin/ajibigad/token-swap
                          },
                          "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "411:12:2"
||||||| merged common ancestors
                          "src": "411:12:29"
=======
                          "src": "411:12:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                          "src": "411:12:32"
=======
                          "src": "411:12:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulExpressionStatement",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "411:12:2"
||||||| merged common ancestors
                        "src": "411:12:29"
=======
                        "src": "411:12:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "411:12:32"
=======
                        "src": "411:12:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "384:7:2"
||||||| merged common ancestors
                            "src": "384:7:29"
=======
                            "src": "384:7:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "384:7:32"
=======
                            "src": "384:7:33"
>>>>>>> origin/ajibigad/token-swap
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "393:9:2"
||||||| merged common ancestors
                            "src": "393:9:29"
=======
                            "src": "393:9:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "393:9:32"
=======
                            "src": "393:9:33"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "380:3:2"
||||||| merged common ancestors
                          "src": "380:3:29"
=======
                          "src": "380:3:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                          "src": "380:3:32"
=======
                          "src": "380:3:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "380:23:2"
||||||| merged common ancestors
                        "src": "380:23:29"
=======
                        "src": "380:23:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "380:23:32"
=======
                        "src": "380:23:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "405:2:2",
||||||| merged common ancestors
                        "src": "405:2:29",
=======
                        "src": "405:2:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "405:2:32",
=======
                        "src": "405:2:33",
>>>>>>> origin/ajibigad/token-swap
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "376:3:2"
||||||| merged common ancestors
                      "src": "376:3:29"
=======
                      "src": "376:3:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "376:3:32"
=======
                      "src": "376:3:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "376:32:2"
||||||| merged common ancestors
                    "src": "376:32:29"
=======
                    "src": "376:32:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "376:32:32"
=======
                    "src": "376:32:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "nodeType": "YulIf",
<<<<<<< HEAD
<<<<<<< HEAD
                  "src": "373:2:2"
||||||| merged common ancestors
                  "src": "373:2:29"
=======
                  "src": "373:2:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "src": "373:2:32"
=======
                  "src": "373:2:33"
>>>>>>> origin/ajibigad/token-swap
                },
                {
                  "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
                  "src": "435:117:2",
||||||| merged common ancestors
                  "src": "435:117:29",
=======
                  "src": "435:117:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "src": "435:117:32",
=======
                  "src": "435:117:33",
>>>>>>> origin/ajibigad/token-swap
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "450:15:2",
||||||| merged common ancestors
                      "src": "450:15:29",
=======
                      "src": "450:15:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "450:15:32",
=======
                      "src": "450:15:33",
>>>>>>> origin/ajibigad/token-swap
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "464:1:2",
||||||| merged common ancestors
                        "src": "464:1:29",
=======
                        "src": "464:1:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "464:1:32",
=======
                        "src": "464:1:33",
>>>>>>> origin/ajibigad/token-swap
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "454:6:2",
||||||| merged common ancestors
                          "src": "454:6:29",
=======
                          "src": "454:6:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                          "src": "454:6:32",
=======
                          "src": "454:6:33",
>>>>>>> origin/ajibigad/token-swap
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "479:63:2",
||||||| merged common ancestors
                      "src": "479:63:29",
=======
                      "src": "479:63:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "479:63:32",
=======
                      "src": "479:63:33",
>>>>>>> origin/ajibigad/token-swap
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                                "src": "514:9:2"
||||||| merged common ancestors
                                "src": "514:9:29"
=======
                                "src": "514:9:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                                "src": "514:9:32"
=======
                                "src": "514:9:33"
>>>>>>> origin/ajibigad/token-swap
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                                "src": "525:6:2"
||||||| merged common ancestors
                                "src": "525:6:29"
=======
                                "src": "525:6:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                                "src": "525:6:32"
=======
                                "src": "525:6:33"
>>>>>>> origin/ajibigad/token-swap
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                              "src": "510:3:2"
||||||| merged common ancestors
                              "src": "510:3:29"
=======
                              "src": "510:3:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                              "src": "510:3:32"
=======
                              "src": "510:3:33"
>>>>>>> origin/ajibigad/token-swap
                            },
                            "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "510:22:2"
||||||| merged common ancestors
                            "src": "510:22:29"
=======
                            "src": "510:22:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "510:22:32"
=======
                            "src": "510:22:33"
>>>>>>> origin/ajibigad/token-swap
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "534:7:2"
||||||| merged common ancestors
                            "src": "534:7:29"
=======
                            "src": "534:7:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "534:7:32"
=======
                            "src": "534:7:33"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "489:20:2"
||||||| merged common ancestors
                          "src": "489:20:29"
=======
                          "src": "489:20:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                          "src": "489:20:32"
=======
                          "src": "489:20:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "489:53:2"
||||||| merged common ancestors
                        "src": "489:53:29"
=======
                        "src": "489:53:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "489:53:32"
=======
                        "src": "489:53:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "479:6:2"
||||||| merged common ancestors
                          "src": "479:6:29"
=======
                          "src": "479:6:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                          "src": "479:6:32"
=======
                          "src": "479:6:33"
>>>>>>> origin/ajibigad/token-swap
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "333:9:2",
||||||| merged common ancestors
                "src": "333:9:29",
=======
                "src": "333:9:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "333:9:32",
=======
                "src": "333:9:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "344:7:2",
||||||| merged common ancestors
                "src": "344:7:29",
=======
                "src": "344:7:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "344:7:32",
=======
                "src": "344:7:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "356:6:2",
||||||| merged common ancestors
                "src": "356:6:29",
=======
                "src": "356:6:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "356:6:32",
=======
                "src": "356:6:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
<<<<<<< HEAD
            "src": "297:262:2"
||||||| merged common ancestors
            "src": "297:262:29"
=======
            "src": "297:262:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "src": "297:262:32"
=======
            "src": "297:262:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "631:196:2",
||||||| merged common ancestors
              "src": "631:196:29",
=======
              "src": "631:196:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "631:196:32",
=======
              "src": "631:196:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "677:16:2",
||||||| merged common ancestors
                    "src": "677:16:29",
=======
                    "src": "677:16:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "677:16:32",
=======
                    "src": "677:16:33",
>>>>>>> origin/ajibigad/token-swap
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
<<<<<<< HEAD
                              "src": "686:1:2",
||||||| merged common ancestors
                              "src": "686:1:29",
=======
                              "src": "686:1:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                              "src": "686:1:32",
=======
                              "src": "686:1:33",
>>>>>>> origin/ajibigad/token-swap
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
<<<<<<< HEAD
                              "src": "689:1:2",
||||||| merged common ancestors
                              "src": "689:1:29",
=======
                              "src": "689:1:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                              "src": "689:1:32",
=======
                              "src": "689:1:33",
>>>>>>> origin/ajibigad/token-swap
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "679:6:2"
||||||| merged common ancestors
                            "src": "679:6:29"
=======
                            "src": "679:6:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "679:6:32"
=======
                            "src": "679:6:33"
>>>>>>> origin/ajibigad/token-swap
                          },
                          "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "679:12:2"
||||||| merged common ancestors
                          "src": "679:12:29"
=======
                          "src": "679:12:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                          "src": "679:12:32"
=======
                          "src": "679:12:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulExpressionStatement",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "679:12:2"
||||||| merged common ancestors
                        "src": "679:12:29"
=======
                        "src": "679:12:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "679:12:32"
=======
                        "src": "679:12:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "652:7:2"
||||||| merged common ancestors
                            "src": "652:7:29"
=======
                            "src": "652:7:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "652:7:32"
=======
                            "src": "652:7:33"
>>>>>>> origin/ajibigad/token-swap
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "661:9:2"
||||||| merged common ancestors
                            "src": "661:9:29"
=======
                            "src": "661:9:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "661:9:32"
=======
                            "src": "661:9:33"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "648:3:2"
||||||| merged common ancestors
                          "src": "648:3:29"
=======
                          "src": "648:3:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                          "src": "648:3:32"
=======
                          "src": "648:3:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "648:23:2"
||||||| merged common ancestors
                        "src": "648:23:29"
=======
                        "src": "648:23:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "648:23:32"
=======
                        "src": "648:23:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "673:2:2",
||||||| merged common ancestors
                        "src": "673:2:29",
=======
                        "src": "673:2:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "673:2:32",
=======
                        "src": "673:2:33",
>>>>>>> origin/ajibigad/token-swap
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "644:3:2"
||||||| merged common ancestors
                      "src": "644:3:29"
=======
                      "src": "644:3:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "644:3:32"
=======
                      "src": "644:3:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "644:32:2"
||||||| merged common ancestors
                    "src": "644:32:29"
=======
                    "src": "644:32:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "644:32:32"
=======
                    "src": "644:32:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "nodeType": "YulIf",
<<<<<<< HEAD
<<<<<<< HEAD
                  "src": "641:2:2"
||||||| merged common ancestors
                  "src": "641:2:29"
=======
                  "src": "641:2:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "src": "641:2:32"
=======
                  "src": "641:2:33"
>>>>>>> origin/ajibigad/token-swap
                },
                {
                  "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
                  "src": "703:117:2",
||||||| merged common ancestors
                  "src": "703:117:29",
=======
                  "src": "703:117:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "src": "703:117:32",
=======
                  "src": "703:117:33",
>>>>>>> origin/ajibigad/token-swap
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "718:15:2",
||||||| merged common ancestors
                      "src": "718:15:29",
=======
                      "src": "718:15:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "718:15:32",
=======
                      "src": "718:15:33",
>>>>>>> origin/ajibigad/token-swap
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "732:1:2",
||||||| merged common ancestors
                        "src": "732:1:29",
=======
                        "src": "732:1:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "732:1:32",
=======
                        "src": "732:1:33",
>>>>>>> origin/ajibigad/token-swap
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "722:6:2",
||||||| merged common ancestors
                          "src": "722:6:29",
=======
                          "src": "722:6:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                          "src": "722:6:32",
=======
                          "src": "722:6:33",
>>>>>>> origin/ajibigad/token-swap
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "747:63:2",
||||||| merged common ancestors
                      "src": "747:63:29",
=======
                      "src": "747:63:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "747:63:32",
=======
                      "src": "747:63:33",
>>>>>>> origin/ajibigad/token-swap
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                                "src": "782:9:2"
||||||| merged common ancestors
                                "src": "782:9:29"
=======
                                "src": "782:9:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                                "src": "782:9:32"
=======
                                "src": "782:9:33"
>>>>>>> origin/ajibigad/token-swap
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                                "src": "793:6:2"
||||||| merged common ancestors
                                "src": "793:6:29"
=======
                                "src": "793:6:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                                "src": "793:6:32"
=======
                                "src": "793:6:33"
>>>>>>> origin/ajibigad/token-swap
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                              "src": "778:3:2"
||||||| merged common ancestors
                              "src": "778:3:29"
=======
                              "src": "778:3:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                              "src": "778:3:32"
=======
                              "src": "778:3:33"
>>>>>>> origin/ajibigad/token-swap
                            },
                            "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "778:22:2"
||||||| merged common ancestors
                            "src": "778:22:29"
=======
                            "src": "778:22:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "778:22:32"
=======
                            "src": "778:22:33"
>>>>>>> origin/ajibigad/token-swap
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "802:7:2"
||||||| merged common ancestors
                            "src": "802:7:29"
=======
                            "src": "802:7:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "802:7:32"
=======
                            "src": "802:7:33"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "757:20:2"
||||||| merged common ancestors
                          "src": "757:20:29"
=======
                          "src": "757:20:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                          "src": "757:20:32"
=======
                          "src": "757:20:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "757:53:2"
||||||| merged common ancestors
                        "src": "757:53:29"
=======
                        "src": "757:53:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "757:53:32"
=======
                        "src": "757:53:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "747:6:2"
||||||| merged common ancestors
                          "src": "747:6:29"
=======
                          "src": "747:6:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                          "src": "747:6:32"
=======
                          "src": "747:6:33"
>>>>>>> origin/ajibigad/token-swap
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "601:9:2",
||||||| merged common ancestors
                "src": "601:9:29",
=======
                "src": "601:9:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "601:9:32",
=======
                "src": "601:9:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "612:7:2",
||||||| merged common ancestors
                "src": "612:7:29",
=======
                "src": "612:7:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "612:7:32",
=======
                "src": "612:7:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "624:6:2",
||||||| merged common ancestors
                "src": "624:6:29",
=======
                "src": "624:6:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "624:6:32",
=======
                "src": "624:6:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
<<<<<<< HEAD
            "src": "565:262:2"
||||||| merged common ancestors
            "src": "565:262:29"
=======
            "src": "565:262:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "src": "565:262:32"
=======
            "src": "565:262:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "898:53:2",
||||||| merged common ancestors
              "src": "898:53:29",
=======
              "src": "898:53:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "898:53:32",
=======
              "src": "898:53:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "915:3:2"
||||||| merged common ancestors
                        "src": "915:3:29"
=======
                        "src": "915:3:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "915:3:32"
=======
                        "src": "915:3:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "938:5:2"
||||||| merged common ancestors
                            "src": "938:5:29"
=======
                            "src": "938:5:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "938:5:32"
=======
                            "src": "938:5:33"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "920:17:2"
||||||| merged common ancestors
                          "src": "920:17:29"
=======
                          "src": "920:17:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                          "src": "920:17:32"
=======
                          "src": "920:17:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "920:24:2"
||||||| merged common ancestors
                        "src": "920:24:29"
=======
                        "src": "920:24:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "920:24:32"
=======
                        "src": "920:24:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "908:6:2"
||||||| merged common ancestors
                      "src": "908:6:29"
=======
                      "src": "908:6:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "908:6:32"
=======
                      "src": "908:6:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "908:37:2"
||||||| merged common ancestors
                    "src": "908:37:29"
=======
                    "src": "908:37:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "908:37:32"
=======
                    "src": "908:37:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "nodeType": "YulExpressionStatement",
<<<<<<< HEAD
<<<<<<< HEAD
                  "src": "908:37:2"
||||||| merged common ancestors
                  "src": "908:37:29"
=======
                  "src": "908:37:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "src": "908:37:32"
=======
                  "src": "908:37:33"
>>>>>>> origin/ajibigad/token-swap
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "886:5:2",
||||||| merged common ancestors
                "src": "886:5:29",
=======
                "src": "886:5:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "886:5:32",
=======
                "src": "886:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "893:3:2",
||||||| merged common ancestors
                "src": "893:3:29",
=======
                "src": "893:3:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "893:3:32",
=======
                "src": "893:3:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
<<<<<<< HEAD
            "src": "833:118:2"
||||||| merged common ancestors
            "src": "833:118:29"
=======
            "src": "833:118:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "src": "833:118:32"
=======
            "src": "833:118:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "1055:124:2",
||||||| merged common ancestors
              "src": "1055:124:29",
=======
              "src": "1055:124:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "1055:124:32",
=======
              "src": "1055:124:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
<<<<<<< HEAD
                  "src": "1065:26:2",
||||||| merged common ancestors
                  "src": "1065:26:29",
=======
                  "src": "1065:26:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "src": "1065:26:32",
=======
                  "src": "1065:26:33",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "1077:9:2"
||||||| merged common ancestors
                        "src": "1077:9:29"
=======
                        "src": "1077:9:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "1077:9:32"
=======
                        "src": "1077:9:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "1088:2:2",
||||||| merged common ancestors
                        "src": "1088:2:29",
=======
                        "src": "1088:2:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "1088:2:32",
=======
                        "src": "1088:2:33",
>>>>>>> origin/ajibigad/token-swap
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "1073:3:2"
||||||| merged common ancestors
                      "src": "1073:3:29"
=======
                      "src": "1073:3:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "1073:3:32"
=======
                      "src": "1073:3:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "1073:18:2"
||||||| merged common ancestors
                    "src": "1073:18:29"
=======
                    "src": "1073:18:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "1073:18:32"
=======
                    "src": "1073:18:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "1065:4:2"
||||||| merged common ancestors
                      "src": "1065:4:29"
=======
                      "src": "1065:4:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "1065:4:32"
=======
                      "src": "1065:4:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "1145:6:2"
||||||| merged common ancestors
                        "src": "1145:6:29"
=======
                        "src": "1145:6:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "1145:6:32"
=======
                        "src": "1145:6:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "1158:9:2"
||||||| merged common ancestors
                            "src": "1158:9:29"
=======
                            "src": "1158:9:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "1158:9:32"
=======
                            "src": "1158:9:33"
>>>>>>> origin/ajibigad/token-swap
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "1169:1:2",
||||||| merged common ancestors
                            "src": "1169:1:29",
=======
                            "src": "1169:1:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "1169:1:32",
=======
                            "src": "1169:1:33",
>>>>>>> origin/ajibigad/token-swap
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "1154:3:2"
||||||| merged common ancestors
                          "src": "1154:3:29"
=======
                          "src": "1154:3:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                          "src": "1154:3:32"
=======
                          "src": "1154:3:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "1154:17:2"
||||||| merged common ancestors
                        "src": "1154:17:29"
=======
                        "src": "1154:17:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "1154:17:32"
=======
                        "src": "1154:17:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "1101:43:2"
||||||| merged common ancestors
                      "src": "1101:43:29"
=======
                      "src": "1101:43:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "1101:43:32"
=======
                      "src": "1101:43:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "1101:71:2"
||||||| merged common ancestors
                    "src": "1101:71:29"
=======
                    "src": "1101:71:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "1101:71:32"
=======
                    "src": "1101:71:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "nodeType": "YulExpressionStatement",
<<<<<<< HEAD
<<<<<<< HEAD
                  "src": "1101:71:2"
||||||| merged common ancestors
                  "src": "1101:71:29"
=======
                  "src": "1101:71:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "src": "1101:71:32"
=======
                  "src": "1101:71:33"
>>>>>>> origin/ajibigad/token-swap
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "1027:9:2",
||||||| merged common ancestors
                "src": "1027:9:29",
=======
                "src": "1027:9:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "1027:9:32",
=======
                "src": "1027:9:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "1039:6:2",
||||||| merged common ancestors
                "src": "1039:6:29",
=======
                "src": "1039:6:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "1039:6:32",
=======
                "src": "1039:6:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "1050:4:2",
||||||| merged common ancestors
                "src": "1050:4:29",
=======
                "src": "1050:4:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "1050:4:32",
=======
                "src": "1050:4:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
<<<<<<< HEAD
            "src": "957:222:2"
||||||| merged common ancestors
            "src": "957:222:29"
=======
            "src": "957:222:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "src": "957:222:32"
=======
            "src": "957:222:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "1230:51:2",
||||||| merged common ancestors
              "src": "1230:51:29",
=======
              "src": "1230:51:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "1230:51:32",
=======
              "src": "1230:51:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
<<<<<<< HEAD
                  "src": "1240:35:2",
||||||| merged common ancestors
                  "src": "1240:35:29",
=======
                  "src": "1240:35:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "src": "1240:35:32",
=======
                  "src": "1240:35:33",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "1269:5:2"
||||||| merged common ancestors
                        "src": "1269:5:29"
=======
                        "src": "1269:5:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "1269:5:32"
=======
                        "src": "1269:5:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "1251:17:2"
||||||| merged common ancestors
                      "src": "1251:17:29"
=======
                      "src": "1251:17:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "1251:17:32"
=======
                      "src": "1251:17:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "1251:24:2"
||||||| merged common ancestors
                    "src": "1251:24:29"
=======
                    "src": "1251:24:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "1251:24:32"
=======
                    "src": "1251:24:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "1240:7:2"
||||||| merged common ancestors
                      "src": "1240:7:29"
=======
                      "src": "1240:7:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "1240:7:32"
=======
                      "src": "1240:7:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "1212:5:2",
||||||| merged common ancestors
                "src": "1212:5:29",
=======
                "src": "1212:5:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "1212:5:32",
=======
                "src": "1212:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "1222:7:2",
||||||| merged common ancestors
                "src": "1222:7:29",
=======
                "src": "1222:7:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "1222:7:32",
=======
                "src": "1222:7:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
<<<<<<< HEAD
            "src": "1185:96:2"
||||||| merged common ancestors
            "src": "1185:96:29"
=======
            "src": "1185:96:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "src": "1185:96:32"
=======
            "src": "1185:96:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "1332:81:2",
||||||| merged common ancestors
              "src": "1332:81:29",
=======
              "src": "1332:81:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "1332:81:32",
=======
              "src": "1332:81:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
<<<<<<< HEAD
                  "src": "1342:65:2",
||||||| merged common ancestors
                  "src": "1342:65:29",
=======
                  "src": "1342:65:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "src": "1342:65:32",
=======
                  "src": "1342:65:33",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "1357:5:2"
||||||| merged common ancestors
                        "src": "1357:5:29"
=======
                        "src": "1357:5:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "1357:5:32"
=======
                        "src": "1357:5:33"
>>>>>>> origin/ajibigad/token-swap
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "1364:42:2",
||||||| merged common ancestors
                        "src": "1364:42:29",
=======
                        "src": "1364:42:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "1364:42:32",
=======
                        "src": "1364:42:33",
>>>>>>> origin/ajibigad/token-swap
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "1353:3:2"
||||||| merged common ancestors
                      "src": "1353:3:29"
=======
                      "src": "1353:3:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "1353:3:32"
=======
                      "src": "1353:3:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "1353:54:2"
||||||| merged common ancestors
                    "src": "1353:54:29"
=======
                    "src": "1353:54:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "1353:54:32"
=======
                    "src": "1353:54:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "1342:7:2"
||||||| merged common ancestors
                      "src": "1342:7:29"
=======
                      "src": "1342:7:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "1342:7:32"
=======
                      "src": "1342:7:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "1314:5:2",
||||||| merged common ancestors
                "src": "1314:5:29",
=======
                "src": "1314:5:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "1314:5:32",
=======
                "src": "1314:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "1324:7:2",
||||||| merged common ancestors
                "src": "1324:7:29",
=======
                "src": "1324:7:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "1324:7:32",
=======
                "src": "1324:7:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
<<<<<<< HEAD
            "src": "1287:126:2"
||||||| merged common ancestors
            "src": "1287:126:29"
=======
            "src": "1287:126:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "src": "1287:126:32"
=======
            "src": "1287:126:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "1464:32:2",
||||||| merged common ancestors
              "src": "1464:32:29",
=======
              "src": "1464:32:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "1464:32:32",
=======
              "src": "1464:32:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "nodeType": "YulAssignment",
<<<<<<< HEAD
<<<<<<< HEAD
                  "src": "1474:16:2",
||||||| merged common ancestors
                  "src": "1474:16:29",
=======
                  "src": "1474:16:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "src": "1474:16:32",
=======
                  "src": "1474:16:33",
>>>>>>> origin/ajibigad/token-swap
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "1485:5:2"
||||||| merged common ancestors
                    "src": "1485:5:29"
=======
                    "src": "1485:5:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "1485:5:32"
=======
                    "src": "1485:5:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "1474:7:2"
||||||| merged common ancestors
                      "src": "1474:7:29"
=======
                      "src": "1474:7:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "1474:7:32"
=======
                      "src": "1474:7:33"
>>>>>>> origin/ajibigad/token-swap
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "1446:5:2",
||||||| merged common ancestors
                "src": "1446:5:29",
=======
                "src": "1446:5:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "1446:5:32",
=======
                "src": "1446:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "1456:7:2",
||||||| merged common ancestors
                "src": "1456:7:29",
=======
                "src": "1456:7:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "1456:7:32",
=======
                "src": "1456:7:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
<<<<<<< HEAD
            "src": "1419:77:2"
||||||| merged common ancestors
            "src": "1419:77:29"
=======
            "src": "1419:77:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "src": "1419:77:32"
=======
            "src": "1419:77:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "1545:79:2",
||||||| merged common ancestors
              "src": "1545:79:29",
=======
              "src": "1545:79:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "1545:79:32",
=======
              "src": "1545:79:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "1602:16:2",
||||||| merged common ancestors
                    "src": "1602:16:29",
=======
                    "src": "1602:16:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "1602:16:32",
=======
                    "src": "1602:16:33",
>>>>>>> origin/ajibigad/token-swap
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
<<<<<<< HEAD
                              "src": "1611:1:2",
||||||| merged common ancestors
                              "src": "1611:1:29",
=======
                              "src": "1611:1:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                              "src": "1611:1:32",
=======
                              "src": "1611:1:33",
>>>>>>> origin/ajibigad/token-swap
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
<<<<<<< HEAD
                              "src": "1614:1:2",
||||||| merged common ancestors
                              "src": "1614:1:29",
=======
                              "src": "1614:1:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                              "src": "1614:1:32",
=======
                              "src": "1614:1:33",
>>>>>>> origin/ajibigad/token-swap
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "1604:6:2"
||||||| merged common ancestors
                            "src": "1604:6:29"
=======
                            "src": "1604:6:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "1604:6:32"
=======
                            "src": "1604:6:33"
>>>>>>> origin/ajibigad/token-swap
                          },
                          "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "1604:12:2"
||||||| merged common ancestors
                          "src": "1604:12:29"
=======
                          "src": "1604:12:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                          "src": "1604:12:32"
=======
                          "src": "1604:12:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulExpressionStatement",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "1604:12:2"
||||||| merged common ancestors
                        "src": "1604:12:29"
=======
                        "src": "1604:12:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "1604:12:32"
=======
                        "src": "1604:12:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "1568:5:2"
||||||| merged common ancestors
                            "src": "1568:5:29"
=======
                            "src": "1568:5:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "1568:5:32"
=======
                            "src": "1568:5:33"
>>>>>>> origin/ajibigad/token-swap
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                                "src": "1593:5:2"
||||||| merged common ancestors
                                "src": "1593:5:29"
=======
                                "src": "1593:5:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                                "src": "1593:5:32"
=======
                                "src": "1593:5:33"
>>>>>>> origin/ajibigad/token-swap
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                              "src": "1575:17:2"
||||||| merged common ancestors
                              "src": "1575:17:29"
=======
                              "src": "1575:17:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                              "src": "1575:17:32"
=======
                              "src": "1575:17:33"
>>>>>>> origin/ajibigad/token-swap
                            },
                            "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "1575:24:2"
||||||| merged common ancestors
                            "src": "1575:24:29"
=======
                            "src": "1575:24:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "1575:24:32"
=======
                            "src": "1575:24:33"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "1565:2:2"
||||||| merged common ancestors
                          "src": "1565:2:29"
=======
                          "src": "1565:2:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                          "src": "1565:2:32"
=======
                          "src": "1565:2:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "1565:35:2"
||||||| merged common ancestors
                        "src": "1565:35:29"
=======
                        "src": "1565:35:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "1565:35:32"
=======
                        "src": "1565:35:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "1558:6:2"
||||||| merged common ancestors
                      "src": "1558:6:29"
=======
                      "src": "1558:6:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "1558:6:32"
=======
                      "src": "1558:6:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "1558:43:2"
||||||| merged common ancestors
                    "src": "1558:43:29"
=======
                    "src": "1558:43:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "1558:43:32"
=======
                    "src": "1558:43:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "nodeType": "YulIf",
<<<<<<< HEAD
<<<<<<< HEAD
                  "src": "1555:2:2"
||||||| merged common ancestors
                  "src": "1555:2:29"
=======
                  "src": "1555:2:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "src": "1555:2:32"
=======
                  "src": "1555:2:33"
>>>>>>> origin/ajibigad/token-swap
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "1538:5:2",
||||||| merged common ancestors
                "src": "1538:5:29",
=======
                "src": "1538:5:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "1538:5:32",
=======
                "src": "1538:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
<<<<<<< HEAD
            "src": "1502:122:2"
||||||| merged common ancestors
            "src": "1502:122:29"
=======
            "src": "1502:122:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "src": "1502:122:32"
=======
            "src": "1502:122:33"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "body": {
              "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "1673:79:2",
||||||| merged common ancestors
              "src": "1673:79:29",
=======
              "src": "1673:79:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "1673:79:32",
=======
              "src": "1673:79:33",
>>>>>>> origin/ajibigad/token-swap
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "1730:16:2",
||||||| merged common ancestors
                    "src": "1730:16:29",
=======
                    "src": "1730:16:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "1730:16:32",
=======
                    "src": "1730:16:33",
>>>>>>> origin/ajibigad/token-swap
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
<<<<<<< HEAD
                              "src": "1739:1:2",
||||||| merged common ancestors
                              "src": "1739:1:29",
=======
                              "src": "1739:1:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                              "src": "1739:1:32",
=======
                              "src": "1739:1:33",
>>>>>>> origin/ajibigad/token-swap
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
<<<<<<< HEAD
<<<<<<< HEAD
                              "src": "1742:1:2",
||||||| merged common ancestors
                              "src": "1742:1:29",
=======
                              "src": "1742:1:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                              "src": "1742:1:32",
=======
                              "src": "1742:1:33",
>>>>>>> origin/ajibigad/token-swap
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "1732:6:2"
||||||| merged common ancestors
                            "src": "1732:6:29"
=======
                            "src": "1732:6:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "1732:6:32"
=======
                            "src": "1732:6:33"
>>>>>>> origin/ajibigad/token-swap
                          },
                          "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "1732:12:2"
||||||| merged common ancestors
                          "src": "1732:12:29"
=======
                          "src": "1732:12:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                          "src": "1732:12:32"
=======
                          "src": "1732:12:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulExpressionStatement",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "1732:12:2"
||||||| merged common ancestors
                        "src": "1732:12:29"
=======
                        "src": "1732:12:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "1732:12:32"
=======
                        "src": "1732:12:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "1696:5:2"
||||||| merged common ancestors
                            "src": "1696:5:29"
=======
                            "src": "1696:5:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "1696:5:32"
=======
                            "src": "1696:5:33"
>>>>>>> origin/ajibigad/token-swap
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                                "src": "1721:5:2"
||||||| merged common ancestors
                                "src": "1721:5:29"
=======
                                "src": "1721:5:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                                "src": "1721:5:32"
=======
                                "src": "1721:5:33"
>>>>>>> origin/ajibigad/token-swap
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                              "src": "1703:17:2"
||||||| merged common ancestors
                              "src": "1703:17:29"
=======
                              "src": "1703:17:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                              "src": "1703:17:32"
=======
                              "src": "1703:17:33"
>>>>>>> origin/ajibigad/token-swap
                            },
                            "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "1703:24:2"
||||||| merged common ancestors
                            "src": "1703:24:29"
=======
                            "src": "1703:24:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                            "src": "1703:24:32"
=======
                            "src": "1703:24:33"
>>>>>>> origin/ajibigad/token-swap
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "1693:2:2"
||||||| merged common ancestors
                          "src": "1693:2:29"
=======
                          "src": "1693:2:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                          "src": "1693:2:32"
=======
                          "src": "1693:2:33"
>>>>>>> origin/ajibigad/token-swap
                        },
                        "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "1693:35:2"
||||||| merged common ancestors
                        "src": "1693:35:29"
=======
                        "src": "1693:35:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "1693:35:32"
=======
                        "src": "1693:35:33"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "1686:6:2"
||||||| merged common ancestors
                      "src": "1686:6:29"
=======
                      "src": "1686:6:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "src": "1686:6:32"
=======
                      "src": "1686:6:33"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "nodeType": "YulFunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "1686:43:2"
||||||| merged common ancestors
                    "src": "1686:43:29"
=======
                    "src": "1686:43:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "1686:43:32"
=======
                    "src": "1686:43:33"
>>>>>>> origin/ajibigad/token-swap
                  },
                  "nodeType": "YulIf",
<<<<<<< HEAD
<<<<<<< HEAD
                  "src": "1683:2:2"
||||||| merged common ancestors
                  "src": "1683:2:29"
=======
                  "src": "1683:2:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "src": "1683:2:32"
=======
                  "src": "1683:2:33"
>>>>>>> origin/ajibigad/token-swap
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "1666:5:2",
||||||| merged common ancestors
                "src": "1666:5:29",
=======
                "src": "1666:5:32",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "1666:5:32",
=======
                "src": "1666:5:33",
>>>>>>> origin/ajibigad/token-swap
                "type": ""
              }
            ],
<<<<<<< HEAD
<<<<<<< HEAD
            "src": "1630:122:2"
||||||| merged common ancestors
            "src": "1630:122:29"
=======
            "src": "1630:122:32"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "src": "1630:122:32"
=======
            "src": "1630:122:33"
>>>>>>> origin/ajibigad/token-swap
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
<<<<<<< HEAD
<<<<<<< HEAD
      "id": 2,
||||||| merged common ancestors
      "id": 29,
=======
      "id": 32,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
      "id": 32,
=======
      "id": 33,
>>>>>>> origin/ajibigad/token-swap
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
<<<<<<< HEAD
<<<<<<< HEAD
  "sourceMap": "62:2024:1:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "62:2024:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1859:70;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1448:69;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;755:55;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1859:70;1921:4;1859:70;;;:::o;1448:69::-;1509:4;1448:69;;;:::o;755:55::-;802:4;755:55;;;:::o;7:139:2:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:262::-;;673:2;661:9;652:7;648:23;644:32;641:2;;;689:1;686;679:12;641:2;732:1;757:53;802:7;793:6;782:9;778:22;757:53;:::i;:::-;747:63;;703:117;631:196;;;;:::o;833:118::-;920:24;938:5;920:24;:::i;:::-;915:3;908:37;898:53;;:::o;957:222::-;;1088:2;1077:9;1073:18;1065:26;;1101:71;1169:1;1158:9;1154:17;1145:6;1101:71;:::i;:::-;1055:124;;;;:::o;1185:96::-;;1251:24;1269:5;1251:24;:::i;:::-;1240:35;;1230:51;;;:::o;1287:126::-;;1364:42;1357:5;1353:54;1342:65;;1332:81;;;:::o;1419:77::-;;1485:5;1474:16;;1464:32;;;:::o;1502:122::-;1575:24;1593:5;1575:24;:::i;:::-;1568:5;1565:35;1555:2;;1614:1;1611;1604:12;1555:2;1545:79;:::o;1630:122::-;1703:24;1721:5;1703:24;:::i;:::-;1696:5;1693:35;1683:2;;1742:1;1739;1732:12;1683:2;1673:79;:::o",
  "source": "pragma solidity ^0.7.0;\r\npragma experimental ABIEncoderV2;\r\n\r\ncontract VToken {\r\n    // No implementation, just the function signature. This is just so Solidity can work out how to call it.\r\n    \r\n    /*\r\n    * @notice   The mint function transfers an asset into the protocol, which begins accumulating interest\r\n    * based on the current Supply Rate for The user receives a quantity of vTokens equal to the\r\n    * underlying tokens tokens supplied, divided by the current Exchange Rate.\r\n    * msg.sender: The account which shall supply the asset, and own the minted vTokens.\r\n    * @param    mintAmount The amount of the asset to be supplied, in units of the underlying asset.\r\n    * @return   status 0 on success, otherwise an Error code\r\n    */\r\n    function mint(uint mintAmount) public returns (uint) {}\r\n    \r\n    /*\r\n    * @notice   The redeem underlying function converts vTokens into a specified quantity of the underlying asset, \r\n    * and returns them to the user. The amount of vTokens redeemed is equal to the quantity of underlying tokens received, \r\n    * divided by the current Exchange Rate. The amount redeemed must be less than the user's Account Liquidity \r\n    * and the market's available liquidity.\r\n    * msg.sender: The account to which redeemed funds shall be transferred.\r\n    * @param    redeemAmount The amount of underlying to be redeemed.\r\n    * @return   status 0 on success, otherwise an Error code\r\n    */\r\n    function redeemUnderlying(uint redeemAmount) public returns (uint) {}\r\n    \r\n    /*\r\n    * @notice   The user's underlying balance, representing their assets in the protocol,\r\n    * is equal to the user's vToken balance multiplied by the Exchange Rate.\r\n    * @param    account The account to get the underlying balance of.\r\n    * @return   The amount of underlying currently owned by the account.\r\n    */\r\n    function balanceOfUnderlying(address account) public returns (uint) {}\r\n    \r\n    \r\n    // function exchangeRateCurrent() returns (uint) {}\r\n    //exchangeRate = (getCash() + totalBorrows() - totalReserves()) / totalSupply()\r\n}",
  "sourcePath": "C:/Users/USER/Desktop/BLOCKCHAIN/SmartBet/contracts/VToken.sol",
||||||| merged common ancestors
  "sourceMap": "87:1989:4:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "87:1989:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1854:70;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1451:69;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;769:55;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1854:70;1916:4;1854:70;;;:::o;1451:69::-;1512:4;1451:69;;;:::o;769:55::-;816:4;769:55;;;:::o;7:139:29:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:262::-;;673:2;661:9;652:7;648:23;644:32;641:2;;;689:1;686;679:12;641:2;732:1;757:53;802:7;793:6;782:9;778:22;757:53;:::i;:::-;747:63;;703:117;631:196;;;;:::o;833:118::-;920:24;938:5;920:24;:::i;:::-;915:3;908:37;898:53;;:::o;957:222::-;;1088:2;1077:9;1073:18;1065:26;;1101:71;1169:1;1158:9;1154:17;1145:6;1101:71;:::i;:::-;1055:124;;;;:::o;1185:96::-;;1251:24;1269:5;1251:24;:::i;:::-;1240:35;;1230:51;;;:::o;1287:126::-;;1364:42;1357:5;1353:54;1342:65;;1332:81;;;:::o;1419:77::-;;1485:5;1474:16;;1464:32;;;:::o;1502:122::-;1575:24;1593:5;1575:24;:::i;:::-;1568:5;1565:35;1555:2;;1614:1;1611;1604:12;1555:2;1545:79;:::o;1630:122::-;1703:24;1721:5;1703:24;:::i;:::-;1696:5;1693:35;1683:2;;1742:1;1739;1732:12;1683:2;1673:79;:::o",
  "source": "pragma solidity ^0.7.0;\npragma experimental ABIEncoderV2;\n\n\n//TODO: move to VToken.sol\ncontract VToken {\n    // No implementation, just the function signature. This is just so Solidity can work out how to call it.\n    \n    /*\n    * @notice   The mint function transfers an asset into the protocol, which begins accumulating interest\n    * based on the current Supply Rate for The user receives a quantity of vTokens equal to the\n    * underlying tokens tokens supplied, divided by the current Exchange Rate.\n    * msg.sender: The account which shall supply the asset, and own the minted vTokens.\n    * @param    mintAmount The amount of the asset to be supplied, in units of the underlying asset.\n    * @return   status 0 on success, otherwise an Error code\n    */\n    function mint(uint mintAmount) public returns (uint) {}\n    \n    /*\n    * @notice   The redeem underlying function converts vTokens into a specified quantity of the underlying asset, \n    * and returns them to the user. The amount of vTokens redeemed is equal to the quantity of underlying tokens received, \n    * divided by the current Exchange Rate. The amount redeemed must be less than the user's Account Liquidity \n    * and the market's available liquidity.\n    * msg.sender: The account to which redeemed funds shall be transferred.\n    * @param    redeemAmount The amount of underlying to be redeemed.\n    * @return   status 0 on success, otherwise an Error code\n    */\n    function redeemUnderlying(uint redeemAmount) public returns (uint) {}\n    \n    /*\n    * @notice   The user's underlying balance, representing their assets in the protocol,\n    * is equal to the user's vToken balance multiplied by the Exchange Rate.\n    * @param    account The account to get the underlying balance of.\n    * @return   The amount of underlying currently owned by the account.\n    */\n    function balanceOfUnderlying(address account) public returns (uint) {}\n    \n    \n    // function exchangeRateCurrent() returns (uint) {}\n    //exchangeRate = (getCash() + totalBorrows() - totalReserves()) / totalSupply()\n}\n\n//TODO: move to Bep20.sol\ncontract Bep20 {\n    /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) public returns (bool) {}\n}\n\n/*\n* @notice Integrates with Venus lending protocol\n*/\ncontract SmartInvestV1 {\n    \n    uint256 public totalTreasury;\n    address public constant vTOKEN_ADDRESS = 0x08e0A5575De71037aE36AbfAfb516595fE68e5e4; // BSC testnet Venus vTokens (vBUSD)\n    address public constant BASE_BEP20 = 0x8301F2213c0eeD49a7E28Ae4c3e91722919B8B47; //underlying asset: BUSD\n    \n    function invest(uint256 amount) public {\n        \n        Bep20 underlying = Bep20(BASE_BEP20);     // get a handle for the underlying asset\n        VToken vToken = VToken(vTOKEN_ADDRESS);   // get a handle for the corresponding vToken Contract\n        underlying.approve(address(vToken), amount); // approve the transfer\n        assert(vToken.mint(amount) == 0);            // mint the vTokens and assert there is no error\n    }\n    \n    function redeem(uint256 amount) public {\n        VToken vToken = VToken(vTOKEN_ADDRESS);\n        require(vToken.redeemUnderlying(amount) == 0, \"something went wrong\");\n    }\n    \n    function getBalance() public {\n        VToken vToken = VToken(vTOKEN_ADDRESS);\n        uint tokens = vToken.balanceOfUnderlying(msg.sender);\n    }\n    \n    // function exchangeRateCurrent() public {\n    //     VBep20 vToken = VToken(vTOKEN_ADDRESS);\n    //     uint exchangeRateMantissa = vToken.exchangeRateCurrent();\n    // }\n    \n}\n\n\n// const vTokenDecimals = 8; // all vTokens have 8 decimal places\n// const underlying = new web3.eth.Contract(bep20Abi, busdAddress);\n// const vToken = new web3.eth.Contract(vTokenAbi, vBusdAddress);\n// const underlyingDecimals = await underlying.methods.decimals().call();\n// const exchangeRateCurrent = await vToken.methods.exchangeRateCurrent().call();\n// const mantissa = 18 + parseInt(underlyingDecimals) - vTokenDecimals;\n// const onevTokenInUnderlying = exchangeRateCurrent / Math.pow(10, mantissa);\n// console.log('1 vBUSD can be redeemed for', oneVTokenInUnderlying, 'BUSD');",
  "sourcePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/SmartInvestV1.sol",
=======
  "sourceMap": "59:1989:7:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "59:1989:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1826:70;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1423:69;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;741:55;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1826:70;1888:4;1826:70;;;:::o;1423:69::-;1484:4;1423:69;;;:::o;741:55::-;788:4;741:55;;;:::o;7:139:32:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:262::-;;673:2;661:9;652:7;648:23;644:32;641:2;;;689:1;686;679:12;641:2;732:1;757:53;802:7;793:6;782:9;778:22;757:53;:::i;:::-;747:63;;703:117;631:196;;;;:::o;833:118::-;920:24;938:5;920:24;:::i;:::-;915:3;908:37;898:53;;:::o;957:222::-;;1088:2;1077:9;1073:18;1065:26;;1101:71;1169:1;1158:9;1154:17;1145:6;1101:71;:::i;:::-;1055:124;;;;:::o;1185:96::-;;1251:24;1269:5;1251:24;:::i;:::-;1240:35;;1230:51;;;:::o;1287:126::-;;1364:42;1357:5;1353:54;1342:65;;1332:81;;;:::o;1419:77::-;;1485:5;1474:16;;1464:32;;;:::o;1502:122::-;1575:24;1593:5;1575:24;:::i;:::-;1568:5;1565:35;1555:2;;1614:1;1611;1604:12;1555:2;1545:79;:::o;1630:122::-;1703:24;1721:5;1703:24;:::i;:::-;1696:5;1693:35;1683:2;;1742:1;1739;1732:12;1683:2;1673:79;:::o",
||||||| merged common ancestors
  "sourceMap": "59:1989:7:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "59:1989:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1826:70;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1423:69;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;741:55;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1826:70;1888:4;1826:70;;;:::o;1423:69::-;1484:4;1423:69;;;:::o;741:55::-;788:4;741:55;;;:::o;7:139:32:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:262::-;;673:2;661:9;652:7;648:23;644:32;641:2;;;689:1;686;679:12;641:2;732:1;757:53;802:7;793:6;782:9;778:22;757:53;:::i;:::-;747:63;;703:117;631:196;;;;:::o;833:118::-;920:24;938:5;920:24;:::i;:::-;915:3;908:37;898:53;;:::o;957:222::-;;1088:2;1077:9;1073:18;1065:26;;1101:71;1169:1;1158:9;1154:17;1145:6;1101:71;:::i;:::-;1055:124;;;;:::o;1185:96::-;;1251:24;1269:5;1251:24;:::i;:::-;1240:35;;1230:51;;;:::o;1287:126::-;;1364:42;1357:5;1353:54;1342:65;;1332:81;;;:::o;1419:77::-;;1485:5;1474:16;;1464:32;;;:::o;1502:122::-;1575:24;1593:5;1575:24;:::i;:::-;1568:5;1565:35;1555:2;;1614:1;1611;1604:12;1555:2;1545:79;:::o;1630:122::-;1703:24;1721:5;1703:24;:::i;:::-;1696:5;1693:35;1683:2;;1742:1;1739;1732:12;1683:2;1673:79;:::o",
=======
  "sourceMap": "59:1989:8:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "59:1989:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1826:70;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1423:69;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;741:55;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1826:70;1888:4;1826:70;;;:::o;1423:69::-;1484:4;1423:69;;;:::o;741:55::-;788:4;741:55;;;:::o;7:139:33:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:262::-;;673:2;661:9;652:7;648:23;644:32;641:2;;;689:1;686;679:12;641:2;732:1;757:53;802:7;793:6;782:9;778:22;757:53;:::i;:::-;747:63;;703:117;631:196;;;;:::o;833:118::-;920:24;938:5;920:24;:::i;:::-;915:3;908:37;898:53;;:::o;957:222::-;;1088:2;1077:9;1073:18;1065:26;;1101:71;1169:1;1158:9;1154:17;1145:6;1101:71;:::i;:::-;1055:124;;;;:::o;1185:96::-;;1251:24;1269:5;1251:24;:::i;:::-;1240:35;;1230:51;;;:::o;1287:126::-;;1364:42;1357:5;1353:54;1342:65;;1332:81;;;:::o;1419:77::-;;1485:5;1474:16;;1464:32;;;:::o;1502:122::-;1575:24;1593:5;1575:24;:::i;:::-;1568:5;1565:35;1555:2;;1614:1;1611;1604:12;1555:2;1545:79;:::o;1630:122::-;1703:24;1721:5;1703:24;:::i;:::-;1696:5;1693:35;1683:2;;1742:1;1739;1732:12;1683:2;1673:79;:::o",
>>>>>>> origin/ajibigad/token-swap
  "source": "pragma solidity ^0.7.0;\npragma experimental ABIEncoderV2;\n\ncontract VToken {\n    // No implementation, just the function signature. This is just so Solidity can work out how to call it.\n    \n    /*\n    * @notice   The mint function transfers an asset into the protocol, which begins accumulating interest\n    * based on the current Supply Rate for The user receives a quantity of vTokens equal to the\n    * underlying tokens tokens supplied, divided by the current Exchange Rate.\n    * msg.sender: The account which shall supply the asset, and own the minted vTokens.\n    * @param    mintAmount The amount of the asset to be supplied, in units of the underlying asset.\n    * @return   status 0 on success, otherwise an Error code\n    */\n    function mint(uint mintAmount) public returns (uint) {}\n    \n    /*\n    * @notice   The redeem underlying function converts vTokens into a specified quantity of the underlying asset, \n    * and returns them to the user. The amount of vTokens redeemed is equal to the quantity of underlying tokens received, \n    * divided by the current Exchange Rate. The amount redeemed must be less than the user's Account Liquidity \n    * and the market's available liquidity.\n    * msg.sender: The account to which redeemed funds shall be transferred.\n    * @param    redeemAmount The amount of underlying to be redeemed.\n    * @return   status 0 on success, otherwise an Error code\n    */\n    function redeemUnderlying(uint redeemAmount) public returns (uint) {}\n    \n    /*\n    * @notice   The user's underlying balance, representing their assets in the protocol,\n    * is equal to the user's vToken balance multiplied by the Exchange Rate.\n    * @param    account The account to get the underlying balance of.\n    * @return   The amount of underlying currently owned by the account.\n    */\n    function balanceOfUnderlying(address account) public returns (uint) {}\n    \n    \n    // function exchangeRateCurrent() returns (uint) {}\n    //exchangeRate = (getCash() + totalBorrows() - totalReserves()) / totalSupply()\n}",
  "sourcePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/VToken.sol",
>>>>>>> origin/ajibigad/token-swap
  "ast": {
<<<<<<< HEAD
    "absolutePath": "/C/Users/USER/Desktop/BLOCKCHAIN/SmartBet/contracts/VToken.sol",
||||||| merged common ancestors
    "absolutePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/SmartInvestV1.sol",
=======
    "absolutePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/VToken.sol",
>>>>>>> origin/ajibigad/token-swap
    "exportedSymbols": {
      "VToken": [
<<<<<<< HEAD
<<<<<<< HEAD
        46
||||||| merged common ancestors
        1087
=======
        1485
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
        1485
=======
        1621
>>>>>>> origin/ajibigad/token-swap
      ]
    },
<<<<<<< HEAD
<<<<<<< HEAD
    "id": 47,
||||||| merged common ancestors
    "id": 1186,
=======
    "id": 1486,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
    "id": 1486,
=======
    "id": 1622,
>>>>>>> origin/ajibigad/token-swap
    "nodeType": "SourceUnit",
    "nodes": [
      {
<<<<<<< HEAD
<<<<<<< HEAD
        "id": 20,
||||||| merged common ancestors
        "id": 1061,
=======
        "id": 1459,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
        "id": 1459,
=======
        "id": 1595,
>>>>>>> origin/ajibigad/token-swap
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
<<<<<<< HEAD
<<<<<<< HEAD
        "src": "0:23:1"
||||||| merged common ancestors
        "src": "0:23:4"
=======
        "src": "0:23:7"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
        "src": "0:23:7"
=======
        "src": "0:23:8"
>>>>>>> origin/ajibigad/token-swap
      },
      {
<<<<<<< HEAD
<<<<<<< HEAD
        "id": 21,
||||||| merged common ancestors
        "id": 1062,
=======
        "id": 1460,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
        "id": 1460,
=======
        "id": 1596,
>>>>>>> origin/ajibigad/token-swap
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
<<<<<<< HEAD
<<<<<<< HEAD
        "src": "25:33:1"
||||||| merged common ancestors
        "src": "24:33:4"
=======
        "src": "24:33:7"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
        "src": "24:33:7"
=======
        "src": "24:33:8"
>>>>>>> origin/ajibigad/token-swap
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
<<<<<<< HEAD
<<<<<<< HEAD
        "id": 46,
||||||| merged common ancestors
        "id": 1087,
=======
        "id": 1485,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
        "id": 1485,
=======
        "id": 1621,
>>>>>>> origin/ajibigad/token-swap
        "linearizedBaseContracts": [
<<<<<<< HEAD
<<<<<<< HEAD
          46
||||||| merged common ancestors
          1087
=======
          1485
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
          1485
=======
          1621
>>>>>>> origin/ajibigad/token-swap
        ],
        "name": "VToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
<<<<<<< HEAD
<<<<<<< HEAD
              "id": 28,
||||||| merged common ancestors
              "id": 1069,
=======
              "id": 1467,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "id": 1467,
=======
              "id": 1603,
>>>>>>> origin/ajibigad/token-swap
              "nodeType": "Block",
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "808:2:1",
||||||| merged common ancestors
              "src": "822:2:4",
=======
              "src": "794:2:7",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "794:2:7",
=======
              "src": "794:2:8",
>>>>>>> origin/ajibigad/token-swap
              "statements": []
            },
            "functionSelector": "a0712d68",
<<<<<<< HEAD
<<<<<<< HEAD
            "id": 29,
||||||| merged common ancestors
            "id": 1070,
=======
            "id": 1468,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "id": 1468,
=======
            "id": 1604,
>>>>>>> origin/ajibigad/token-swap
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
<<<<<<< HEAD
              "id": 24,
||||||| merged common ancestors
              "id": 1065,
=======
              "id": 1463,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "id": 1463,
=======
              "id": 1599,
>>>>>>> origin/ajibigad/token-swap
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
<<<<<<< HEAD
                  "id": 23,
||||||| merged common ancestors
                  "id": 1064,
=======
                  "id": 1462,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "id": 1462,
=======
                  "id": 1598,
>>>>>>> origin/ajibigad/token-swap
                  "mutability": "mutable",
                  "name": "mintAmount",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
<<<<<<< HEAD
                  "scope": 29,
                  "src": "769:15:1",
||||||| merged common ancestors
                  "scope": 1070,
                  "src": "783:15:4",
=======
                  "scope": 1468,
                  "src": "755:15:7",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "scope": 1468,
                  "src": "755:15:7",
=======
                  "scope": 1604,
                  "src": "755:15:8",
>>>>>>> origin/ajibigad/token-swap
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
<<<<<<< HEAD
                    "id": 22,
||||||| merged common ancestors
                    "id": 1063,
=======
                    "id": 1461,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "id": 1461,
=======
                    "id": 1597,
>>>>>>> origin/ajibigad/token-swap
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "769:4:1",
||||||| merged common ancestors
                    "src": "783:4:4",
=======
                    "src": "755:4:7",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "755:4:7",
=======
                    "src": "755:4:8",
>>>>>>> origin/ajibigad/token-swap
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "768:17:1"
||||||| merged common ancestors
              "src": "782:17:4"
=======
              "src": "754:17:7"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "754:17:7"
=======
              "src": "754:17:8"
>>>>>>> origin/ajibigad/token-swap
            },
            "returnParameters": {
<<<<<<< HEAD
<<<<<<< HEAD
              "id": 27,
||||||| merged common ancestors
              "id": 1068,
=======
              "id": 1466,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "id": 1466,
=======
              "id": 1602,
>>>>>>> origin/ajibigad/token-swap
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
<<<<<<< HEAD
                  "id": 26,
||||||| merged common ancestors
                  "id": 1067,
=======
                  "id": 1465,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "id": 1465,
=======
                  "id": 1601,
>>>>>>> origin/ajibigad/token-swap
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
<<<<<<< HEAD
                  "scope": 29,
                  "src": "802:4:1",
||||||| merged common ancestors
                  "scope": 1070,
                  "src": "816:4:4",
=======
                  "scope": 1468,
                  "src": "788:4:7",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "scope": 1468,
                  "src": "788:4:7",
=======
                  "scope": 1604,
                  "src": "788:4:8",
>>>>>>> origin/ajibigad/token-swap
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
<<<<<<< HEAD
                    "id": 25,
||||||| merged common ancestors
                    "id": 1066,
=======
                    "id": 1464,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "id": 1464,
=======
                    "id": 1600,
>>>>>>> origin/ajibigad/token-swap
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "802:4:1",
||||||| merged common ancestors
                    "src": "816:4:4",
=======
                    "src": "788:4:7",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "788:4:7",
=======
                    "src": "788:4:8",
>>>>>>> origin/ajibigad/token-swap
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "801:6:1"
||||||| merged common ancestors
              "src": "815:6:4"
=======
              "src": "787:6:7"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "787:6:7"
=======
              "src": "787:6:8"
>>>>>>> origin/ajibigad/token-swap
            },
<<<<<<< HEAD
<<<<<<< HEAD
            "scope": 46,
            "src": "755:55:1",
||||||| merged common ancestors
            "scope": 1087,
            "src": "769:55:4",
=======
            "scope": 1485,
            "src": "741:55:7",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "scope": 1485,
            "src": "741:55:7",
=======
            "scope": 1621,
            "src": "741:55:8",
>>>>>>> origin/ajibigad/token-swap
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
<<<<<<< HEAD
              "id": 36,
||||||| merged common ancestors
              "id": 1077,
=======
              "id": 1475,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "id": 1475,
=======
              "id": 1611,
>>>>>>> origin/ajibigad/token-swap
              "nodeType": "Block",
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "1515:2:1",
||||||| merged common ancestors
              "src": "1518:2:4",
=======
              "src": "1490:2:7",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "1490:2:7",
=======
              "src": "1490:2:8",
>>>>>>> origin/ajibigad/token-swap
              "statements": []
            },
            "functionSelector": "852a12e3",
<<<<<<< HEAD
<<<<<<< HEAD
            "id": 37,
||||||| merged common ancestors
            "id": 1078,
=======
            "id": 1476,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "id": 1476,
=======
            "id": 1612,
>>>>>>> origin/ajibigad/token-swap
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemUnderlying",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
<<<<<<< HEAD
              "id": 32,
||||||| merged common ancestors
              "id": 1073,
=======
              "id": 1471,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "id": 1471,
=======
              "id": 1607,
>>>>>>> origin/ajibigad/token-swap
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
<<<<<<< HEAD
                  "id": 31,
||||||| merged common ancestors
                  "id": 1072,
=======
                  "id": 1470,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "id": 1470,
=======
                  "id": 1606,
>>>>>>> origin/ajibigad/token-swap
                  "mutability": "mutable",
                  "name": "redeemAmount",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
<<<<<<< HEAD
                  "scope": 37,
                  "src": "1474:17:1",
||||||| merged common ancestors
                  "scope": 1078,
                  "src": "1477:17:4",
=======
                  "scope": 1476,
                  "src": "1449:17:7",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "scope": 1476,
                  "src": "1449:17:7",
=======
                  "scope": 1612,
                  "src": "1449:17:8",
>>>>>>> origin/ajibigad/token-swap
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
<<<<<<< HEAD
                    "id": 30,
||||||| merged common ancestors
                    "id": 1071,
=======
                    "id": 1469,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "id": 1469,
=======
                    "id": 1605,
>>>>>>> origin/ajibigad/token-swap
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "1474:4:1",
||||||| merged common ancestors
                    "src": "1477:4:4",
=======
                    "src": "1449:4:7",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "1449:4:7",
=======
                    "src": "1449:4:8",
>>>>>>> origin/ajibigad/token-swap
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "1473:19:1"
||||||| merged common ancestors
              "src": "1476:19:4"
=======
              "src": "1448:19:7"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "1448:19:7"
=======
              "src": "1448:19:8"
>>>>>>> origin/ajibigad/token-swap
            },
            "returnParameters": {
<<<<<<< HEAD
<<<<<<< HEAD
              "id": 35,
||||||| merged common ancestors
              "id": 1076,
=======
              "id": 1474,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "id": 1474,
=======
              "id": 1610,
>>>>>>> origin/ajibigad/token-swap
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
<<<<<<< HEAD
                  "id": 34,
||||||| merged common ancestors
                  "id": 1075,
=======
                  "id": 1473,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "id": 1473,
=======
                  "id": 1609,
>>>>>>> origin/ajibigad/token-swap
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
<<<<<<< HEAD
                  "scope": 37,
                  "src": "1509:4:1",
||||||| merged common ancestors
                  "scope": 1078,
                  "src": "1512:4:4",
=======
                  "scope": 1476,
                  "src": "1484:4:7",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "scope": 1476,
                  "src": "1484:4:7",
=======
                  "scope": 1612,
                  "src": "1484:4:8",
>>>>>>> origin/ajibigad/token-swap
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
<<<<<<< HEAD
                    "id": 33,
||||||| merged common ancestors
                    "id": 1074,
=======
                    "id": 1472,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "id": 1472,
=======
                    "id": 1608,
>>>>>>> origin/ajibigad/token-swap
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "1509:4:1",
||||||| merged common ancestors
                    "src": "1512:4:4",
=======
                    "src": "1484:4:7",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "1484:4:7",
=======
                    "src": "1484:4:8",
>>>>>>> origin/ajibigad/token-swap
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "1508:6:1"
||||||| merged common ancestors
              "src": "1511:6:4"
=======
              "src": "1483:6:7"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "1483:6:7"
=======
              "src": "1483:6:8"
>>>>>>> origin/ajibigad/token-swap
            },
<<<<<<< HEAD
<<<<<<< HEAD
            "scope": 46,
            "src": "1448:69:1",
||||||| merged common ancestors
            "scope": 1087,
            "src": "1451:69:4",
=======
            "scope": 1485,
            "src": "1423:69:7",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "scope": 1485,
            "src": "1423:69:7",
=======
            "scope": 1621,
            "src": "1423:69:8",
>>>>>>> origin/ajibigad/token-swap
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
<<<<<<< HEAD
              "id": 44,
||||||| merged common ancestors
              "id": 1085,
=======
              "id": 1483,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "id": 1483,
=======
              "id": 1619,
>>>>>>> origin/ajibigad/token-swap
              "nodeType": "Block",
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "1927:2:1",
||||||| merged common ancestors
              "src": "1922:2:4",
=======
              "src": "1894:2:7",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "1894:2:7",
=======
              "src": "1894:2:8",
>>>>>>> origin/ajibigad/token-swap
              "statements": []
            },
            "functionSelector": "3af9e669",
<<<<<<< HEAD
<<<<<<< HEAD
            "id": 45,
||||||| merged common ancestors
            "id": 1086,
=======
            "id": 1484,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "id": 1484,
=======
            "id": 1620,
>>>>>>> origin/ajibigad/token-swap
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOfUnderlying",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
<<<<<<< HEAD
              "id": 40,
||||||| merged common ancestors
              "id": 1081,
=======
              "id": 1479,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "id": 1479,
=======
              "id": 1615,
>>>>>>> origin/ajibigad/token-swap
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
<<<<<<< HEAD
                  "id": 39,
||||||| merged common ancestors
                  "id": 1080,
=======
                  "id": 1478,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "id": 1478,
=======
                  "id": 1614,
>>>>>>> origin/ajibigad/token-swap
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
<<<<<<< HEAD
                  "scope": 45,
                  "src": "1888:15:1",
||||||| merged common ancestors
                  "scope": 1086,
                  "src": "1883:15:4",
=======
                  "scope": 1484,
                  "src": "1855:15:7",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "scope": 1484,
                  "src": "1855:15:7",
=======
                  "scope": 1620,
                  "src": "1855:15:8",
>>>>>>> origin/ajibigad/token-swap
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
<<<<<<< HEAD
                    "id": 38,
||||||| merged common ancestors
                    "id": 1079,
=======
                    "id": 1477,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "id": 1477,
=======
                    "id": 1613,
>>>>>>> origin/ajibigad/token-swap
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "1888:7:1",
||||||| merged common ancestors
                    "src": "1883:7:4",
=======
                    "src": "1855:7:7",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "1855:7:7",
=======
                    "src": "1855:7:8",
>>>>>>> origin/ajibigad/token-swap
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "1887:17:1"
||||||| merged common ancestors
              "src": "1882:17:4"
=======
              "src": "1854:17:7"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "1854:17:7"
=======
              "src": "1854:17:8"
>>>>>>> origin/ajibigad/token-swap
            },
            "returnParameters": {
<<<<<<< HEAD
<<<<<<< HEAD
              "id": 43,
||||||| merged common ancestors
              "id": 1084,
=======
              "id": 1482,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "id": 1482,
=======
              "id": 1618,
>>>>>>> origin/ajibigad/token-swap
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
<<<<<<< HEAD
                  "id": 42,
||||||| merged common ancestors
                  "id": 1083,
=======
                  "id": 1481,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "id": 1481,
=======
                  "id": 1617,
>>>>>>> origin/ajibigad/token-swap
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
<<<<<<< HEAD
                  "scope": 45,
                  "src": "1921:4:1",
||||||| merged common ancestors
                  "scope": 1086,
                  "src": "1916:4:4",
=======
                  "scope": 1484,
                  "src": "1888:4:7",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                  "scope": 1484,
                  "src": "1888:4:7",
=======
                  "scope": 1620,
                  "src": "1888:4:8",
>>>>>>> origin/ajibigad/token-swap
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
<<<<<<< HEAD
                    "id": 41,
||||||| merged common ancestors
                    "id": 1082,
=======
                    "id": 1480,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "id": 1480,
=======
                    "id": 1616,
>>>>>>> origin/ajibigad/token-swap
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "1921:4:1",
||||||| merged common ancestors
                    "src": "1916:4:4",
=======
                    "src": "1888:4:7",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "1888:4:7",
=======
                    "src": "1888:4:8",
>>>>>>> origin/ajibigad/token-swap
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "1920:6:1"
||||||| merged common ancestors
              "src": "1915:6:4"
=======
              "src": "1887:6:7"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "src": "1887:6:7"
=======
              "src": "1887:6:8"
>>>>>>> origin/ajibigad/token-swap
            },
<<<<<<< HEAD
<<<<<<< HEAD
            "scope": 46,
            "src": "1859:70:1",
||||||| merged common ancestors
            "scope": 1087,
            "src": "1854:70:4",
=======
            "scope": 1485,
            "src": "1826:70:7",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "scope": 1485,
            "src": "1826:70:7",
=======
            "scope": 1621,
            "src": "1826:70:8",
>>>>>>> origin/ajibigad/token-swap
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
<<<<<<< HEAD
<<<<<<< HEAD
        "scope": 47,
        "src": "62:2024:1"
      }
    ],
    "src": "0:2086:1"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/C/Users/USER/Desktop/BLOCKCHAIN/SmartBet/contracts/VToken.sol",
      "exportedSymbols": {
        "VToken": [
          46
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".0"
          ]
        },
        "id": 20,
        "name": "PragmaDirective",
        "src": "0:23:1"
||||||| merged common ancestors
        "scope": 1186,
        "src": "87:1989:4"
=======
        "scope": 1486,
        "src": "59:1989:7"
||||||| merged common ancestors
        "scope": 1486,
        "src": "59:1989:7"
=======
        "scope": 1622,
        "src": "59:1989:8"
>>>>>>> origin/ajibigad/token-swap
      }
    ],
    "src": "0:2048:8"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/VToken.sol",
      "exportedSymbols": {
        "VToken": [
          1621
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".0"
          ]
        },
        "id": 1595,
        "name": "PragmaDirective",
<<<<<<< HEAD
        "src": "0:23:7"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
        "src": "0:23:7"
=======
        "src": "0:23:8"
>>>>>>> origin/ajibigad/token-swap
      },
      {
<<<<<<< HEAD
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 21,
        "name": "PragmaDirective",
        "src": "25:33:1"
||||||| merged common ancestors
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1099,
        "linearizedBaseContracts": [
          1099
        ],
        "name": "Bep20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1097,
              "nodeType": "Block",
              "src": "2816:2:4",
              "statements": []
            },
            "documentation": {
              "id": 1088,
              "nodeType": "StructuredDocumentation",
              "src": "2125:616:4",
              "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
            },
            "functionSelector": "095ea7b3",
            "id": 1098,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1090,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 1098,
                  "src": "2761:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1089,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2761:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1092,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1098,
                  "src": "2778:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1091,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2778:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2760:33:4"
            },
            "returnParameters": {
              "id": 1096,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1095,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1098,
                  "src": "2810:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1094,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2810:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2809:6:4"
            },
            "scope": 1099,
            "src": "2744:74:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1186,
        "src": "2104:716:4"
=======
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 1596,
        "name": "PragmaDirective",
<<<<<<< HEAD
        "src": "24:33:7"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
        "src": "24:33:7"
=======
        "src": "24:33:8"
>>>>>>> origin/ajibigad/token-swap
      },
      {
<<<<<<< HEAD
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            46
          ],
          "name": "VToken",
          "scope": 47
        },
        "children": [
||||||| merged common ancestors
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1185,
        "linearizedBaseContracts": [
          1185
        ],
        "name": "SmartInvestV1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "897534a9",
            "id": 1101,
            "mutability": "mutable",
            "name": "totalTreasury",
            "nodeType": "VariableDeclaration",
            "scope": 1185,
            "src": "2911:28:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1100,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2911:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "1876ed4f",
            "id": 1104,
            "mutability": "constant",
            "name": "vTOKEN_ADDRESS",
            "nodeType": "VariableDeclaration",
            "scope": 1185,
            "src": "2945:83:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1102,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2945:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830386530413535373544653731303337614533364162664166623531363539356645363865356534",
              "id": 1103,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2986:42:4",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0x08e0A5575De71037aE36AbfAfb516595fE68e5e4"
            },
            "visibility": "public"
          },
=======
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1621
          ],
          "name": "VToken",
          "scope": 1622
        },
        "children": [
>>>>>>> origin/ajibigad/token-swap
          {
<<<<<<< HEAD
            "attributes": {
              "functionSelector": "a0712d68",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mint",
              "scope": 46,
||||||| merged common ancestors
            "constant": true,
            "functionSelector": "9b3c25a5",
            "id": 1107,
            "mutability": "constant",
            "name": "BASE_BEP20",
            "nodeType": "VariableDeclaration",
            "scope": 1185,
            "src": "3071:79:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1105,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3071:7:4",
=======
            "attributes": {
              "functionSelector": "a0712d68",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mint",
              "scope": 1485,
>>>>>>> origin/ajibigad/token-swap
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
<<<<<<< HEAD
                      "name": "mintAmount",
                      "scope": 29,
||||||| merged common ancestors
                      "name": "underlying",
                      "nodeType": "VariableDeclaration",
                      "scope": 1143,
                      "src": "3244:16:4",
=======
                      "name": "mintAmount",
                      "scope": 1468,
>>>>>>> origin/ajibigad/token-swap
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
<<<<<<< HEAD
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 22,
                        "name": "ElementaryTypeName",
                        "src": "769:4:1"
||||||| merged common ancestors
                        "id": 1115,
                        "name": "BASE_BEP20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1107,
                        "src": "3269:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
=======
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 1461,
                        "name": "ElementaryTypeName",
                        "src": "755:4:7"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
<<<<<<< HEAD
                    "id": 23,
                    "name": "VariableDeclaration",
                    "src": "769:15:1"
                  }
                ],
                "id": 24,
                "name": "ParameterList",
                "src": "768:17:1"
              },
              {
                "children": [
                  {
                    "attributes": {
||||||| merged common ancestors
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1114,
                      "name": "Bep20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1099,
                      "src": "3263:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Bep20_$1099_$",
                        "typeString": "type(contract Bep20)"
                      }
                    },
                    "id": 1116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3263:17:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Bep20_$1099",
                      "typeString": "contract Bep20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3244:36:4"
                },
                {
                  "assignments": [
                    1119
                  ],
                  "declarations": [
                    {
=======
                    "id": 1462,
                    "name": "VariableDeclaration",
                    "src": "755:15:7"
                  }
                ],
                "id": 1463,
                "name": "ParameterList",
                "src": "754:17:7"
              },
              {
                "children": [
                  {
                    "attributes": {
>>>>>>> origin/ajibigad/token-swap
                      "constant": false,
                      "mutability": "mutable",
<<<<<<< HEAD
                      "name": "",
                      "scope": 29,
||||||| merged common ancestors
                      "name": "vToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 1143,
                      "src": "3335:13:4",
=======
                      "name": "",
                      "scope": 1468,
>>>>>>> origin/ajibigad/token-swap
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
<<<<<<< HEAD
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 25,
                        "name": "ElementaryTypeName",
                        "src": "802:4:1"
||||||| merged common ancestors
                        "id": 1121,
                        "name": "vTOKEN_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1104,
                        "src": "3358:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
=======
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 1464,
                        "name": "ElementaryTypeName",
                        "src": "788:4:7"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
<<<<<<< HEAD
                    "id": 26,
                    "name": "VariableDeclaration",
                    "src": "802:4:1"
                  }
                ],
                "id": 27,
                "name": "ParameterList",
                "src": "801:6:1"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
||||||| merged common ancestors
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1120,
                      "name": "VToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1087,
                      "src": "3351:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_VToken_$1087_$",
                        "typeString": "type(contract VToken)"
                      }
                    },
                    "id": 1122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3351:22:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VToken_$1087",
                      "typeString": "contract VToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3335:38:4"
=======
                    "id": 1465,
                    "name": "VariableDeclaration",
                    "src": "788:4:7"
                  }
                ],
                "id": 1466,
                "name": "ParameterList",
                "src": "787:6:7"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
>>>>>>> origin/ajibigad/token-swap
                },
<<<<<<< HEAD
                "children": [],
                "id": 28,
||||||| merged common ancestors
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1129,
                            "name": "vToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1119,
                            "src": "3466:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VToken_$1087",
                              "typeString": "contract VToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VToken_$1087",
                              "typeString": "contract VToken"
                            }
                          ],
                          "id": 1128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3458:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1127,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3458:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3458:15:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1131,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1109,
                        "src": "3475:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1124,
                        "name": "underlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1113,
                        "src": "3439:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Bep20_$1099",
                          "typeString": "contract Bep20"
                        }
                      },
                      "id": 1126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1098,
                      "src": "3439:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3439:43:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1133,
                  "nodeType": "ExpressionStatement",
                  "src": "3439:43:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1137,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1109,
                              "src": "3535:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1135,
                              "name": "vToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1119,
                              "src": "3523:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_VToken_$1087",
                                "typeString": "contract VToken"
                              }
                            },
                            "id": 1136,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1070,
                            "src": "3523:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) external returns (uint256)"
                            }
                          },
                          "id": 1138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3523:19:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3546:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3523:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1134,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "3516:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3516:32:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1142,
                  "nodeType": "ExpressionStatement",
                  "src": "3516:32:4"
                }
              ]
            },
            "functionSelector": "2afcf480",
            "id": 1144,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "invest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1109,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1144,
                  "src": "3202:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1108,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3202:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3201:16:4"
            },
            "returnParameters": {
              "id": 1111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3225:0:4"
            },
            "scope": 1185,
            "src": "3186:429:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1165,
              "nodeType": "Block",
              "src": "3664:134:4",
              "statements": [
                {
                  "assignments": [
                    1150
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1150,
                      "mutability": "mutable",
                      "name": "vToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 1165,
                      "src": "3674:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VToken_$1087",
                        "typeString": "contract VToken"
                      },
                      "typeName": {
                        "id": 1149,
                        "name": "VToken",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1087,
                        "src": "3674:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VToken_$1087",
                          "typeString": "contract VToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1154,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1152,
                        "name": "vTOKEN_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1104,
                        "src": "3697:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1151,
                      "name": "VToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1087,
                      "src": "3690:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_VToken_$1087_$",
                        "typeString": "type(contract VToken)"
                      }
                    },
                    "id": 1153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3690:22:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VToken_$1087",
                      "typeString": "contract VToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3674:38:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1158,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1146,
                              "src": "3754:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1156,
                              "name": "vToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1150,
                              "src": "3730:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_VToken_$1087",
                                "typeString": "contract VToken"
                              }
                            },
                            "id": 1157,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "redeemUnderlying",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1078,
                            "src": "3730:23:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) external returns (uint256)"
                            }
                          },
                          "id": 1159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3730:31:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3765:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3730:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "736f6d657468696e672077656e742077726f6e67",
                        "id": 1162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3768:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f43bf56badfe6ff82d1cf3b32f384dd5aa20c66e5e2ef1990ae19705d02f4f09",
                          "typeString": "literal_string \"something went wrong\""
                        },
                        "value": "something went wrong"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f43bf56badfe6ff82d1cf3b32f384dd5aa20c66e5e2ef1990ae19705d02f4f09",
                          "typeString": "literal_string \"something went wrong\""
                        }
                      ],
                      "id": 1155,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3722:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3722:69:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1164,
                  "nodeType": "ExpressionStatement",
                  "src": "3722:69:4"
                }
              ]
            },
            "functionSelector": "db006a75",
            "id": 1166,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1146,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1166,
                  "src": "3641:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1145,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3641:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3640:16:4"
            },
            "returnParameters": {
              "id": 1148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3664:0:4"
            },
            "scope": 1185,
            "src": "3625:173:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1183,
              "nodeType": "Block",
              "src": "3837:117:4",
              "statements": [
                {
                  "assignments": [
                    1170
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1170,
                      "mutability": "mutable",
                      "name": "vToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 1183,
                      "src": "3847:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VToken_$1087",
                        "typeString": "contract VToken"
                      },
                      "typeName": {
                        "id": 1169,
                        "name": "VToken",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1087,
                        "src": "3847:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VToken_$1087",
                          "typeString": "contract VToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1174,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1172,
                        "name": "vTOKEN_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1104,
                        "src": "3870:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1171,
                      "name": "VToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1087,
                      "src": "3863:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_VToken_$1087_$",
                        "typeString": "type(contract VToken)"
                      }
                    },
                    "id": 1173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3863:22:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VToken_$1087",
                      "typeString": "contract VToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3847:38:4"
                },
                {
                  "assignments": [
                    1176
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1176,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nodeType": "VariableDeclaration",
                      "scope": 1183,
                      "src": "3895:11:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1175,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3895:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1182,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1179,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3936:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3936:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 1177,
                        "name": "vToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1170,
                        "src": "3909:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VToken_$1087",
                          "typeString": "contract VToken"
                        }
                      },
                      "id": 1178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOfUnderlying",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1086,
                      "src": "3909:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) external returns (uint256)"
                      }
                    },
                    "id": 1181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3909:38:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3895:52:4"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 1184,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3827:2:4"
            },
            "returnParameters": {
              "id": 1168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3837:0:4"
            },
            "scope": 1185,
            "src": "3808:146:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1186,
        "src": "2877:1265:4"
      }
    ],
    "src": "0:4729:4"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/ajibigad/crytoproject/SmartBet/contracts/SmartInvestV1.sol",
      "exportedSymbols": {
        "Bep20": [
          1099
        ],
        "SmartInvestV1": [
          1185
        ],
        "VToken": [
          1087
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".0"
          ]
        },
        "id": 1061,
        "name": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 1062,
        "name": "PragmaDirective",
        "src": "24:33:4"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1087
          ],
          "name": "VToken",
          "scope": 1186
        },
        "children": [
          {
            "attributes": {
              "functionSelector": "a0712d68",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mint",
              "scope": 1087,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "mintAmount",
                      "scope": 1070,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 1063,
                        "name": "ElementaryTypeName",
                        "src": "783:4:4"
                      }
                    ],
                    "id": 1064,
                    "name": "VariableDeclaration",
                    "src": "783:15:4"
                  }
                ],
                "id": 1065,
                "name": "ParameterList",
                "src": "782:17:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1070,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 1066,
                        "name": "ElementaryTypeName",
                        "src": "816:4:4"
                      }
                    ],
                    "id": 1067,
                    "name": "VariableDeclaration",
                    "src": "816:4:4"
                  }
                ],
                "id": 1068,
                "name": "ParameterList",
                "src": "815:6:4"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 1069,
                "name": "Block",
                "src": "822:2:4"
              }
            ],
            "id": 1070,
            "name": "FunctionDefinition",
            "src": "769:55:4"
          },
          {
            "attributes": {
              "functionSelector": "852a12e3",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "redeemUnderlying",
              "scope": 1087,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "redeemAmount",
                      "scope": 1078,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 1071,
                        "name": "ElementaryTypeName",
                        "src": "1477:4:4"
                      }
                    ],
                    "id": 1072,
                    "name": "VariableDeclaration",
                    "src": "1477:17:4"
                  }
                ],
                "id": 1073,
                "name": "ParameterList",
                "src": "1476:19:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1078,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 1074,
                        "name": "ElementaryTypeName",
                        "src": "1512:4:4"
                      }
                    ],
                    "id": 1075,
                    "name": "VariableDeclaration",
                    "src": "1512:4:4"
                  }
                ],
                "id": 1076,
                "name": "ParameterList",
                "src": "1511:6:4"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 1077,
                "name": "Block",
                "src": "1518:2:4"
              }
            ],
            "id": 1078,
            "name": "FunctionDefinition",
            "src": "1451:69:4"
          },
          {
            "attributes": {
              "functionSelector": "3af9e669",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "balanceOfUnderlying",
              "scope": 1087,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "account",
                      "scope": 1086,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1079,
                        "name": "ElementaryTypeName",
                        "src": "1883:7:4"
                      }
                    ],
                    "id": 1080,
                    "name": "VariableDeclaration",
                    "src": "1883:15:4"
                  }
                ],
                "id": 1081,
                "name": "ParameterList",
                "src": "1882:17:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1086,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 1082,
                        "name": "ElementaryTypeName",
                        "src": "1916:4:4"
                      }
                    ],
                    "id": 1083,
                    "name": "VariableDeclaration",
                    "src": "1916:4:4"
                  }
                ],
                "id": 1084,
                "name": "ParameterList",
                "src": "1915:6:4"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 1085,
                "name": "Block",
                "src": "1922:2:4"
              }
            ],
            "id": 1086,
            "name": "FunctionDefinition",
            "src": "1854:70:4"
          }
        ],
        "id": 1087,
        "name": "ContractDefinition",
        "src": "87:1989:4"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1099
          ],
          "name": "Bep20",
          "scope": 1186
        },
        "children": [
          {
            "attributes": {
              "functionSelector": "095ea7b3",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "approve",
              "scope": 1099,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                },
                "id": 1088,
                "name": "StructuredDocumentation",
                "src": "2125:616:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "spender",
                      "scope": 1098,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1089,
                        "name": "ElementaryTypeName",
                        "src": "2761:7:4"
                      }
                    ],
                    "id": 1090,
                    "name": "VariableDeclaration",
                    "src": "2761:15:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "scope": 1098,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1091,
                        "name": "ElementaryTypeName",
                        "src": "2778:7:4"
                      }
                    ],
                    "id": 1092,
                    "name": "VariableDeclaration",
                    "src": "2778:14:4"
                  }
                ],
                "id": 1093,
                "name": "ParameterList",
                "src": "2760:33:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1098,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 1094,
                        "name": "ElementaryTypeName",
                        "src": "2810:4:4"
                      }
                    ],
                    "id": 1095,
                    "name": "VariableDeclaration",
                    "src": "2810:4:4"
                  }
                ],
                "id": 1096,
                "name": "ParameterList",
                "src": "2809:6:4"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 1097,
                "name": "Block",
                "src": "2816:2:4"
              }
            ],
            "id": 1098,
            "name": "FunctionDefinition",
            "src": "2744:74:4"
          }
        ],
        "id": 1099,
        "name": "ContractDefinition",
        "src": "2104:716:4"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1185
          ],
          "name": "SmartInvestV1",
          "scope": 1186
        },
        "children": [
          {
            "attributes": {
              "constant": false,
              "functionSelector": "897534a9",
              "mutability": "mutable",
              "name": "totalTreasury",
              "scope": 1185,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 1100,
                "name": "ElementaryTypeName",
                "src": "2911:7:4"
              }
            ],
            "id": 1101,
            "name": "VariableDeclaration",
            "src": "2911:28:4"
          },
          {
            "attributes": {
              "constant": true,
              "functionSelector": "1876ed4f",
              "mutability": "constant",
              "name": "vTOKEN_ADDRESS",
              "scope": 1185,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 1102,
                "name": "ElementaryTypeName",
                "src": "2945:7:4"
              },
              {
                "attributes": {
                  "hexvalue": "307830386530413535373544653731303337614533364162664166623531363539356645363865356534",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "address payable",
                  "value": "0x08e0A5575De71037aE36AbfAfb516595fE68e5e4"
                },
                "id": 1103,
                "name": "Literal",
                "src": "2986:42:4"
              }
            ],
            "id": 1104,
            "name": "VariableDeclaration",
            "src": "2945:83:4"
          },
          {
            "attributes": {
              "constant": true,
              "functionSelector": "9b3c25a5",
              "mutability": "constant",
              "name": "BASE_BEP20",
              "scope": 1185,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 1105,
                "name": "ElementaryTypeName",
                "src": "3071:7:4"
              },
              {
                "attributes": {
                  "hexvalue": "307838333031463232313363306565443439613745323841653463336539313732323931394238423437",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "address payable",
                  "value": "0x8301F2213c0eeD49a7E28Ae4c3e91722919B8B47"
                },
                "id": 1106,
                "name": "Literal",
                "src": "3108:42:4"
              }
            ],
            "id": 1107,
            "name": "VariableDeclaration",
            "src": "3071:79:4"
          },
          {
            "attributes": {
              "functionSelector": "2afcf480",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
<<<<<<< HEAD
              "name": "invest",
              "scope": 1185,
||||||| merged common ancestors
              "name": "mint",
              "scope": 1485,
=======
              "name": "mint",
              "scope": 1621,
>>>>>>> origin/ajibigad/token-swap
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
<<<<<<< HEAD
                      "name": "amount",
                      "scope": 1144,
||||||| merged common ancestors
                      "name": "mintAmount",
                      "scope": 1468,
=======
                      "name": "mintAmount",
                      "scope": 1604,
>>>>>>> origin/ajibigad/token-swap
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
<<<<<<< HEAD
                        "id": 1108,
||||||| merged common ancestors
                        "id": 1461,
=======
                        "id": 1597,
>>>>>>> origin/ajibigad/token-swap
                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "3202:7:4"
||||||| merged common ancestors
                        "src": "755:4:7"
=======
                        "src": "755:4:8"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
<<<<<<< HEAD
                    "id": 1109,
||||||| merged common ancestors
                    "id": 1462,
=======
                    "id": 1598,
>>>>>>> origin/ajibigad/token-swap
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "3202:14:4"
||||||| merged common ancestors
                    "src": "755:15:7"
=======
                    "src": "755:15:8"
>>>>>>> origin/ajibigad/token-swap
                  }
                ],
<<<<<<< HEAD
                "id": 1110,
||||||| merged common ancestors
                "id": 1463,
=======
                "id": 1599,
>>>>>>> origin/ajibigad/token-swap
                "name": "ParameterList",
<<<<<<< HEAD
                "src": "3201:16:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1111,
                "name": "ParameterList",
                "src": "3225:0:4"
||||||| merged common ancestors
                "src": "754:17:7"
=======
                "src": "754:17:8"
>>>>>>> origin/ajibigad/token-swap
              },
              {
                "children": [
                  {
                    "attributes": {
<<<<<<< HEAD
                      "assignments": [
                        1113
                      ]
||||||| merged common ancestors
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1468,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
=======
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1604,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "underlying",
                          "scope": 1143,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "contract Bep20",
                          "visibility": "internal"
                        },
<<<<<<< HEAD
                        "children": [
                          {
                            "attributes": {
                              "name": "Bep20",
                              "referencedDeclaration": 1099,
                              "type": "contract Bep20"
                            },
                            "id": 1112,
                            "name": "UserDefinedTypeName",
                            "src": "3244:5:4"
                          }
                        ],
                        "id": 1113,
                        "name": "VariableDeclaration",
                        "src": "3244:16:4"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "contract Bep20",
                          "type_conversion": true
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1099,
                              "type": "type(contract Bep20)",
                              "value": "Bep20"
                            },
                            "id": 1114,
                            "name": "Identifier",
                            "src": "3263:5:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1107,
                              "type": "address",
                              "value": "BASE_BEP20"
                            },
                            "id": 1115,
                            "name": "Identifier",
                            "src": "3269:10:4"
                          }
                        ],
                        "id": 1116,
                        "name": "FunctionCall",
                        "src": "3263:17:4"
||||||| merged common ancestors
                        "id": 1464,
                        "name": "ElementaryTypeName",
                        "src": "788:4:7"
=======
                        "id": 1600,
                        "name": "ElementaryTypeName",
                        "src": "788:4:8"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
<<<<<<< HEAD
                    "id": 1117,
                    "name": "VariableDeclarationStatement",
                    "src": "3244:36:4"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        1119
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "vToken",
                          "scope": 1143,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "contract VToken",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "VToken",
                              "referencedDeclaration": 1087,
                              "type": "contract VToken"
                            },
                            "id": 1118,
                            "name": "UserDefinedTypeName",
                            "src": "3335:6:4"
                          }
                        ],
                        "id": 1119,
                        "name": "VariableDeclaration",
                        "src": "3335:13:4"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "contract VToken",
                          "type_conversion": true
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1087,
                              "type": "type(contract VToken)",
                              "value": "VToken"
                            },
                            "id": 1120,
                            "name": "Identifier",
                            "src": "3351:6:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1104,
                              "type": "address",
                              "value": "vTOKEN_ADDRESS"
                            },
                            "id": 1121,
                            "name": "Identifier",
                            "src": "3358:14:4"
                          }
                        ],
                        "id": 1122,
                        "name": "FunctionCall",
                        "src": "3351:22:4"
                      }
                    ],
                    "id": 1123,
                    "name": "VariableDeclarationStatement",
                    "src": "3335:38:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "approve",
                              "referencedDeclaration": 1098,
                              "type": "function (address,uint256) external returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1113,
                                  "type": "contract Bep20",
                                  "value": "underlying"
                                },
                                "id": 1124,
                                "name": "Identifier",
                                "src": "3439:10:4"
                              }
                            ],
                            "id": 1126,
                            "name": "MemberAccess",
                            "src": "3439:18:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_VToken_$1087",
                                      "typeString": "contract VToken"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 1127,
                                    "name": "ElementaryTypeName",
                                    "src": "3458:7:4"
                                  }
                                ],
                                "id": 1128,
                                "name": "ElementaryTypeNameExpression",
                                "src": "3458:7:4"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1119,
                                  "type": "contract VToken",
                                  "value": "vToken"
                                },
                                "id": 1129,
                                "name": "Identifier",
                                "src": "3466:6:4"
                              }
                            ],
                            "id": 1130,
                            "name": "FunctionCall",
                            "src": "3458:15:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1109,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 1131,
                            "name": "Identifier",
                            "src": "3475:6:4"
                          }
                        ],
                        "id": 1132,
                        "name": "FunctionCall",
                        "src": "3439:43:4"
                      }
                    ],
                    "id": 1133,
                    "name": "ExpressionStatement",
                    "src": "3439:43:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 4294967293,
                              "type": "function (bool) pure",
                              "value": "assert"
                            },
                            "id": 1134,
                            "name": "Identifier",
                            "src": "3516:6:4"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "mint",
                                      "referencedDeclaration": 1070,
                                      "type": "function (uint256) external returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1119,
                                          "type": "contract VToken",
                                          "value": "vToken"
                                        },
                                        "id": 1135,
                                        "name": "Identifier",
                                        "src": "3523:6:4"
                                      }
                                    ],
                                    "id": 1136,
                                    "name": "MemberAccess",
                                    "src": "3523:11:4"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1109,
                                      "type": "uint256",
                                      "value": "amount"
                                    },
                                    "id": 1137,
                                    "name": "Identifier",
                                    "src": "3535:6:4"
                                  }
                                ],
                                "id": 1138,
                                "name": "FunctionCall",
                                "src": "3523:19:4"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 1139,
                                "name": "Literal",
                                "src": "3546:1:4"
                              }
                            ],
                            "id": 1140,
                            "name": "BinaryOperation",
                            "src": "3523:24:4"
                          }
                        ],
                        "id": 1141,
                        "name": "FunctionCall",
                        "src": "3516:32:4"
                      }
                    ],
                    "id": 1142,
                    "name": "ExpressionStatement",
                    "src": "3516:32:4"
||||||| merged common ancestors
                    "id": 1465,
                    "name": "VariableDeclaration",
                    "src": "788:4:7"
=======
                    "id": 1601,
                    "name": "VariableDeclaration",
                    "src": "788:4:8"
>>>>>>> origin/ajibigad/token-swap
                  }
                ],
<<<<<<< HEAD
                "id": 1143,
=======
||||||| merged common ancestors
                "id": 1466,
                "name": "ParameterList",
                "src": "787:6:7"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
=======
                "id": 1602,
                "name": "ParameterList",
                "src": "787:6:8"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
>>>>>>> origin/ajibigad/token-swap
                "children": [],
<<<<<<< HEAD
                "id": 1467,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "id": 1467,
=======
                "id": 1603,
>>>>>>> origin/ajibigad/token-swap
                "name": "Block",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "808:2:1"
||||||| merged common ancestors
                "src": "3225:390:4"
=======
                "src": "794:2:7"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "794:2:7"
=======
                "src": "794:2:8"
>>>>>>> origin/ajibigad/token-swap
              }
            ],
<<<<<<< HEAD
<<<<<<< HEAD
            "id": 29,
||||||| merged common ancestors
            "id": 1144,
=======
            "id": 1468,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "id": 1468,
=======
            "id": 1604,
>>>>>>> origin/ajibigad/token-swap
            "name": "FunctionDefinition",
<<<<<<< HEAD
<<<<<<< HEAD
            "src": "755:55:1"
||||||| merged common ancestors
            "src": "3186:429:4"
=======
            "src": "741:55:7"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "src": "741:55:7"
=======
            "src": "741:55:8"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "attributes": {
              "functionSelector": "852a12e3",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
<<<<<<< HEAD
              "name": "redeemUnderlying",
              "scope": 46,
||||||| merged common ancestors
              "name": "redeem",
              "scope": 1185,
=======
              "name": "redeemUnderlying",
<<<<<<< HEAD
              "scope": 1485,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "scope": 1485,
=======
              "scope": 1621,
>>>>>>> origin/ajibigad/token-swap
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
<<<<<<< HEAD
                      "name": "redeemAmount",
                      "scope": 37,
||||||| merged common ancestors
                      "name": "amount",
                      "scope": 1166,
=======
                      "name": "redeemAmount",
<<<<<<< HEAD
                      "scope": 1476,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                      "scope": 1476,
=======
                      "scope": 1612,
>>>>>>> origin/ajibigad/token-swap
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
<<<<<<< HEAD
<<<<<<< HEAD
                        "id": 30,
||||||| merged common ancestors
                        "id": 1145,
=======
                        "id": 1469,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "id": 1469,
=======
                        "id": 1605,
>>>>>>> origin/ajibigad/token-swap
                        "name": "ElementaryTypeName",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "1474:4:1"
||||||| merged common ancestors
                        "src": "3641:7:4"
=======
                        "src": "1449:4:7"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "1449:4:7"
=======
                        "src": "1449:4:8"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
<<<<<<< HEAD
<<<<<<< HEAD
                    "id": 31,
||||||| merged common ancestors
                    "id": 1146,
=======
                    "id": 1470,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "id": 1470,
=======
                    "id": 1606,
>>>>>>> origin/ajibigad/token-swap
                    "name": "VariableDeclaration",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "1474:17:1"
||||||| merged common ancestors
                    "src": "3641:14:4"
=======
                    "src": "1449:17:7"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "1449:17:7"
=======
                    "src": "1449:17:8"
>>>>>>> origin/ajibigad/token-swap
                  }
                ],
<<<<<<< HEAD
<<<<<<< HEAD
                "id": 32,
||||||| merged common ancestors
                "id": 1147,
                "name": "ParameterList",
                "src": "3640:16:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1148,
=======
                "id": 1471,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "id": 1471,
=======
                "id": 1607,
>>>>>>> origin/ajibigad/token-swap
                "name": "ParameterList",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "1473:19:1"
||||||| merged common ancestors
                "src": "3664:0:4"
=======
                "src": "1448:19:7"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "1448:19:7"
=======
                "src": "1448:19:8"
>>>>>>> origin/ajibigad/token-swap
              },
              {
                "children": [
                  {
                    "attributes": {
<<<<<<< HEAD
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 37,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
||||||| merged common ancestors
                      "assignments": [
                        1150
                      ]
=======
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1612,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
<<<<<<< HEAD
<<<<<<< HEAD
                        "id": 33,
                        "name": "ElementaryTypeName",
                        "src": "1509:4:1"
||||||| merged common ancestors
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_f43bf56badfe6ff82d1cf3b32f384dd5aa20c66e5e2ef1990ae19705d02f4f09",
                                  "typeString": "literal_string \"something went wrong\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 1155,
                            "name": "Identifier",
                            "src": "3722:7:4"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "redeemUnderlying",
                                      "referencedDeclaration": 1078,
                                      "type": "function (uint256) external returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1150,
                                          "type": "contract VToken",
                                          "value": "vToken"
                                        },
                                        "id": 1156,
                                        "name": "Identifier",
                                        "src": "3730:6:4"
                                      }
                                    ],
                                    "id": 1157,
                                    "name": "MemberAccess",
                                    "src": "3730:23:4"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1146,
                                      "type": "uint256",
                                      "value": "amount"
                                    },
                                    "id": 1158,
                                    "name": "Identifier",
                                    "src": "3754:6:4"
                                  }
                                ],
                                "id": 1159,
                                "name": "FunctionCall",
                                "src": "3730:31:4"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 1160,
                                "name": "Literal",
                                "src": "3765:1:4"
                              }
                            ],
                            "id": 1161,
                            "name": "BinaryOperation",
                            "src": "3730:36:4"
                          },
                          {
                            "attributes": {
                              "hexvalue": "736f6d657468696e672077656e742077726f6e67",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"something went wrong\"",
                              "value": "something went wrong"
                            },
                            "id": 1162,
                            "name": "Literal",
                            "src": "3768:22:4"
                          }
                        ],
                        "id": 1163,
                        "name": "FunctionCall",
                        "src": "3722:69:4"
=======
                        "id": 1472,
||||||| merged common ancestors
                        "id": 1472,
=======
                        "id": 1608,
>>>>>>> origin/ajibigad/token-swap
                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "1484:4:7"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "1484:4:7"
=======
                        "src": "1484:4:8"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
<<<<<<< HEAD
<<<<<<< HEAD
                    "id": 34,
                    "name": "VariableDeclaration",
                    "src": "1509:4:1"
||||||| merged common ancestors
                    "id": 1164,
                    "name": "ExpressionStatement",
                    "src": "3722:69:4"
=======
                    "id": 1473,
||||||| merged common ancestors
                    "id": 1473,
=======
                    "id": 1609,
>>>>>>> origin/ajibigad/token-swap
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "1484:4:7"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "1484:4:7"
=======
                    "src": "1484:4:8"
>>>>>>> origin/ajibigad/token-swap
                  }
                ],
<<<<<<< HEAD
<<<<<<< HEAD
                "id": 35,
                "name": "ParameterList",
                "src": "1508:6:1"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 36,
||||||| merged common ancestors
                "id": 1165,
=======
                "id": 1474,
||||||| merged common ancestors
                "id": 1474,
=======
                "id": 1610,
>>>>>>> origin/ajibigad/token-swap
                "name": "ParameterList",
                "src": "1483:6:8"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
<<<<<<< HEAD
                "id": 1475,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "id": 1475,
=======
                "id": 1611,
>>>>>>> origin/ajibigad/token-swap
                "name": "Block",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "1515:2:1"
||||||| merged common ancestors
                "src": "3664:134:4"
=======
                "src": "1490:2:7"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "1490:2:7"
=======
                "src": "1490:2:8"
>>>>>>> origin/ajibigad/token-swap
              }
            ],
<<<<<<< HEAD
<<<<<<< HEAD
            "id": 37,
||||||| merged common ancestors
            "id": 1166,
=======
            "id": 1476,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "id": 1476,
=======
            "id": 1612,
>>>>>>> origin/ajibigad/token-swap
            "name": "FunctionDefinition",
<<<<<<< HEAD
<<<<<<< HEAD
            "src": "1448:69:1"
||||||| merged common ancestors
            "src": "3625:173:4"
=======
            "src": "1423:69:7"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "src": "1423:69:7"
=======
            "src": "1423:69:8"
>>>>>>> origin/ajibigad/token-swap
          },
          {
            "attributes": {
              "functionSelector": "3af9e669",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
<<<<<<< HEAD
              "name": "balanceOfUnderlying",
              "scope": 46,
||||||| merged common ancestors
              "name": "getBalance",
              "scope": 1185,
=======
              "name": "balanceOfUnderlying",
<<<<<<< HEAD
              "scope": 1485,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
              "scope": 1485,
=======
              "scope": 1621,
>>>>>>> origin/ajibigad/token-swap
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
<<<<<<< HEAD
                      "constant": false,
                      "mutability": "mutable",
                      "name": "account",
                      "scope": 45,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
||||||| merged common ancestors
                      "assignments": [
                        1170
                      ]
=======
                      "constant": false,
                      "mutability": "mutable",
                      "name": "account",
                      "scope": 1620,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
<<<<<<< HEAD
<<<<<<< HEAD
                        "id": 38,
                        "name": "ElementaryTypeName",
                        "src": "1888:7:1"
||||||| merged common ancestors
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1087,
                              "type": "type(contract VToken)",
                              "value": "VToken"
                            },
                            "id": 1171,
                            "name": "Identifier",
                            "src": "3863:6:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1104,
                              "type": "address",
                              "value": "vTOKEN_ADDRESS"
                            },
                            "id": 1172,
                            "name": "Identifier",
                            "src": "3870:14:4"
                          }
                        ],
                        "id": 1173,
                        "name": "FunctionCall",
                        "src": "3863:22:4"
=======
                        "id": 1477,
||||||| merged common ancestors
                        "id": 1477,
=======
                        "id": 1613,
>>>>>>> origin/ajibigad/token-swap
                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "1855:7:7"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "1855:7:7"
=======
                        "src": "1855:7:8"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
<<<<<<< HEAD
<<<<<<< HEAD
                    "id": 39,
                    "name": "VariableDeclaration",
                    "src": "1888:15:1"
                  }
                ],
                "id": 40,
                "name": "ParameterList",
                "src": "1887:17:1"
              },
              {
                "children": [
||||||| merged common ancestors
                    "id": 1174,
                    "name": "VariableDeclarationStatement",
                    "src": "3847:38:4"
                  },
=======
                    "id": 1478,
||||||| merged common ancestors
                    "id": 1478,
=======
                    "id": 1614,
>>>>>>> origin/ajibigad/token-swap
                    "name": "VariableDeclaration",
                    "src": "1855:15:8"
                  }
                ],
                "id": 1615,
                "name": "ParameterList",
                "src": "1854:17:8"
              },
              {
                "children": [
>>>>>>> origin/ajibigad/token-swap
                  {
                    "attributes": {
<<<<<<< HEAD
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 45,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
||||||| merged common ancestors
                      "assignments": [
                        1176
                      ]
=======
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 1620,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
>>>>>>> origin/ajibigad/token-swap
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
<<<<<<< HEAD
<<<<<<< HEAD
                        "id": 41,
                        "name": "ElementaryTypeName",
                        "src": "1921:4:1"
||||||| merged common ancestors
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "balanceOfUnderlying",
                              "referencedDeclaration": 1086,
                              "type": "function (address) external returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1170,
                                  "type": "contract VToken",
                                  "value": "vToken"
                                },
                                "id": 1177,
                                "name": "Identifier",
                                "src": "3909:6:4"
                              }
                            ],
                            "id": 1178,
                            "name": "MemberAccess",
                            "src": "3909:26:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 1179,
                                "name": "Identifier",
                                "src": "3936:3:4"
                              }
                            ],
                            "id": 1180,
                            "name": "MemberAccess",
                            "src": "3936:10:4"
                          }
                        ],
                        "id": 1181,
                        "name": "FunctionCall",
                        "src": "3909:38:4"
=======
                        "id": 1480,
||||||| merged common ancestors
                        "id": 1480,
=======
                        "id": 1616,
>>>>>>> origin/ajibigad/token-swap
                        "name": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "1888:4:7"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                        "src": "1888:4:7"
=======
                        "src": "1888:4:8"
>>>>>>> origin/ajibigad/token-swap
                      }
                    ],
<<<<<<< HEAD
<<<<<<< HEAD
                    "id": 42,
                    "name": "VariableDeclaration",
                    "src": "1921:4:1"
||||||| merged common ancestors
                    "id": 1182,
                    "name": "VariableDeclarationStatement",
                    "src": "3895:52:4"
=======
                    "id": 1481,
||||||| merged common ancestors
                    "id": 1481,
=======
                    "id": 1617,
>>>>>>> origin/ajibigad/token-swap
                    "name": "VariableDeclaration",
<<<<<<< HEAD
                    "src": "1888:4:7"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                    "src": "1888:4:7"
=======
                    "src": "1888:4:8"
>>>>>>> origin/ajibigad/token-swap
                  }
                ],
<<<<<<< HEAD
<<<<<<< HEAD
                "id": 43,
                "name": "ParameterList",
                "src": "1920:6:1"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 44,
||||||| merged common ancestors
                "id": 1183,
=======
                "id": 1482,
||||||| merged common ancestors
                "id": 1482,
=======
                "id": 1618,
>>>>>>> origin/ajibigad/token-swap
                "name": "ParameterList",
                "src": "1887:6:8"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
<<<<<<< HEAD
                "id": 1483,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "id": 1483,
=======
                "id": 1619,
>>>>>>> origin/ajibigad/token-swap
                "name": "Block",
<<<<<<< HEAD
<<<<<<< HEAD
                "src": "1927:2:1"
||||||| merged common ancestors
                "src": "3837:117:4"
=======
                "src": "1894:2:7"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
                "src": "1894:2:7"
=======
                "src": "1894:2:8"
>>>>>>> origin/ajibigad/token-swap
              }
            ],
<<<<<<< HEAD
<<<<<<< HEAD
            "id": 45,
||||||| merged common ancestors
            "id": 1184,
=======
            "id": 1484,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "id": 1484,
=======
            "id": 1620,
>>>>>>> origin/ajibigad/token-swap
            "name": "FunctionDefinition",
<<<<<<< HEAD
<<<<<<< HEAD
            "src": "1859:70:1"
||||||| merged common ancestors
            "src": "3808:146:4"
=======
            "src": "1826:70:7"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
            "src": "1826:70:7"
=======
            "src": "1826:70:8"
>>>>>>> origin/ajibigad/token-swap
          }
        ],
<<<<<<< HEAD
<<<<<<< HEAD
        "id": 46,
||||||| merged common ancestors
        "id": 1185,
=======
        "id": 1485,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
        "id": 1485,
=======
        "id": 1621,
>>>>>>> origin/ajibigad/token-swap
        "name": "ContractDefinition",
<<<<<<< HEAD
<<<<<<< HEAD
        "src": "62:2024:1"
||||||| merged common ancestors
        "src": "2877:1265:4"
=======
        "src": "59:1989:7"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
        "src": "59:1989:7"
=======
        "src": "59:1989:8"
>>>>>>> origin/ajibigad/token-swap
      }
    ],
<<<<<<< HEAD
<<<<<<< HEAD
    "id": 47,
||||||| merged common ancestors
    "id": 1186,
=======
    "id": 1486,
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
    "id": 1486,
=======
    "id": 1622,
>>>>>>> origin/ajibigad/token-swap
    "name": "SourceUnit",
<<<<<<< HEAD
<<<<<<< HEAD
    "src": "0:2086:1"
||||||| merged common ancestors
    "src": "0:4729:4"
=======
    "src": "0:2048:7"
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
    "src": "0:2048:7"
=======
    "src": "0:2048:8"
>>>>>>> origin/ajibigad/token-swap
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
<<<<<<< HEAD
<<<<<<< HEAD
  "updatedAt": "2021-04-11T19:33:47.464Z",
||||||| merged common ancestors
  "updatedAt": "2021-04-10T14:35:58.134Z",
=======
  "updatedAt": "2021-04-13T08:20:22.180Z",
>>>>>>> origin/ajibigad/token-swap
||||||| merged common ancestors
  "updatedAt": "2021-04-13T08:20:22.180Z",
=======
  "updatedAt": "2021-04-16T17:26:22.512Z",
>>>>>>> origin/ajibigad/token-swap
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}